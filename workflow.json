{
  "openapi" : "3.0.1",
  "info" : {
    "title" : "Adobe Workfront API",
    "version" : "v19.0"
  },
  "servers" : [ {
    "url" : "https://{domain}.my.workfront.com/attask/api/v19.0",
    "description" : "Production environment"
  }, {
    "url" : "https://{domain}.preview.workfront.com/attask/api/v19.0",
    "description" : "Preview environment"
  } ],
  "security" : [ {
    "ApiKeyHeader" : [ ]
  }, {
    "SessionIDHeader" : [ ]
  }, {
    "AtTaskCookie" : [ ]
  }, {
    "WFAuthCookie" : [ ]
  } ],
  "paths" : {
    "/login" : {
      "summary" : "Login",
      "post" : {
        "summary" : "Login",
        "operationId" : "login",
        "parameters" : [ {
          "name" : "username",
          "in" : "query",
          "description" : "Username",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "Password",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "subdomain",
          "in" : "query",
          "description" : "Subdomain",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "timeToLive",
          "in" : "query",
          "description" : "Session time to live in seconds",
          "required" : false,
          "schema" : {
            "type" : "number",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully authenticated. The session ID is returned in a cookie named `attask`. You need to include this cookie in subsequent requests.",
            "headers" : {
              "Set-Cookie" : {
                "schema" : {
                  "type" : "string",
                  "description" : "Authentication cookie named `attask`",
                  "example" : "attask=59982a73ed2a4574b4eaba70baf2e11e; Path=/; HttpOnly; Max-Age=28800; Expires=Fri, 27-Sep-2024 19:36:24 GMT"
                }
              }
            },
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "sessionID" : {
                          "type" : "string"
                        },
                        "userID" : {
                          "type" : "string"
                        },
                        "userCompanyID" : {
                          "type" : "string"
                        },
                        "isAdmin" : {
                          "type" : "boolean"
                        },
                        "timeZone" : {
                          "type" : "string"
                        },
                        "timeZoneName" : {
                          "type" : "string"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "customerID" : {
                          "type" : "string"
                        },
                        "tenantID" : {
                          "type" : "string"
                        },
                        "hasInsightsAccess" : {
                          "type" : "boolean"
                        },
                        "currency" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "string"
                            },
                            "symbol" : {
                              "type" : "string"
                            },
                            "groupingSeparator" : {
                              "type" : "string"
                            },
                            "decimalSeparator" : {
                              "type" : "string"
                            },
                            "fractionDigits" : {
                              "type" : "number",
                              "format" : "int32"
                            },
                            "useNegativeSign" : {
                              "type" : "boolean"
                            }
                          }
                        },
                        "versionInformation" : {
                          "type" : "object",
                          "properties" : {
                            "version" : {
                              "type" : "string"
                            },
                            "release" : {
                              "type" : "string"
                            },
                            "buildNumber" : {
                              "type" : "string"
                            },
                            "lastUpdated" : {
                              "type" : "string",
                              "format" : "date-time"
                            },
                            "currentAPI" : {
                              "type" : "number",
                              "format" : "int32"
                            },
                            "apiVersions" : {
                              "type" : "object",
                              "additionalProperties" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "security" : [ ]
      }
    },
    "/logout" : {
      "summary" : "Log out",
      "post" : {
        "summary" : "Logout",
        "operationId" : "logout",
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          }
        }
      }
    },
    "/session" : {
      "summary" : "Get session information",
      "get" : {
        "summary" : "Get session informatio",
        "operationId" : "session",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "sessionID" : {
                          "type" : "string"
                        },
                        "userID" : {
                          "type" : "string"
                        },
                        "userCompanyID" : {
                          "type" : "string"
                        },
                        "isAdmin" : {
                          "type" : "boolean"
                        },
                        "timeZone" : {
                          "type" : "string"
                        },
                        "timeZoneName" : {
                          "type" : "string"
                        },
                        "locale" : {
                          "type" : "string"
                        },
                        "iso3Country" : {
                          "type" : "string"
                        },
                        "iso3Language" : {
                          "type" : "string"
                        },
                        "customerID" : {
                          "type" : "string"
                        },
                        "tenantID" : {
                          "type" : "string"
                        },
                        "hasInsightsAccess" : {
                          "type" : "boolean"
                        },
                        "currency" : {
                          "type" : "object",
                          "properties" : {
                            "ID" : {
                              "type" : "string"
                            },
                            "symbol" : {
                              "type" : "string"
                            },
                            "groupingSeparator" : {
                              "type" : "string"
                            },
                            "decimalSeparator" : {
                              "type" : "string"
                            },
                            "fractionDigits" : {
                              "type" : "number",
                              "format" : "int32"
                            },
                            "useNegativeSign" : {
                              "type" : "boolean"
                            }
                          }
                        },
                        "versionInformation" : {
                          "type" : "object",
                          "properties" : {
                            "version" : {
                              "type" : "string"
                            },
                            "release" : {
                              "type" : "string"
                            },
                            "buildNumber" : {
                              "type" : "string"
                            },
                            "lastUpdated" : {
                              "type" : "string",
                              "format" : "date-time"
                            },
                            "currentAPI" : {
                              "type" : "number",
                              "format" : "int32"
                            },
                            "apiVersions" : {
                              "type" : "object",
                              "additionalProperties" : {
                                "type" : "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/info" : {
      "summary" : "Get customer sso and api version information",
      "get" : {
        "summary" : "Get customer sso and api version information",
        "operationId" : "info",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "sso" : {
                          "type" : "object",
                          "properties" : {
                            "ssoType" : {
                              "type" : "string"
                            },
                            "providerURL" : {
                              "type" : "string"
                            },
                            "providerPort" : {
                              "type" : "number",
                              "format" : "int32"
                            },
                            "signoutURL" : {
                              "type" : "string"
                            }
                          }
                        },
                        "versions" : {
                          "type" : "array",
                          "items" : {
                            "type" : "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/acknowledgement/{id}" : {
      "get" : {
        "summary" : "Get for Acknowledgement",
        "operationId" : "getAcknowledgement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Acknowledgement.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Acknowledgement",
        "operationId" : "editAcknowledgement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Acknowledgement.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Acknowledgement",
        "operationId" : "deleteAcknowledgement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement" : {
      "get" : {
        "summary" : "Bulk Get for Acknowledgement",
        "operationId" : "getAcknowledgements",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Acknowledgement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Acknowledgement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Acknowledgement",
        "operationId" : "editAcknowledgements",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Acknowledgement.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Acknowledgement.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Acknowledgement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Acknowledgement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a acknowledgement",
        "operationId" : "addAcknowledgements",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Acknowledgement.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Acknowledgement.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Acknowledgement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Acknowledgement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Acknowledgement",
        "operationId" : "deleteAcknowledgements",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement/count" : {
      "get" : {
        "summary" : "Count of acknowledgement",
        "operationId" : "countAcknowledgements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement/search" : {
      "get" : {
        "summary" : "Search of acknowledgement",
        "operationId" : "searchAcknowledgements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Acknowledgement.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement/report" : {
      "get" : {
        "summary" : "Report of acknowledgement",
        "operationId" : "reportAcknowledgements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement/acknowledge" : {
      "summary" : "acknowledge",
      "put" : {
        "operationId" : "acknowledgementAcknowledge",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement/acknowledgeMany" : {
      "summary" : "acknowledgeMany",
      "put" : {
        "operationId" : "acknowledgementAcknowledgeMany",
        "parameters" : [ {
          "name" : "objCodeIDs",
          "in" : "query",
          "description" : "objCodeIDs",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/acknowledgement/unacknowledge" : {
      "summary" : "unacknowledge",
      "put" : {
        "operationId" : "acknowledgementUnacknowledge",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accesslevel/{id}" : {
      "get" : {
        "summary" : "Get for AccessLevel",
        "operationId" : "getAccessLevel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AccessLevel.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a AccessLevel",
        "operationId" : "editAccessLevel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AccessLevel.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for AccessLevel",
        "operationId" : "deleteAccessLevel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accesslevel" : {
      "get" : {
        "summary" : "Bulk Get for AccessLevel",
        "operationId" : "getAccessLevels",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AccessLevel.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AccessLevel.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for AccessLevel",
        "operationId" : "editAccessLevels",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./AccessLevel.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./AccessLevel.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AccessLevel.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AccessLevel.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a accesslevel",
        "operationId" : "addAccessLevels",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./AccessLevel.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./AccessLevel.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AccessLevel.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AccessLevel.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for AccessLevel",
        "operationId" : "deleteAccessLevels",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accesslevel/replace" : {
      "put" : {
        "summary" : "Replace of accesslevel",
        "operationId" : "replaceAccessLevels",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accesslevel/count" : {
      "get" : {
        "summary" : "Count of accesslevel",
        "operationId" : "countAccessLevels",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accesslevel/search" : {
      "get" : {
        "summary" : "Search of accesslevel",
        "operationId" : "searchAccessLevels",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AccessLevel.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accesslevel/report" : {
      "get" : {
        "summary" : "Report of accesslevel",
        "operationId" : "reportAccessLevels",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/{id}" : {
      "get" : {
        "summary" : "Get for AccessRequest",
        "operationId" : "getAccessRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AccessRequest.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a AccessRequest",
        "operationId" : "editAccessRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AccessRequest.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for AccessRequest",
        "operationId" : "deleteAccessRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest" : {
      "get" : {
        "summary" : "Bulk Get for AccessRequest",
        "operationId" : "getAccessRequests",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AccessRequest.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AccessRequest.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for AccessRequest",
        "operationId" : "editAccessRequests",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./AccessRequest.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./AccessRequest.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AccessRequest.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AccessRequest.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a accessrequest",
        "operationId" : "addAccessRequests",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./AccessRequest.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./AccessRequest.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AccessRequest.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AccessRequest.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for AccessRequest",
        "operationId" : "deleteAccessRequests",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/count" : {
      "get" : {
        "summary" : "Count of accessrequest",
        "operationId" : "countAccessRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/search" : {
      "get" : {
        "summary" : "Search of accessrequest",
        "operationId" : "searchAccessRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AccessRequest.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/report" : {
      "get" : {
        "summary" : "Report of accessrequest",
        "operationId" : "reportAccessRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/grantAccess" : {
      "summary" : "grantAccess",
      "put" : {
        "operationId" : "accessRequestGrantAccess",
        "parameters" : [ {
          "name" : "accessRequestID",
          "in" : "query",
          "description" : "accessRequestID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionType",
          "in" : "query",
          "description" : "actionType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "description" : "forbiddenActions",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/grantObjectAccess" : {
      "summary" : "grantObjectAccess",
      "put" : {
        "operationId" : "accessRequestGrantObjectAccess",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "id",
          "in" : "query",
          "description" : "id",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "description" : "accessorID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionType",
          "in" : "query",
          "description" : "actionType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "description" : "forbiddenActions",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/ignore" : {
      "summary" : "ignore",
      "put" : {
        "operationId" : "accessRequestIgnore",
        "parameters" : [ {
          "name" : "accessRequestID",
          "in" : "query",
          "description" : "accessRequestID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/recall" : {
      "summary" : "recall",
      "put" : {
        "operationId" : "accessRequestRecall",
        "parameters" : [ {
          "name" : "accessRequestID",
          "in" : "query",
          "description" : "accessRequestID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/remind" : {
      "summary" : "remind",
      "put" : {
        "operationId" : "accessRequestRemind",
        "parameters" : [ {
          "name" : "accessRequestID",
          "in" : "query",
          "description" : "accessRequestID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/accessrequest/myAccessRequests" : {
      "summary" : "myAccessRequests",
      "get" : {
        "operationId" : "getAccessRequestMyAccessRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AccessRequest.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/activitylog/{id}" : {
      "get" : {
        "summary" : "Get for ActivityLog",
        "operationId" : "getActivityLog",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ActivityLog.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/activitylog" : {
      "get" : {
        "summary" : "Bulk Get for ActivityLog",
        "operationId" : "getActivityLogs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ActivityLog.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ActivityLog.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/activitylog/count" : {
      "get" : {
        "summary" : "Count of activitylog",
        "operationId" : "countActivityLogs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/activitylog/search" : {
      "get" : {
        "summary" : "Search of activitylog",
        "operationId" : "searchActivityLogs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ActivityLog.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/agilework/{id}" : {
      "get" : {
        "summary" : "Get for AgileWork",
        "operationId" : "getAgileWork",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AgileWork.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a AgileWork",
        "operationId" : "editAgileWork",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AgileWork.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for AgileWork",
        "operationId" : "deleteAgileWork",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/agilework" : {
      "get" : {
        "summary" : "Bulk Get for AgileWork",
        "operationId" : "getAgileWorks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AgileWork.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AgileWork.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for AgileWork",
        "operationId" : "editAgileWorks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./AgileWork.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./AgileWork.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AgileWork.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AgileWork.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for AgileWork",
        "operationId" : "deleteAgileWorks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/agilework/count" : {
      "get" : {
        "summary" : "Count of agilework",
        "operationId" : "countAgileWorks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/agilework/search" : {
      "get" : {
        "summary" : "Search of agilework",
        "operationId" : "searchAgileWorks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AgileWork.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/agilework/report" : {
      "get" : {
        "summary" : "Report of agilework",
        "operationId" : "reportAgileWorks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/agilework/bulkCopy" : {
      "summary" : "bulkCopy",
      "put" : {
        "operationId" : "agileWorkBulkCopy",
        "parameters" : [ {
          "name" : "agileWorkIDs",
          "in" : "query",
          "description" : "agileWorkIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement/{id}" : {
      "get" : {
        "summary" : "Get for Announcement",
        "operationId" : "getAnnouncement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Announcement.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Announcement",
        "operationId" : "editAnnouncement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Announcement.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Announcement",
        "operationId" : "deleteAnnouncement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement" : {
      "get" : {
        "summary" : "Bulk Get for Announcement",
        "operationId" : "getAnnouncements",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Announcement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Announcement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Announcement",
        "operationId" : "editAnnouncements",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Announcement.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Announcement.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Announcement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Announcement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a announcement",
        "operationId" : "addAnnouncements",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Announcement.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Announcement.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Announcement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Announcement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Announcement",
        "operationId" : "deleteAnnouncements",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement/count" : {
      "get" : {
        "summary" : "Count of announcement",
        "operationId" : "countAnnouncements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement/search" : {
      "get" : {
        "summary" : "Search of announcement",
        "operationId" : "searchAnnouncements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Announcement.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement/report" : {
      "get" : {
        "summary" : "Report of announcement",
        "operationId" : "reportAnnouncements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement/announcementDraftsForUser" : {
      "summary" : "announcementDraftsForUser",
      "get" : {
        "operationId" : "getAnnouncementAnnouncementDraftsForUser",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Announcement.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcement/sentAnnouncementsForUser" : {
      "summary" : "sentAnnouncementsForUser",
      "get" : {
        "operationId" : "getAnnouncementSentAnnouncementsForUser",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Announcement.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcementattachment/{id}" : {
      "get" : {
        "summary" : "Get for AnnouncementAttachment",
        "operationId" : "getAnnouncementAttachment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AnnouncementAttachment.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcementattachment" : {
      "get" : {
        "summary" : "Bulk Get for AnnouncementAttachment",
        "operationId" : "getAnnouncementAttachments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AnnouncementAttachment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AnnouncementAttachment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcementattachment/count" : {
      "get" : {
        "summary" : "Count of announcementattachment",
        "operationId" : "countAnnouncementAttachments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcementattachment/search" : {
      "get" : {
        "summary" : "Search of announcementattachment",
        "operationId" : "searchAnnouncementAttachments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AnnouncementAttachment.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/announcementattachment/report" : {
      "get" : {
        "summary" : "Report of announcementattachment",
        "operationId" : "reportAnnouncementAttachments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/apiversionmetadata/{id}" : {
      "get" : {
        "summary" : "Get for APIVersionMetadata",
        "operationId" : "getAPIVersionMetadata",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./APIVersionMetadata.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/apiversionmetadata" : {
      "get" : {
        "summary" : "Bulk Get for APIVersionMetadata",
        "operationId" : "getAPIVersionMetadatas",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./APIVersionMetadata.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./APIVersionMetadata.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/apiversionmetadata/count" : {
      "get" : {
        "summary" : "Count of apiversionmetadata",
        "operationId" : "countAPIVersionMetadatas",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/apiversionmetadata/search" : {
      "get" : {
        "summary" : "Search of apiversionmetadata",
        "operationId" : "searchAPIVersionMetadatas",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./APIVersionMetadata.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/apiversionmetadata/report" : {
      "get" : {
        "summary" : "Report of apiversionmetadata",
        "operationId" : "reportAPIVersionMetadatas",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approval/isInMyApprovals" : {
      "summary" : "isInMyApprovals",
      "put" : {
        "operationId" : "approvalIsInMyApprovals",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "query",
          "description" : "objectType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectID",
          "in" : "query",
          "description" : "objectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approval/isInMySubmittedApprovals" : {
      "summary" : "isInMySubmittedApprovals",
      "put" : {
        "operationId" : "approvalIsInMySubmittedApprovals",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "query",
          "description" : "objectType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objectID",
          "in" : "query",
          "description" : "objectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approval/myApprovals" : {
      "summary" : "myApprovals",
      "get" : {
        "operationId" : "getApprovalMyApprovals",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "query",
          "description" : "objectType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Approval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approval/mySubmittedApprovals" : {
      "summary" : "mySubmittedApprovals",
      "get" : {
        "operationId" : "getApprovalMySubmittedApprovals",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "query",
          "description" : "objectType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Approval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalprocess/{id}" : {
      "get" : {
        "summary" : "Get for ApprovalProcess",
        "operationId" : "getApprovalProcess",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ApprovalProcess.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ApprovalProcess",
        "operationId" : "editApprovalProcess",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ApprovalProcess.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ApprovalProcess",
        "operationId" : "deleteApprovalProcess",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalprocess" : {
      "get" : {
        "summary" : "Bulk Get for ApprovalProcess",
        "operationId" : "getApprovalProcesss",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ApprovalProcess.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ApprovalProcess.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ApprovalProcess",
        "operationId" : "editApprovalProcesss",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ApprovalProcess.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ApprovalProcess.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ApprovalProcess.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ApprovalProcess.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a approvalprocess",
        "operationId" : "addApprovalProcesss",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ApprovalProcess.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ApprovalProcess.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ApprovalProcess.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ApprovalProcess.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ApprovalProcess",
        "operationId" : "deleteApprovalProcesss",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalprocess/count" : {
      "get" : {
        "summary" : "Count of approvalprocess",
        "operationId" : "countApprovalProcesss",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalprocess/search" : {
      "get" : {
        "summary" : "Search of approvalprocess",
        "operationId" : "searchApprovalProcesss",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ApprovalProcess.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalprocess/report" : {
      "get" : {
        "summary" : "Report of approvalprocess",
        "operationId" : "reportApprovalProcesss",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalpath/{id}" : {
      "get" : {
        "summary" : "Get for ApprovalPath",
        "operationId" : "getApprovalPath",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ApprovalPath.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalpath" : {
      "get" : {
        "summary" : "Bulk Get for ApprovalPath",
        "operationId" : "getApprovalPaths",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ApprovalPath.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ApprovalPath.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalpath/count" : {
      "get" : {
        "summary" : "Count of approvalpath",
        "operationId" : "countApprovalPaths",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalpath/search" : {
      "get" : {
        "summary" : "Search of approvalpath",
        "operationId" : "searchApprovalPaths",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ApprovalPath.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/approvalpath/report" : {
      "get" : {
        "summary" : "Report of approvalpath",
        "operationId" : "reportApprovalPaths",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/{id}" : {
      "get" : {
        "summary" : "Get for Assignment",
        "operationId" : "getAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Assignment.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Assignment",
        "operationId" : "editAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Assignment.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Assignment",
        "operationId" : "deleteAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment" : {
      "get" : {
        "summary" : "Bulk Get for Assignment",
        "operationId" : "getAssignments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Assignment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Assignment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Assignment",
        "operationId" : "editAssignments",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Assignment.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Assignment.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Assignment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Assignment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a assignment",
        "operationId" : "addAssignments",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Assignment.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Assignment.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Assignment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Assignment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Assignment",
        "operationId" : "deleteAssignments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/count" : {
      "get" : {
        "summary" : "Count of assignment",
        "operationId" : "countAssignments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/search" : {
      "get" : {
        "summary" : "Search of assignment",
        "operationId" : "searchAssignments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Assignment.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/report" : {
      "get" : {
        "summary" : "Report of assignment",
        "operationId" : "reportAssignments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/assignUserToRoleOnProjects" : {
      "summary" : "assignUserToRoleOnProjects",
      "put" : {
        "operationId" : "assignmentAssignUserToRoleOnProjects",
        "parameters" : [ {
          "name" : "projectIDs",
          "in" : "query",
          "description" : "projectIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "swapUserID",
          "in" : "query",
          "description" : "swapUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapRoleID",
          "in" : "query",
          "description" : "swapRoleID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lockToRole",
          "in" : "query",
          "description" : "lockToRole",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/assignUserToRoleOnTasks" : {
      "summary" : "assignUserToRoleOnTasks",
      "put" : {
        "operationId" : "assignmentAssignUserToRoleOnTasks",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "swapUserID",
          "in" : "query",
          "description" : "swapUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapRoleID",
          "in" : "query",
          "description" : "swapRoleID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lockToRole",
          "in" : "query",
          "description" : "lockToRole",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/swapUsersOnProjects" : {
      "summary" : "swapUsersOnProjects",
      "put" : {
        "operationId" : "assignmentSwapUsersOnProjects",
        "parameters" : [ {
          "name" : "projectIDs",
          "in" : "query",
          "description" : "projectIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "swapToUserID",
          "in" : "query",
          "description" : "swapToUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapFromUserID",
          "in" : "query",
          "description" : "swapFromUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapRoleIDs",
          "in" : "query",
          "description" : "swapRoleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lockToRole",
          "in" : "query",
          "description" : "lockToRole",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/swapUsersOnTasks" : {
      "summary" : "swapUsersOnTasks",
      "put" : {
        "operationId" : "assignmentSwapUsersOnTasks",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "swapToUserID",
          "in" : "query",
          "description" : "swapToUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapFromUserID",
          "in" : "query",
          "description" : "swapFromUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapRoleIDs",
          "in" : "query",
          "description" : "swapRoleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "lockToRole",
          "in" : "query",
          "description" : "lockToRole",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/unassignUserFromProjects" : {
      "summary" : "unassignUserFromProjects",
      "put" : {
        "operationId" : "assignmentUnassignUserFromProjects",
        "parameters" : [ {
          "name" : "projectIDs",
          "in" : "query",
          "description" : "projectIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "unassignUserID",
          "in" : "query",
          "description" : "unassignUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapRoleIDs",
          "in" : "query",
          "description" : "swapRoleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/unassignUserFromTasks" : {
      "summary" : "unassignUserFromTasks",
      "put" : {
        "operationId" : "assignmentUnassignUserFromTasks",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "unassignUserID",
          "in" : "query",
          "description" : "unassignUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "swapRoleIDs",
          "in" : "query",
          "description" : "swapRoleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/getAssignAssignmentsForTasks" : {
      "summary" : "getAssignAssignmentsForTasks",
      "get" : {
        "operationId" : "getAssignmentGetAssignAssignmentsForTasks",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Assignment.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/assignment/getUnassignAssignmentsForTasks" : {
      "summary" : "getUnassignAssignmentsForTasks",
      "get" : {
        "operationId" : "getAssignmentGetUnassignAssignmentsForTasks",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeIssues",
          "in" : "query",
          "description" : "includeIssues",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Assignment.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/{id}" : {
      "get" : {
        "summary" : "Get for AuditLoginAsSession",
        "operationId" : "getAuditLoginAsSession",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AuditLoginAsSession.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession" : {
      "get" : {
        "summary" : "Bulk Get for AuditLoginAsSession",
        "operationId" : "getAuditLoginAsSessions",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AuditLoginAsSession.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AuditLoginAsSession.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/count" : {
      "get" : {
        "summary" : "Count of auditloginassession",
        "operationId" : "countAuditLoginAsSessions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/search" : {
      "get" : {
        "summary" : "Search of auditloginassession",
        "operationId" : "searchAuditLoginAsSessions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AuditLoginAsSession.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/report" : {
      "get" : {
        "summary" : "Report of auditloginassession",
        "operationId" : "reportAuditLoginAsSessions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/allAccessedUsers" : {
      "summary" : "allAccessedUsers",
      "put" : {
        "operationId" : "auditLoginAsSessionAllAccessedUsers",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/allAdmins" : {
      "summary" : "allAdmins",
      "put" : {
        "operationId" : "auditLoginAsSessionAllAdmins",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/getAccessedUsers" : {
      "summary" : "getAccessedUsers",
      "put" : {
        "operationId" : "auditLoginAsSessionGetAccessedUsers",
        "parameters" : [ {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/auditloginassession/whoAccessedUser" : {
      "summary" : "whoAccessedUser",
      "put" : {
        "operationId" : "auditLoginAsSessionWhoAccessedUser",
        "parameters" : [ {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalauthtoken/{id}" : {
      "get" : {
        "summary" : "Get for ExternalAuthToken",
        "operationId" : "getExternalAuthToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalAuthToken.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ExternalAuthToken",
        "operationId" : "editExternalAuthToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalAuthToken.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ExternalAuthToken",
        "operationId" : "deleteExternalAuthToken",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalauthtoken" : {
      "get" : {
        "summary" : "Bulk Get for ExternalAuthToken",
        "operationId" : "getExternalAuthTokens",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalAuthToken.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalAuthToken.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ExternalAuthToken",
        "operationId" : "editExternalAuthTokens",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExternalAuthToken.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExternalAuthToken.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalAuthToken.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalAuthToken.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a externalauthtoken",
        "operationId" : "addExternalAuthTokens",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExternalAuthToken.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExternalAuthToken.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalAuthToken.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalAuthToken.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ExternalAuthToken",
        "operationId" : "deleteExternalAuthTokens",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalauthtoken/count" : {
      "get" : {
        "summary" : "Count of externalauthtoken",
        "operationId" : "countExternalAuthTokens",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalauthtoken/search" : {
      "get" : {
        "summary" : "Search of externalauthtoken",
        "operationId" : "searchExternalAuthTokens",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExternalAuthToken.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalauthtoken/report" : {
      "get" : {
        "summary" : "Report of externalauthtoken",
        "operationId" : "reportExternalAuthTokens",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/avatar/{id}" : {
      "get" : {
        "summary" : "Get for Avatar",
        "operationId" : "getAvatar",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Avatar.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Avatar",
        "operationId" : "editAvatar",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Avatar.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Avatar",
        "operationId" : "deleteAvatar",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/avatar" : {
      "get" : {
        "summary" : "Bulk Get for Avatar",
        "operationId" : "getAvatars",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Avatar.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Avatar.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Avatar",
        "operationId" : "editAvatars",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Avatar.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Avatar.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Avatar.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Avatar.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a avatar",
        "operationId" : "addAvatars",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Avatar.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Avatar.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Avatar.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Avatar.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Avatar",
        "operationId" : "deleteAvatars",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval/{id}" : {
      "get" : {
        "summary" : "Get for AwaitingApproval",
        "operationId" : "getAwaitingApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./AwaitingApproval.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for AwaitingApproval",
        "operationId" : "deleteAwaitingApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval" : {
      "get" : {
        "summary" : "Bulk Get for AwaitingApproval",
        "operationId" : "getAwaitingApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AwaitingApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AwaitingApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a awaitingapproval",
        "operationId" : "addAwaitingApprovals",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./AwaitingApproval.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./AwaitingApproval.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./AwaitingApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./AwaitingApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for AwaitingApproval",
        "operationId" : "deleteAwaitingApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval/count" : {
      "get" : {
        "summary" : "Count of awaitingapproval",
        "operationId" : "countAwaitingApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval/search" : {
      "get" : {
        "summary" : "Search of awaitingapproval",
        "operationId" : "searchAwaitingApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AwaitingApproval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval/report" : {
      "get" : {
        "summary" : "Report of awaitingapproval",
        "operationId" : "reportAwaitingApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval/getMyAwaitingApprovalsFilteredCount" : {
      "summary" : "getMyAwaitingApprovalsFilteredCount",
      "put" : {
        "operationId" : "awaitingApprovalGetMyAwaitingApprovalsFilteredCount",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "query",
          "description" : "objectType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/awaitingapproval/myAwaitingApprovalsFiltered" : {
      "summary" : "myAwaitingApprovalsFiltered",
      "get" : {
        "operationId" : "getAwaitingApprovalMyAwaitingApprovalsFiltered",
        "parameters" : [ {
          "name" : "objectType",
          "in" : "query",
          "description" : "objectType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./AwaitingApproval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/burndownevent/{id}" : {
      "get" : {
        "summary" : "Get for BurndownEvent",
        "operationId" : "getBurndownEvent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./BurndownEvent.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/burndownevent" : {
      "get" : {
        "summary" : "Bulk Get for BurndownEvent",
        "operationId" : "getBurndownEvents",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BurndownEvent.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BurndownEvent.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/burndownevent/count" : {
      "get" : {
        "summary" : "Count of burndownevent",
        "operationId" : "countBurndownEvents",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/burndownevent/search" : {
      "get" : {
        "summary" : "Search of burndownevent",
        "operationId" : "searchBurndownEvents",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./BurndownEvent.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/burndownevent/report" : {
      "get" : {
        "summary" : "Report of burndownevent",
        "operationId" : "reportBurndownEvents",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/budgetedhour/{id}" : {
      "get" : {
        "summary" : "Get for BudgetedHour",
        "operationId" : "getBudgetedHour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./BudgetedHour.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for BudgetedHour",
        "operationId" : "deleteBudgetedHour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/budgetedhour" : {
      "get" : {
        "summary" : "Bulk Get for BudgetedHour",
        "operationId" : "getBudgetedHours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BudgetedHour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BudgetedHour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a budgetedhour",
        "operationId" : "addBudgetedHours",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./BudgetedHour.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./BudgetedHour.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BudgetedHour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BudgetedHour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for BudgetedHour",
        "operationId" : "deleteBudgetedHours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/budgetedhour/search" : {
      "get" : {
        "summary" : "Search of budgetedhour",
        "operationId" : "searchBudgetedHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./BudgetedHour.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/billingrecord/{id}" : {
      "get" : {
        "summary" : "Get for BillingRecord",
        "operationId" : "getBillingRecord",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./BillingRecord.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a BillingRecord",
        "operationId" : "editBillingRecord",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./BillingRecord.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for BillingRecord",
        "operationId" : "deleteBillingRecord",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/billingrecord" : {
      "get" : {
        "summary" : "Bulk Get for BillingRecord",
        "operationId" : "getBillingRecords",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BillingRecord.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BillingRecord.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for BillingRecord",
        "operationId" : "editBillingRecords",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./BillingRecord.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./BillingRecord.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BillingRecord.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BillingRecord.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a billingrecord",
        "operationId" : "addBillingRecords",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./BillingRecord.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./BillingRecord.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BillingRecord.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BillingRecord.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for BillingRecord",
        "operationId" : "deleteBillingRecords",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/billingrecord/count" : {
      "get" : {
        "summary" : "Count of billingrecord",
        "operationId" : "countBillingRecords",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/billingrecord/search" : {
      "get" : {
        "summary" : "Search of billingrecord",
        "operationId" : "searchBillingRecords",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./BillingRecord.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/billingrecord/report" : {
      "get" : {
        "summary" : "Report of billingrecord",
        "operationId" : "reportBillingRecords",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/billingrecord/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "billingRecordCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/backgroundjob/{id}" : {
      "get" : {
        "summary" : "Get for BackgroundJob",
        "operationId" : "getBackgroundJob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./BackgroundJob.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for BackgroundJob",
        "operationId" : "deleteBackgroundJob",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/backgroundjob" : {
      "get" : {
        "summary" : "Bulk Get for BackgroundJob",
        "operationId" : "getBackgroundJobs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BackgroundJob.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BackgroundJob.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a backgroundjob",
        "operationId" : "addBackgroundJobs",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./BackgroundJob.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./BackgroundJob.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BackgroundJob.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BackgroundJob.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for BackgroundJob",
        "operationId" : "deleteBackgroundJobs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/backgroundjob/count" : {
      "get" : {
        "summary" : "Count of backgroundjob",
        "operationId" : "countBackgroundJobs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/backgroundjob/search" : {
      "get" : {
        "summary" : "Search of backgroundjob",
        "operationId" : "searchBackgroundJobs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./BackgroundJob.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/backgroundjob/report" : {
      "get" : {
        "summary" : "Report of backgroundjob",
        "operationId" : "reportBackgroundJobs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baseline/{id}" : {
      "get" : {
        "summary" : "Get for Baseline",
        "operationId" : "getBaseline",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Baseline.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Baseline",
        "operationId" : "editBaseline",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Baseline.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Baseline",
        "operationId" : "deleteBaseline",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baseline" : {
      "get" : {
        "summary" : "Bulk Get for Baseline",
        "operationId" : "getBaselines",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Baseline.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Baseline.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Baseline",
        "operationId" : "editBaselines",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Baseline.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Baseline.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Baseline.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Baseline.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a baseline",
        "operationId" : "addBaselines",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Baseline.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Baseline.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Baseline.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Baseline.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Baseline",
        "operationId" : "deleteBaselines",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baseline/count" : {
      "get" : {
        "summary" : "Count of baseline",
        "operationId" : "countBaselines",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baseline/search" : {
      "get" : {
        "summary" : "Search of baseline",
        "operationId" : "searchBaselines",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Baseline.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baseline/report" : {
      "get" : {
        "summary" : "Report of baseline",
        "operationId" : "reportBaselines",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baselinetask/{id}" : {
      "get" : {
        "summary" : "Get for BaselineTask",
        "operationId" : "getBaselineTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./BaselineTask.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baselinetask" : {
      "get" : {
        "summary" : "Bulk Get for BaselineTask",
        "operationId" : "getBaselineTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./BaselineTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./BaselineTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baselinetask/count" : {
      "get" : {
        "summary" : "Count of baselinetask",
        "operationId" : "countBaselineTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baselinetask/search" : {
      "get" : {
        "summary" : "Search of baselinetask",
        "operationId" : "searchBaselineTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./BaselineTask.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/baselinetask/report" : {
      "get" : {
        "summary" : "Report of baselinetask",
        "operationId" : "reportBaselineTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentry/{id}" : {
      "get" : {
        "summary" : "Get for CalendarEntry",
        "operationId" : "getCalendarEntry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CalendarEntry.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a CalendarEntry",
        "operationId" : "editCalendarEntry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CalendarEntry.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for CalendarEntry",
        "operationId" : "deleteCalendarEntry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentry" : {
      "get" : {
        "summary" : "Bulk Get for CalendarEntry",
        "operationId" : "getCalendarEntrys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarEntry.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarEntry.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for CalendarEntry",
        "operationId" : "editCalendarEntrys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CalendarEntry.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CalendarEntry.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarEntry.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarEntry.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a calendarentry",
        "operationId" : "addCalendarEntrys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CalendarEntry.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CalendarEntry.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarEntry.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarEntry.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for CalendarEntry",
        "operationId" : "deleteCalendarEntrys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentry/count" : {
      "get" : {
        "summary" : "Count of calendarentry",
        "operationId" : "countCalendarEntrys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentry/search" : {
      "get" : {
        "summary" : "Search of calendarentry",
        "operationId" : "searchCalendarEntrys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CalendarEntry.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentry/report" : {
      "get" : {
        "summary" : "Report of calendarentry",
        "operationId" : "reportCalendarEntrys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarportalsection/{id}" : {
      "get" : {
        "summary" : "Get for CalendarPortalSection",
        "operationId" : "getCalendarPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CalendarPortalSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarportalsection" : {
      "get" : {
        "summary" : "Bulk Get for CalendarPortalSection",
        "operationId" : "getCalendarPortalSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarPortalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarPortalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a calendarportalsection",
        "operationId" : "addCalendarPortalSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CalendarPortalSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CalendarPortalSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarPortalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarPortalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarportalsection/count" : {
      "get" : {
        "summary" : "Count of calendarportalsection",
        "operationId" : "countCalendarPortalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarportalsection/search" : {
      "get" : {
        "summary" : "Search of calendarportalsection",
        "operationId" : "searchCalendarPortalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CalendarPortalSection.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarportalsection/report" : {
      "get" : {
        "summary" : "Report of calendarportalsection",
        "operationId" : "reportCalendarPortalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection/{id}" : {
      "get" : {
        "summary" : "Get for CalendarSection",
        "operationId" : "getCalendarSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CalendarSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a CalendarSection",
        "operationId" : "editCalendarSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CalendarSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for CalendarSection",
        "operationId" : "deleteCalendarSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection" : {
      "get" : {
        "summary" : "Bulk Get for CalendarSection",
        "operationId" : "getCalendarSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for CalendarSection",
        "operationId" : "editCalendarSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CalendarSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CalendarSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a calendarsection",
        "operationId" : "addCalendarSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CalendarSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CalendarSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for CalendarSection",
        "operationId" : "deleteCalendarSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection/count" : {
      "get" : {
        "summary" : "Count of calendarsection",
        "operationId" : "countCalendarSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection/search" : {
      "get" : {
        "summary" : "Search of calendarsection",
        "operationId" : "searchCalendarSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CalendarSection.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection/report" : {
      "get" : {
        "summary" : "Report of calendarsection",
        "operationId" : "reportCalendarSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection/getConcatenatedExpressionForm" : {
      "summary" : "getConcatenatedExpressionForm",
      "put" : {
        "operationId" : "calendarSectionGetConcatenatedExpressionForm",
        "parameters" : [ {
          "name" : "expression",
          "in" : "query",
          "description" : "expression",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarsection/getPrettyExpressionForm" : {
      "summary" : "getPrettyExpressionForm",
      "put" : {
        "operationId" : "calendarSectionGetPrettyExpressionForm",
        "parameters" : [ {
          "name" : "expression",
          "in" : "query",
          "description" : "expression",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/categoryaccessrule/{id}" : {
      "get" : {
        "summary" : "Get for CategoryAccessRule",
        "operationId" : "getCategoryAccessRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CategoryAccessRule.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for CategoryAccessRule",
        "operationId" : "deleteCategoryAccessRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/categoryaccessrule" : {
      "get" : {
        "summary" : "Bulk Get for CategoryAccessRule",
        "operationId" : "getCategoryAccessRules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CategoryAccessRule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CategoryAccessRule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a categoryaccessrule",
        "operationId" : "addCategoryAccessRules",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CategoryAccessRule.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CategoryAccessRule.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CategoryAccessRule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CategoryAccessRule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for CategoryAccessRule",
        "operationId" : "deleteCategoryAccessRules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/categoryaccessrule/count" : {
      "get" : {
        "summary" : "Count of categoryaccessrule",
        "operationId" : "countCategoryAccessRules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/categoryaccessrule/search" : {
      "get" : {
        "summary" : "Search of categoryaccessrule",
        "operationId" : "searchCategoryAccessRules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CategoryAccessRule.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/categoryaccessrule/report" : {
      "get" : {
        "summary" : "Report of categoryaccessrule",
        "operationId" : "reportCategoryAccessRules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/categoryaccessrule/getForObject" : {
      "summary" : "getForObject",
      "get" : {
        "operationId" : "getCategoryAccessRuleGetForObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CategoryAccessRule.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentryexternalreference/{id}" : {
      "get" : {
        "summary" : "Get for CalendarEntryExternalReference",
        "operationId" : "getCalendarEntryExternalReference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CalendarEntryExternalReference.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentryexternalreference" : {
      "get" : {
        "summary" : "Bulk Get for CalendarEntryExternalReference",
        "operationId" : "getCalendarEntryExternalReferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CalendarEntryExternalReference.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CalendarEntryExternalReference.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentryexternalreference/count" : {
      "get" : {
        "summary" : "Count of calendarentryexternalreference",
        "operationId" : "countCalendarEntryExternalReferences",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentryexternalreference/search" : {
      "get" : {
        "summary" : "Search of calendarentryexternalreference",
        "operationId" : "searchCalendarEntryExternalReferences",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CalendarEntryExternalReference.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/calendarentryexternalreference/report" : {
      "get" : {
        "summary" : "Report of calendarentryexternalreference",
        "operationId" : "reportCalendarEntryExternalReferences",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier/{id}" : {
      "get" : {
        "summary" : "Get for Classifier",
        "operationId" : "getClassifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Classifier.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Classifier",
        "operationId" : "editClassifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Classifier.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Classifier",
        "operationId" : "deleteClassifier",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier" : {
      "get" : {
        "summary" : "Bulk Get for Classifier",
        "operationId" : "getClassifiers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Classifier.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Classifier.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Classifier",
        "operationId" : "editClassifiers",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Classifier.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Classifier.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Classifier.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Classifier.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a classifier",
        "operationId" : "addClassifiers",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Classifier.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Classifier.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Classifier.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Classifier.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Classifier",
        "operationId" : "deleteClassifiers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier/count" : {
      "get" : {
        "summary" : "Count of classifier",
        "operationId" : "countClassifiers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier/search" : {
      "get" : {
        "summary" : "Search of classifier",
        "operationId" : "searchClassifiers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Classifier.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier/report" : {
      "get" : {
        "summary" : "Report of classifier",
        "operationId" : "reportClassifiers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier/activateClassifiers" : {
      "summary" : "activateClassifiers",
      "put" : {
        "operationId" : "classifierActivateClassifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/classifier/deactivateClassifiers" : {
      "summary" : "deactivateClassifiers",
      "put" : {
        "operationId" : "classifierDeactivateClassifiers",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company/{id}" : {
      "get" : {
        "summary" : "Get for Company",
        "operationId" : "getCompany",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Company.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Company",
        "operationId" : "editCompany",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Company.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Company",
        "operationId" : "deleteCompany",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company" : {
      "get" : {
        "summary" : "Bulk Get for Company",
        "operationId" : "getCompanys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Company.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Company.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Company",
        "operationId" : "editCompanys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Company.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Company.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Company.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Company.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a company",
        "operationId" : "addCompanys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Company.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Company.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Company.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Company.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Company",
        "operationId" : "deleteCompanys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company/replace" : {
      "put" : {
        "summary" : "Replace of company",
        "operationId" : "replaceCompanys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company/count" : {
      "get" : {
        "summary" : "Count of company",
        "operationId" : "countCompanys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company/search" : {
      "get" : {
        "summary" : "Search of company",
        "operationId" : "searchCompanys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Company.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company/report" : {
      "get" : {
        "summary" : "Report of company",
        "operationId" : "reportCompanys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/company/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "companyCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/{id}" : {
      "get" : {
        "summary" : "Get for CustomEnum",
        "operationId" : "getCustomEnum",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CustomEnum.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a CustomEnum",
        "operationId" : "editCustomEnum",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CustomEnum.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for CustomEnum",
        "operationId" : "deleteCustomEnum",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum" : {
      "get" : {
        "summary" : "Bulk Get for CustomEnum",
        "operationId" : "getCustomEnums",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomEnum.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomEnum.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for CustomEnum",
        "operationId" : "editCustomEnums",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CustomEnum.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CustomEnum.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomEnum.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomEnum.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a customenum",
        "operationId" : "addCustomEnums",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CustomEnum.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CustomEnum.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomEnum.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomEnum.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for CustomEnum",
        "operationId" : "deleteCustomEnums",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/count" : {
      "get" : {
        "summary" : "Count of customenum",
        "operationId" : "countCustomEnums",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/search" : {
      "get" : {
        "summary" : "Search of customenum",
        "operationId" : "searchCustomEnums",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/report" : {
      "get" : {
        "summary" : "Report of customenum",
        "operationId" : "reportCustomEnums",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultOpTaskConditionEnum" : {
      "summary" : "getDefaultOpTaskConditionEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultOpTaskConditionEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultOpTaskPriorityEnum" : {
      "summary" : "getDefaultOpTaskPriorityEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultOpTaskPriorityEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultProjectConditionEnum" : {
      "summary" : "getDefaultProjectConditionEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultProjectConditionEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultProjectStatusEnum" : {
      "summary" : "getDefaultProjectStatusEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultProjectStatusEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultProjectStatusEnumForGroup" : {
      "summary" : "getDefaultProjectStatusEnumForGroup",
      "put" : {
        "operationId" : "customEnumGetDefaultProjectStatusEnumForGroup",
        "parameters" : [ {
          "name" : "groupID",
          "in" : "query",
          "description" : "groupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultSeverityEnum" : {
      "summary" : "getDefaultSeverityEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultSeverityEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultTaskConditionEnum" : {
      "summary" : "getDefaultTaskConditionEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultTaskConditionEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getDefaultTaskPriorityEnum" : {
      "summary" : "getDefaultTaskPriorityEnum",
      "put" : {
        "operationId" : "customEnumGetDefaultTaskPriorityEnum",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getGroupDefaultProjectStatus" : {
      "summary" : "getGroupDefaultProjectStatus",
      "put" : {
        "operationId" : "customEnumGetGroupDefaultProjectStatus",
        "parameters" : [ {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/isPossibleToUnlockStatus" : {
      "summary" : "isPossibleToUnlockStatus",
      "put" : {
        "operationId" : "customEnumIsPossibleToUnlockStatus",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "statusKey",
          "in" : "query",
          "description" : "statusKey",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/getGroupStatuses" : {
      "summary" : "getGroupStatuses",
      "get" : {
        "operationId" : "getCustomEnumGetGroupStatuses",
        "parameters" : [ {
          "name" : "groupID",
          "in" : "query",
          "description" : "groupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/opTaskConditions" : {
      "summary" : "opTaskConditions",
      "get" : {
        "operationId" : "getCustomEnumOpTaskConditions",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/opTaskGroupStatuses" : {
      "summary" : "opTaskGroupStatuses",
      "get" : {
        "operationId" : "getCustomEnumOpTaskGroupStatuses",
        "parameters" : [ {
          "name" : "opTaskID",
          "in" : "query",
          "description" : "opTaskID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupID",
          "in" : "query",
          "description" : "groupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/opTaskPriorities" : {
      "summary" : "opTaskPriorities",
      "get" : {
        "operationId" : "getCustomEnumOpTaskPriorities",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/opTaskSeverities" : {
      "summary" : "opTaskSeverities",
      "get" : {
        "operationId" : "getCustomEnumOpTaskSeverities",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/opTaskStatuses" : {
      "summary" : "opTaskStatuses",
      "get" : {
        "operationId" : "getCustomEnumOpTaskStatuses",
        "parameters" : [ {
          "name" : "type",
          "in" : "query",
          "description" : "type",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/opTaskTypes" : {
      "summary" : "opTaskTypes",
      "get" : {
        "operationId" : "getCustomEnumOpTaskTypes",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/projectConditions" : {
      "summary" : "projectConditions",
      "get" : {
        "operationId" : "getCustomEnumProjectConditions",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/projectGroupStatuses" : {
      "summary" : "projectGroupStatuses",
      "get" : {
        "operationId" : "getCustomEnumProjectGroupStatuses",
        "parameters" : [ {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupID",
          "in" : "query",
          "description" : "groupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/projectPriorities" : {
      "summary" : "projectPriorities",
      "get" : {
        "operationId" : "getCustomEnumProjectPriorities",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/projectStatuses" : {
      "summary" : "projectStatuses",
      "get" : {
        "operationId" : "getCustomEnumProjectStatuses",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/taskConditions" : {
      "summary" : "taskConditions",
      "get" : {
        "operationId" : "getCustomEnumTaskConditions",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/taskGroupStatuses" : {
      "summary" : "taskGroupStatuses",
      "get" : {
        "operationId" : "getCustomEnumTaskGroupStatuses",
        "parameters" : [ {
          "name" : "taskID",
          "in" : "query",
          "description" : "taskID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "groupID",
          "in" : "query",
          "description" : "groupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/taskPriorities" : {
      "summary" : "taskPriorities",
      "get" : {
        "operationId" : "getCustomEnumTaskPriorities",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/taskStatuses" : {
      "summary" : "taskStatuses",
      "get" : {
        "operationId" : "getCustomEnumTaskStatuses",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customenum/templatetaskPriorities" : {
      "summary" : "templatetaskPriorities",
      "get" : {
        "operationId" : "getCustomEnumTemplatetaskPriorities",
        "parameters" : [ {
          "name" : "includeHidden",
          "in" : "query",
          "description" : "includeHidden",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomEnum.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customquarter/{id}" : {
      "get" : {
        "summary" : "Get for CustomQuarter",
        "operationId" : "getCustomQuarter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CustomQuarter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a CustomQuarter",
        "operationId" : "editCustomQuarter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CustomQuarter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for CustomQuarter",
        "operationId" : "deleteCustomQuarter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customquarter" : {
      "get" : {
        "summary" : "Bulk Get for CustomQuarter",
        "operationId" : "getCustomQuarters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomQuarter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomQuarter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for CustomQuarter",
        "operationId" : "editCustomQuarters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CustomQuarter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CustomQuarter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomQuarter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomQuarter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a customquarter",
        "operationId" : "addCustomQuarters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CustomQuarter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CustomQuarter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomQuarter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomQuarter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for CustomQuarter",
        "operationId" : "deleteCustomQuarters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customquarter/count" : {
      "get" : {
        "summary" : "Count of customquarter",
        "operationId" : "countCustomQuarters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customquarter/search" : {
      "get" : {
        "summary" : "Search of customquarter",
        "operationId" : "searchCustomQuarters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomQuarter.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customquarter/report" : {
      "get" : {
        "summary" : "Report of customquarter",
        "operationId" : "reportCustomQuarters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/{id}" : {
      "get" : {
        "summary" : "Get for Category",
        "operationId" : "getCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Category.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Category",
        "operationId" : "editCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Category.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Category",
        "operationId" : "deleteCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category" : {
      "get" : {
        "summary" : "Bulk Get for Category",
        "operationId" : "getCategorys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Category.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Category.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Category",
        "operationId" : "editCategorys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Category.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Category.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Category.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Category.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a category",
        "operationId" : "addCategorys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Category.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Category.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Category.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Category.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Category",
        "operationId" : "deleteCategorys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/count" : {
      "get" : {
        "summary" : "Count of category",
        "operationId" : "countCategorys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/search" : {
      "get" : {
        "summary" : "Search of category",
        "operationId" : "searchCategorys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Category.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/report" : {
      "get" : {
        "summary" : "Report of category",
        "operationId" : "reportCategorys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Category",
        "operationId" : "shareCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ATTACH_CUSTOMFORM" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/share" : {
      "put" : {
        "summary" : "Batch sharing of a Category",
        "operationId" : "batchShareCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ATTACH_CUSTOMFORM" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Category",
        "operationId" : "unshareCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Category",
        "operationId" : "batchUnshareCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Category",
        "operationId" : "sharePublicCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ATTACH_CUSTOMFORM" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Category",
        "operationId" : "batchSharePublicCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ATTACH_CUSTOMFORM" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Category",
        "operationId" : "unsharePublicCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Category",
        "operationId" : "batchUnsharePublicCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/assignCategories" : {
      "summary" : "assignCategories",
      "put" : {
        "operationId" : "categoryAssignCategories",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryIDs",
          "in" : "query",
          "description" : "categoryIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/assignCategory" : {
      "summary" : "assignCategory",
      "put" : {
        "operationId" : "categoryAssignCategory",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryID",
          "in" : "query",
          "description" : "categoryID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/getCascadingRules" : {
      "summary" : "getCascadingRules",
      "put" : {
        "operationId" : "categoryGetCascadingRules",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryIDs",
          "in" : "query",
          "description" : "categoryIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "paramValues",
          "in" : "query",
          "description" : "paramValues",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "isConverting",
          "in" : "query",
          "description" : "isConverting",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/isObjectFrozenInPendingApprovalStatus" : {
      "summary" : "isObjectFrozenInPendingApprovalStatus",
      "put" : {
        "operationId" : "categoryIsObjectFrozenInPendingApprovalStatus",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/reorderCategories" : {
      "summary" : "reorderCategories",
      "put" : {
        "operationId" : "categoryReorderCategories",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryIDs",
          "in" : "query",
          "description" : "categoryIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/unassignCategories" : {
      "summary" : "unassignCategories",
      "put" : {
        "operationId" : "categoryUnassignCategories",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryIDs",
          "in" : "query",
          "description" : "categoryIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/category/unassignCategory" : {
      "summary" : "unassignCategory",
      "put" : {
        "operationId" : "categoryUnassignCategory",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "categoryID",
          "in" : "query",
          "description" : "categoryID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customer/getPackagingOptionValue" : {
      "summary" : "getPackagingOptionValue",
      "put" : {
        "operationId" : "customerGetPackagingOptionValue",
        "parameters" : [ {
          "name" : "option",
          "in" : "query",
          "description" : "option",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customer/goalsEnabled" : {
      "summary" : "goalsEnabled",
      "put" : {
        "operationId" : "customerGoalsEnabled",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customer/isPackagingOptionEnabled" : {
      "summary" : "isPackagingOptionEnabled",
      "put" : {
        "operationId" : "customerIsPackagingOptionEnabled",
        "parameters" : [ {
          "name" : "option",
          "in" : "query",
          "description" : "option",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customer/productEnabled" : {
      "summary" : "productEnabled",
      "put" : {
        "operationId" : "customerProductEnabled",
        "parameters" : [ {
          "name" : "product",
          "in" : "query",
          "description" : "product",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "goals", "scenario_planner", "fusion", "BYOK" ]
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customer/updateLoginAsSettings" : {
      "summary" : "updateLoginAsSettings",
      "put" : {
        "operationId" : "customerUpdateLoginAsSettings",
        "parameters" : [ {
          "name" : "customer",
          "in" : "query",
          "description" : "customer",
          "required" : false,
          "schema" : {
            "$ref" : "./Customer.json"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customerpreferences/{id}" : {
      "get" : {
        "summary" : "Get for CustomerPreferences",
        "operationId" : "getCustomerPreferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CustomerPreferences.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customerpreferences" : {
      "get" : {
        "summary" : "Bulk Get for CustomerPreferences",
        "operationId" : "getCustomerPreferencess",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomerPreferences.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomerPreferences.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a customerpreferences",
        "operationId" : "addCustomerPreferencess",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CustomerPreferences.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CustomerPreferences.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomerPreferences.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomerPreferences.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customerpreferences/search" : {
      "get" : {
        "summary" : "Search of customerpreferences",
        "operationId" : "searchCustomerPreferencess",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomerPreferences.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customerpreferences/getIsAutoUpgradeDisabled" : {
      "summary" : "getIsAutoUpgradeDisabled",
      "put" : {
        "operationId" : "customerPreferencesGetIsAutoUpgradeDisabled",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customerpreferences/getTimesheetPreferences" : {
      "summary" : "getTimesheetPreferences",
      "put" : {
        "operationId" : "customerPreferencesGetTimesheetPreferences",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customerpreferences/setTimesheetPreferences" : {
      "summary" : "setTimesheetPreferences",
      "put" : {
        "operationId" : "customerPreferencesSetTimesheetPreferences",
        "parameters" : [ {
          "name" : "preferences",
          "in" : "query",
          "description" : "preferences",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/contextsensitivehelp/{id}" : {
      "get" : {
        "summary" : "Get for ContextSensitiveHelp",
        "operationId" : "getContextSensitiveHelp",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ContextSensitiveHelp.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/contextsensitivehelp" : {
      "get" : {
        "summary" : "Bulk Get for ContextSensitiveHelp",
        "operationId" : "getContextSensitiveHelps",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ContextSensitiveHelp.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ContextSensitiveHelp.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/contextsensitivehelp/count" : {
      "get" : {
        "summary" : "Count of contextsensitivehelp",
        "operationId" : "countContextSensitiveHelps",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/contextsensitivehelp/search" : {
      "get" : {
        "summary" : "Search of contextsensitivehelp",
        "operationId" : "searchContextSensitiveHelps",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ContextSensitiveHelp.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/contextsensitivehelp/report" : {
      "get" : {
        "summary" : "Report of contextsensitivehelp",
        "operationId" : "reportContextSensitiveHelps",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup/{id}" : {
      "get" : {
        "summary" : "Get for DocMetadataLinkGroup",
        "operationId" : "getDocMetadataLinkGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocMetadataLinkGroup.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for DocMetadataLinkGroup",
        "operationId" : "deleteDocMetadataLinkGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup" : {
      "get" : {
        "summary" : "Bulk Get for DocMetadataLinkGroup",
        "operationId" : "getDocMetadataLinkGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocMetadataLinkGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocMetadataLinkGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a docmetadatalinkgroup",
        "operationId" : "addDocMetadataLinkGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocMetadataLinkGroup.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocMetadataLinkGroup.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocMetadataLinkGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocMetadataLinkGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for DocMetadataLinkGroup",
        "operationId" : "deleteDocMetadataLinkGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup/count" : {
      "get" : {
        "summary" : "Count of docmetadatalinkgroup",
        "operationId" : "countDocMetadataLinkGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup/search" : {
      "get" : {
        "summary" : "Search of docmetadatalinkgroup",
        "operationId" : "searchDocMetadataLinkGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocMetadataLinkGroup.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup/report" : {
      "get" : {
        "summary" : "Report of docmetadatalinkgroup",
        "operationId" : "reportDocMetadataLinkGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup/getMetadataDetailsForDocument" : {
      "summary" : "getMetadataDetailsForDocument",
      "put" : {
        "operationId" : "docMetadataLinkGroupGetMetadataDetailsForDocument",
        "parameters" : [ {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalIntegrationType",
          "in" : "query",
          "description" : "externalIntegrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalinkgroup/getMetadataForDocument" : {
      "summary" : "getMetadataForDocument",
      "put" : {
        "operationId" : "docMetadataLinkGroupGetMetadataForDocument",
        "parameters" : [ {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalIntegrationType",
          "in" : "query",
          "description" : "externalIntegrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalink/{id}" : {
      "get" : {
        "summary" : "Get for DocMetadataLink",
        "operationId" : "getDocMetadataLink",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocMetadataLink.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for DocMetadataLink",
        "operationId" : "deleteDocMetadataLink",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalink" : {
      "get" : {
        "summary" : "Bulk Get for DocMetadataLink",
        "operationId" : "getDocMetadataLinks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocMetadataLink.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocMetadataLink.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a docmetadatalink",
        "operationId" : "addDocMetadataLinks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocMetadataLink.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocMetadataLink.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocMetadataLink.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocMetadataLink.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for DocMetadataLink",
        "operationId" : "deleteDocMetadataLinks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalink/count" : {
      "get" : {
        "summary" : "Count of docmetadatalink",
        "operationId" : "countDocMetadataLinks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalink/search" : {
      "get" : {
        "summary" : "Search of docmetadatalink",
        "operationId" : "searchDocMetadataLinks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocMetadataLink.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/docmetadatalink/report" : {
      "get" : {
        "summary" : "Report of docmetadatalink",
        "operationId" : "reportDocMetadataLinks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentapproval/{id}" : {
      "get" : {
        "summary" : "Get for DocumentApproval",
        "operationId" : "getDocumentApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentApproval.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a DocumentApproval",
        "operationId" : "editDocumentApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentApproval.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for DocumentApproval",
        "operationId" : "deleteDocumentApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentapproval" : {
      "get" : {
        "summary" : "Bulk Get for DocumentApproval",
        "operationId" : "getDocumentApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for DocumentApproval",
        "operationId" : "editDocumentApprovals",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentApproval.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentApproval.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a documentapproval",
        "operationId" : "addDocumentApprovals",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentApproval.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentApproval.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for DocumentApproval",
        "operationId" : "deleteDocumentApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentapproval/count" : {
      "get" : {
        "summary" : "Count of documentapproval",
        "operationId" : "countDocumentApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentapproval/search" : {
      "get" : {
        "summary" : "Search of documentapproval",
        "operationId" : "searchDocumentApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocumentApproval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentapproval/report" : {
      "get" : {
        "summary" : "Report of documentapproval",
        "operationId" : "reportDocumentApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/{id}" : {
      "get" : {
        "summary" : "Get for DocumentFolder",
        "operationId" : "getDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentFolder.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a DocumentFolder",
        "operationId" : "editDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentFolder.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for DocumentFolder",
        "operationId" : "deleteDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder" : {
      "get" : {
        "summary" : "Bulk Get for DocumentFolder",
        "operationId" : "getDocumentFolders",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentFolder.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentFolder.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for DocumentFolder",
        "operationId" : "editDocumentFolders",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentFolder.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentFolder.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentFolder.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentFolder.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a documentfolder",
        "operationId" : "addDocumentFolders",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentFolder.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentFolder.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentFolder.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentFolder.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for DocumentFolder",
        "operationId" : "deleteDocumentFolders",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/count" : {
      "get" : {
        "summary" : "Count of documentfolder",
        "operationId" : "countDocumentFolders",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/search" : {
      "get" : {
        "summary" : "Search of documentfolder",
        "operationId" : "searchDocumentFolders",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocumentFolder.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/report" : {
      "get" : {
        "summary" : "Report of documentfolder",
        "operationId" : "reportDocumentFolders",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a DocumentFolder",
        "operationId" : "shareDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/share" : {
      "put" : {
        "summary" : "Batch sharing of a DocumentFolder",
        "operationId" : "batchShareDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a DocumentFolder",
        "operationId" : "unshareDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a DocumentFolder",
        "operationId" : "batchUnshareDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a DocumentFolder",
        "operationId" : "sharePublicDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a DocumentFolder",
        "operationId" : "batchSharePublicDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a DocumentFolder",
        "operationId" : "unsharePublicDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a DocumentFolder",
        "operationId" : "batchUnsharePublicDocumentFolder",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/getFolderSizeInBytes" : {
      "summary" : "getFolderSizeInBytes",
      "put" : {
        "operationId" : "documentFolderGetFolderSizeInBytes",
        "parameters" : [ {
          "name" : "folderID",
          "in" : "query",
          "description" : "folderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "recursive",
          "in" : "query",
          "description" : "recursive",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "includeLinked",
          "in" : "query",
          "description" : "includeLinked",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/isLinkedFolder" : {
      "summary" : "isLinkedFolder",
      "put" : {
        "operationId" : "documentFolderIsLinkedFolder",
        "parameters" : [ {
          "name" : "documentFolderID",
          "in" : "query",
          "description" : "documentFolderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/isSmartFolder" : {
      "summary" : "isSmartFolder",
      "put" : {
        "operationId" : "documentFolderIsSmartFolder",
        "parameters" : [ {
          "name" : "documentFolderID",
          "in" : "query",
          "description" : "documentFolderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/unlinkFolders" : {
      "summary" : "unlinkFolders",
      "put" : {
        "operationId" : "documentFolderUnlinkFolders",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentfolder/myFolders" : {
      "summary" : "myFolders",
      "get" : {
        "operationId" : "getDocumentFolderMyFolders",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocumentFolder.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentrequest/{id}" : {
      "get" : {
        "summary" : "Get for DocumentRequest",
        "operationId" : "getDocumentRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentRequest.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a DocumentRequest",
        "operationId" : "editDocumentRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentRequest.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for DocumentRequest",
        "operationId" : "deleteDocumentRequest",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentrequest" : {
      "get" : {
        "summary" : "Bulk Get for DocumentRequest",
        "operationId" : "getDocumentRequests",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentRequest.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentRequest.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for DocumentRequest",
        "operationId" : "editDocumentRequests",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentRequest.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentRequest.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentRequest.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentRequest.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a documentrequest",
        "operationId" : "addDocumentRequests",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentRequest.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentRequest.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentRequest.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentRequest.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for DocumentRequest",
        "operationId" : "deleteDocumentRequests",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentrequest/count" : {
      "get" : {
        "summary" : "Count of documentrequest",
        "operationId" : "countDocumentRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentrequest/search" : {
      "get" : {
        "summary" : "Search of documentrequest",
        "operationId" : "searchDocumentRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocumentRequest.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentrequest/report" : {
      "get" : {
        "summary" : "Report of documentrequest",
        "operationId" : "reportDocumentRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/{id}" : {
      "get" : {
        "summary" : "Get for Document",
        "operationId" : "getDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Document.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Document",
        "operationId" : "editDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Document.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Document",
        "operationId" : "deleteDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document" : {
      "get" : {
        "summary" : "Bulk Get for Document",
        "operationId" : "getDocuments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Document.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Document.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Document",
        "operationId" : "editDocuments",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Document.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Document.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Document.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Document.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a document",
        "operationId" : "addDocuments",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Document.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Document.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Document.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Document.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Document",
        "operationId" : "deleteDocuments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/count" : {
      "get" : {
        "summary" : "Count of document",
        "operationId" : "countDocuments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/search" : {
      "get" : {
        "summary" : "Search of document",
        "operationId" : "searchDocuments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Document.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/report" : {
      "get" : {
        "summary" : "Report of document",
        "operationId" : "reportDocuments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Document",
        "operationId" : "shareDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "SHARE", "PROOF", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/share" : {
      "put" : {
        "summary" : "Batch sharing of a Document",
        "operationId" : "batchShareDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "SHARE", "PROOF", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Document",
        "operationId" : "unshareDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Document",
        "operationId" : "batchUnshareDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Document",
        "operationId" : "sharePublicDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "SHARE", "PROOF", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Document",
        "operationId" : "batchSharePublicDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "SHARE", "PROOF", "DOWNLOAD", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Document",
        "operationId" : "unsharePublicDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Document",
        "operationId" : "batchUnsharePublicDocument",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "documentCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/checkIn" : {
      "summary" : "checkIn",
      "put" : {
        "operationId" : "documentCheckIn",
        "parameters" : [ {
          "name" : "documentIDs",
          "in" : "query",
          "description" : "documentIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/checkOut" : {
      "summary" : "checkOut",
      "put" : {
        "operationId" : "documentCheckOut",
        "parameters" : [ {
          "name" : "documentIDs",
          "in" : "query",
          "description" : "documentIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/completeLargeDocument" : {
      "summary" : "completeLargeDocument",
      "put" : {
        "operationId" : "documentCompleteLargeDocument",
        "parameters" : [ {
          "name" : "uploadID",
          "in" : "query",
          "description" : "uploadID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "key",
          "in" : "query",
          "description" : "key",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "eTagMap",
          "in" : "query",
          "description" : "eTagMap",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "docObjCode",
          "in" : "query",
          "description" : "docObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "docObjID",
          "in" : "query",
          "description" : "docObjID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileType",
          "in" : "query",
          "description" : "fileType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "folderID",
          "in" : "query",
          "description" : "folderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "createProof",
          "in" : "query",
          "description" : "createProof",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "interactive",
          "in" : "query",
          "description" : "interactive",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "advancedProofingOptions",
          "in" : "query",
          "description" : "advancedProofingOptions",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "proofID",
          "in" : "query",
          "description" : "proofID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "proofToken",
          "in" : "query",
          "description" : "proofToken",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/createLargeDocument" : {
      "summary" : "createLargeDocument",
      "put" : {
        "operationId" : "documentCreateLargeDocument",
        "parameters" : [ {
          "name" : "fileSize",
          "in" : "query",
          "description" : "fileSize",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "folderID",
          "in" : "query",
          "description" : "folderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/createLinkedProofVersion" : {
      "summary" : "createLinkedProofVersion",
      "put" : {
        "operationId" : "documentCreateLinkedProofVersion",
        "parameters" : [ {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileHandle",
          "in" : "query",
          "description" : "fileHandle",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "fileName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "creatorName",
          "in" : "query",
          "description" : "creatorName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/createProof" : {
      "summary" : "createProof",
      "put" : {
        "operationId" : "documentCreateProof",
        "parameters" : [ {
          "name" : "documentVersionID",
          "in" : "query",
          "description" : "documentVersionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "advancedProofingOptions",
          "in" : "query",
          "description" : "advancedProofingOptions",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/createProofRest" : {
      "summary" : "createProofRest",
      "put" : {
        "operationId" : "documentCreateProofRest",
        "parameters" : [ {
          "name" : "documentVersionID",
          "in" : "query",
          "description" : "documentVersionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "advancedProofingOptions",
          "in" : "query",
          "description" : "advancedProofingOptions",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/getDocumentProofTemplate" : {
      "summary" : "getDocumentProofTemplate",
      "put" : {
        "operationId" : "documentGetDocumentProofTemplate",
        "parameters" : [ {
          "name" : "proofToken",
          "in" : "query",
          "description" : "proofToken",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/getProofRecipients" : {
      "summary" : "getProofRecipients",
      "put" : {
        "operationId" : "documentGetProofRecipients",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "query",
          "description" : "templateId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "stageId",
          "in" : "query",
          "description" : "stageId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/getProofStages" : {
      "summary" : "getProofStages",
      "put" : {
        "operationId" : "documentGetProofStages",
        "parameters" : [ {
          "name" : "templateId",
          "in" : "query",
          "description" : "templateId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/getProofTemplate" : {
      "summary" : "getProofTemplate",
      "put" : {
        "operationId" : "documentGetProofTemplate",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/getTotalSizeForDocuments" : {
      "summary" : "getTotalSizeForDocuments",
      "put" : {
        "operationId" : "documentGetTotalSizeForDocuments",
        "parameters" : [ {
          "name" : "documentIDs",
          "in" : "query",
          "description" : "documentIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "includeLinked",
          "in" : "query",
          "description" : "includeLinked",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int64"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/isLinkedDocument" : {
      "summary" : "isLinkedDocument",
      "put" : {
        "operationId" : "documentIsLinkedDocument",
        "parameters" : [ {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/isProofAutoGenrationEnabled" : {
      "summary" : "isProofAutoGenrationEnabled",
      "put" : {
        "operationId" : "documentIsProofAutoGenrationEnabled",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/move" : {
      "summary" : "move",
      "put" : {
        "operationId" : "documentMove",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "docObjCode",
          "in" : "query",
          "description" : "docObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/moveToFolder" : {
      "summary" : "moveToFolder",
      "put" : {
        "operationId" : "documentMoveToFolder",
        "parameters" : [ {
          "name" : "documentIDs",
          "in" : "query",
          "description" : "documentIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "folderID",
          "in" : "query",
          "description" : "folderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/sendDocumentsToExternalProvider" : {
      "summary" : "sendDocumentsToExternalProvider",
      "put" : {
        "operationId" : "documentSendDocumentsToExternalProvider",
        "parameters" : [ {
          "name" : "documentIDs",
          "in" : "query",
          "description" : "documentIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "providerID",
          "in" : "query",
          "description" : "providerID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destinationFolderID",
          "in" : "query",
          "description" : "destinationFolderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "metadata",
          "in" : "query",
          "description" : "metadata",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/document/unlinkDocuments" : {
      "summary" : "unlinkDocuments",
      "put" : {
        "operationId" : "documentUnlinkDocuments",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/{id}" : {
      "get" : {
        "summary" : "Get for DocumentVersion",
        "operationId" : "getDocumentVersion",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./DocumentVersion.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion" : {
      "get" : {
        "summary" : "Bulk Get for DocumentVersion",
        "operationId" : "getDocumentVersions",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentVersion.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentVersion.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a documentversion",
        "operationId" : "addDocumentVersions",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./DocumentVersion.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./DocumentVersion.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./DocumentVersion.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./DocumentVersion.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/count" : {
      "get" : {
        "summary" : "Count of documentversion",
        "operationId" : "countDocumentVersions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/search" : {
      "get" : {
        "summary" : "Search of documentversion",
        "operationId" : "searchDocumentVersions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./DocumentVersion.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/report" : {
      "get" : {
        "summary" : "Report of documentversion",
        "operationId" : "reportDocumentVersions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/getDocumentReviewerDecision" : {
      "summary" : "getDocumentReviewerDecision",
      "put" : {
        "operationId" : "documentVersionGetDocumentReviewerDecision",
        "parameters" : [ {
          "name" : "documentVersionID",
          "in" : "query",
          "description" : "documentVersionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/getProofingTokens" : {
      "summary" : "getProofingTokens",
      "put" : {
        "operationId" : "documentVersionGetProofingTokens",
        "parameters" : [ {
          "name" : "versionID",
          "in" : "query",
          "description" : "versionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/documentversion/setDocumentReviewerDecision" : {
      "summary" : "setDocumentReviewerDecision",
      "put" : {
        "operationId" : "documentVersionSetDocumentReviewerDecision",
        "parameters" : [ {
          "name" : "documentVersionID",
          "in" : "query",
          "description" : "documentVersionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reviewerDecision",
          "in" : "query",
          "description" : "reviewerDecision",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "query",
          "description" : "comment",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement/{id}" : {
      "get" : {
        "summary" : "Get for Endorsement",
        "operationId" : "getEndorsement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Endorsement.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Endorsement",
        "operationId" : "deleteEndorsement",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement" : {
      "get" : {
        "summary" : "Bulk Get for Endorsement",
        "operationId" : "getEndorsements",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Endorsement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Endorsement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a endorsement",
        "operationId" : "addEndorsements",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Endorsement.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Endorsement.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Endorsement.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Endorsement.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Endorsement",
        "operationId" : "deleteEndorsements",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement/count" : {
      "get" : {
        "summary" : "Count of endorsement",
        "operationId" : "countEndorsements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement/search" : {
      "get" : {
        "summary" : "Search of endorsement",
        "operationId" : "searchEndorsements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Endorsement.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement/report" : {
      "get" : {
        "summary" : "Report of endorsement",
        "operationId" : "reportEndorsements",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement/like" : {
      "summary" : "like",
      "put" : {
        "operationId" : "endorsementLike",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsement/unlike" : {
      "summary" : "unlike",
      "put" : {
        "operationId" : "endorsementUnlike",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsementshare/{id}" : {
      "get" : {
        "summary" : "Get for EndorsementShare",
        "operationId" : "getEndorsementShare",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./EndorsementShare.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for EndorsementShare",
        "operationId" : "deleteEndorsementShare",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsementshare" : {
      "get" : {
        "summary" : "Bulk Get for EndorsementShare",
        "operationId" : "getEndorsementShares",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./EndorsementShare.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./EndorsementShare.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a endorsementshare",
        "operationId" : "addEndorsementShares",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./EndorsementShare.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./EndorsementShare.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./EndorsementShare.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./EndorsementShare.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for EndorsementShare",
        "operationId" : "deleteEndorsementShares",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsementshare/count" : {
      "get" : {
        "summary" : "Count of endorsementshare",
        "operationId" : "countEndorsementShares",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsementshare/search" : {
      "get" : {
        "summary" : "Search of endorsementshare",
        "operationId" : "searchEndorsementShares",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./EndorsementShare.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/endorsementshare/report" : {
      "get" : {
        "summary" : "Report of endorsementshare",
        "operationId" : "reportEndorsementShares",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/ewsfilehandle/upload" : {
      "summary" : "upload",
      "get" : {
        "operationId" : "getEwsFileHandleUpload",
        "parameters" : [ {
          "name" : "uploadInfo",
          "in" : "query",
          "description" : "uploadInfo",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./EwsFileHandle.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense/{id}" : {
      "get" : {
        "summary" : "Get for Expense",
        "operationId" : "getExpense",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Expense.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Expense",
        "operationId" : "editExpense",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Expense.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Expense",
        "operationId" : "deleteExpense",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense" : {
      "get" : {
        "summary" : "Bulk Get for Expense",
        "operationId" : "getExpenses",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Expense.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Expense.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Expense",
        "operationId" : "editExpenses",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Expense.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Expense.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Expense.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Expense.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a expense",
        "operationId" : "addExpenses",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Expense.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Expense.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Expense.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Expense.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Expense",
        "operationId" : "deleteExpenses",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense/count" : {
      "get" : {
        "summary" : "Count of expense",
        "operationId" : "countExpenses",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense/search" : {
      "get" : {
        "summary" : "Search of expense",
        "operationId" : "searchExpenses",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Expense.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense/report" : {
      "get" : {
        "summary" : "Report of expense",
        "operationId" : "reportExpenses",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "expenseCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expense/move" : {
      "summary" : "move",
      "put" : {
        "operationId" : "expenseMove",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "expObjCode",
          "in" : "query",
          "description" : "expObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expensetype/{id}" : {
      "get" : {
        "summary" : "Get for ExpenseType",
        "operationId" : "getExpenseType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExpenseType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ExpenseType",
        "operationId" : "editExpenseType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExpenseType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ExpenseType",
        "operationId" : "deleteExpenseType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expensetype" : {
      "get" : {
        "summary" : "Bulk Get for ExpenseType",
        "operationId" : "getExpenseTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExpenseType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExpenseType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ExpenseType",
        "operationId" : "editExpenseTypes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExpenseType.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExpenseType.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExpenseType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExpenseType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a expensetype",
        "operationId" : "addExpenseTypes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExpenseType.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExpenseType.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExpenseType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExpenseType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ExpenseType",
        "operationId" : "deleteExpenseTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expensetype/replace" : {
      "put" : {
        "summary" : "Replace of expensetype",
        "operationId" : "replaceExpenseTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expensetype/count" : {
      "get" : {
        "summary" : "Count of expensetype",
        "operationId" : "countExpenseTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expensetype/search" : {
      "get" : {
        "summary" : "Search of expensetype",
        "operationId" : "searchExpenseTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExpenseType.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/expensetype/report" : {
      "get" : {
        "summary" : "Report of expensetype",
        "operationId" : "reportExpenseTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate/{id}" : {
      "get" : {
        "summary" : "Get for ExchangeRate",
        "operationId" : "getExchangeRate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExchangeRate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ExchangeRate",
        "operationId" : "editExchangeRate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExchangeRate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ExchangeRate",
        "operationId" : "deleteExchangeRate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate" : {
      "get" : {
        "summary" : "Bulk Get for ExchangeRate",
        "operationId" : "getExchangeRates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExchangeRate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExchangeRate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ExchangeRate",
        "operationId" : "editExchangeRates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExchangeRate.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExchangeRate.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExchangeRate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExchangeRate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a exchangerate",
        "operationId" : "addExchangeRates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExchangeRate.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExchangeRate.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExchangeRate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExchangeRate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ExchangeRate",
        "operationId" : "deleteExchangeRates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate/count" : {
      "get" : {
        "summary" : "Count of exchangerate",
        "operationId" : "countExchangeRates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate/search" : {
      "get" : {
        "summary" : "Search of exchangerate",
        "operationId" : "searchExchangeRates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExchangeRate.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate/report" : {
      "get" : {
        "summary" : "Report of exchangerate",
        "operationId" : "reportExchangeRates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate/getCustomerCurrencies" : {
      "summary" : "getCustomerCurrencies",
      "put" : {
        "operationId" : "exchangeRateGetCustomerCurrencies",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/exchangerate/saveCustomerExchangeRates" : {
      "summary" : "saveCustomerExchangeRates",
      "put" : {
        "operationId" : "exchangeRateSaveCustomerExchangeRates",
        "parameters" : [ {
          "name" : "baseCurrency",
          "in" : "query",
          "description" : "baseCurrency",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rates",
          "in" : "query",
          "description" : "rates",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalproviderconfig/{id}" : {
      "get" : {
        "summary" : "Get for ExternalProviderConfig",
        "operationId" : "getExternalProviderConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalProviderConfig.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ExternalProviderConfig",
        "operationId" : "editExternalProviderConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalProviderConfig.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ExternalProviderConfig",
        "operationId" : "deleteExternalProviderConfig",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalproviderconfig" : {
      "get" : {
        "summary" : "Bulk Get for ExternalProviderConfig",
        "operationId" : "getExternalProviderConfigs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalProviderConfig.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalProviderConfig.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ExternalProviderConfig",
        "operationId" : "editExternalProviderConfigs",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExternalProviderConfig.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExternalProviderConfig.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalProviderConfig.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalProviderConfig.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a externalproviderconfig",
        "operationId" : "addExternalProviderConfigs",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExternalProviderConfig.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExternalProviderConfig.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalProviderConfig.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalProviderConfig.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ExternalProviderConfig",
        "operationId" : "deleteExternalProviderConfigs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalproviderconfig/count" : {
      "get" : {
        "summary" : "Count of externalproviderconfig",
        "operationId" : "countExternalProviderConfigs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalproviderconfig/search" : {
      "get" : {
        "summary" : "Search of externalproviderconfig",
        "operationId" : "searchExternalProviderConfigs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExternalProviderConfig.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalproviderconfig/report" : {
      "get" : {
        "summary" : "Report of externalproviderconfig",
        "operationId" : "reportExternalProviderConfigs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/search" : {
      "get" : {
        "summary" : "Search of externaldocument",
        "operationId" : "searchExternalDocuments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExternalDocument.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/browseListWithLinkAction" : {
      "summary" : "browseListWithLinkAction",
      "put" : {
        "operationId" : "externalDocumentBrowseListWithLinkAction",
        "parameters" : [ {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchParams",
          "in" : "query",
          "description" : "searchParams",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "loadBreadcrumbs",
          "in" : "query",
          "description" : "loadBreadcrumbs",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "linkAction",
          "in" : "query",
          "description" : "linkAction",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/getDocumentDownloadUrl" : {
      "summary" : "getDocumentDownloadUrl",
      "put" : {
        "operationId" : "externalDocumentGetDocumentDownloadUrl",
        "parameters" : [ {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentID",
          "in" : "query",
          "description" : "documentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isOpen",
          "in" : "query",
          "description" : "isOpen",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/getRootFolderID" : {
      "summary" : "getRootFolderID",
      "put" : {
        "operationId" : "externalDocumentGetRootFolderID",
        "parameters" : [ {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/getRootFolderIDFromDB" : {
      "summary" : "getRootFolderIDFromDB",
      "put" : {
        "operationId" : "externalDocumentGetRootFolderIDFromDB",
        "parameters" : [ {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/linkExternalDocumentObjects" : {
      "summary" : "linkExternalDocumentObjects",
      "put" : {
        "operationId" : "externalDocumentLinkExternalDocumentObjects",
        "parameters" : [ {
          "name" : "refObjCode",
          "in" : "query",
          "description" : "refObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "refObjID",
          "in" : "query",
          "description" : "refObjID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objects",
          "in" : "query",
          "description" : "objects",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "destFolderID",
          "in" : "query",
          "description" : "destFolderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "advancedProofingOptions",
          "in" : "query",
          "description" : "advancedProofingOptions",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/setLinkedFolderMetadata" : {
      "summary" : "setLinkedFolderMetadata",
      "put" : {
        "operationId" : "externalDocumentSetLinkedFolderMetadata",
        "parameters" : [ {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "externalStorageID",
          "in" : "query",
          "description" : "externalStorageID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/browseList" : {
      "summary" : "browseList",
      "get" : {
        "operationId" : "getExternalDocumentBrowseList",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchParams",
          "in" : "query",
          "description" : "searchParams",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExternalDocument.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/getFolderMetaData" : {
      "summary" : "getFolderMetaData",
      "get" : {
        "operationId" : "getExternalDocumentGetFolderMetaData",
        "parameters" : [ {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "folderID",
          "in" : "query",
          "description" : "folderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isForLinkedFolder",
          "in" : "query",
          "description" : "isForLinkedFolder",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalDocument.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externaldocument/searchExternalDocuments" : {
      "summary" : "searchExternalDocuments",
      "get" : {
        "operationId" : "getExternalDocumentSearchExternalDocuments",
        "parameters" : [ {
          "name" : "providerType",
          "in" : "query",
          "description" : "providerType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "documentProviderID",
          "in" : "query",
          "description" : "documentProviderID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "searchString",
          "in" : "query",
          "description" : "searchString",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "offset",
          "in" : "query",
          "description" : "offset",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "searchInFolder",
          "in" : "query",
          "description" : "searchInFolder",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExternalDocument.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/{id}" : {
      "get" : {
        "summary" : "Get for ExternalSection",
        "operationId" : "getExternalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ExternalSection",
        "operationId" : "editExternalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ExternalSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ExternalSection",
        "operationId" : "deleteExternalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection" : {
      "get" : {
        "summary" : "Bulk Get for ExternalSection",
        "operationId" : "getExternalSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ExternalSection",
        "operationId" : "editExternalSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExternalSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExternalSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a externalsection",
        "operationId" : "addExternalSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ExternalSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ExternalSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ExternalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ExternalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ExternalSection",
        "operationId" : "deleteExternalSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/count" : {
      "get" : {
        "summary" : "Count of externalsection",
        "operationId" : "countExternalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/search" : {
      "get" : {
        "summary" : "Search of externalsection",
        "operationId" : "searchExternalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ExternalSection.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/report" : {
      "get" : {
        "summary" : "Report of externalsection",
        "operationId" : "reportExternalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/calculateIframeURL" : {
      "summary" : "calculateIframeURL",
      "put" : {
        "operationId" : "externalSectionCalculateIframeURL",
        "parameters" : [ {
          "name" : "externalSectionID",
          "in" : "query",
          "description" : "externalSectionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/calculateIframeURLS" : {
      "summary" : "calculateIframeURLS",
      "put" : {
        "operationId" : "externalSectionCalculateIframeURLS",
        "parameters" : [ {
          "name" : "externalSectionIDs",
          "in" : "query",
          "description" : "externalSectionIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/calculateURL" : {
      "summary" : "calculateURL",
      "put" : {
        "operationId" : "externalSectionCalculateURL",
        "parameters" : [ {
          "name" : "externalSectionID",
          "in" : "query",
          "description" : "externalSectionID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/externalsection/calculateURLS" : {
      "summary" : "calculateURLS",
      "put" : {
        "operationId" : "externalSectionCalculateURLS",
        "parameters" : [ {
          "name" : "externalSectionIDs",
          "in" : "query",
          "description" : "externalSectionIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/financialdata/{id}" : {
      "get" : {
        "summary" : "Get for FinancialData",
        "operationId" : "getFinancialData",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./FinancialData.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/financialdata" : {
      "get" : {
        "summary" : "Bulk Get for FinancialData",
        "operationId" : "getFinancialDatas",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./FinancialData.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./FinancialData.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/financialdata/count" : {
      "get" : {
        "summary" : "Count of financialdata",
        "operationId" : "countFinancialDatas",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/financialdata/search" : {
      "get" : {
        "summary" : "Search of financialdata",
        "operationId" : "searchFinancialDatas",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./FinancialData.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/financialdata/report" : {
      "get" : {
        "summary" : "Report of financialdata",
        "operationId" : "reportFinancialDatas",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/favorite/{id}" : {
      "get" : {
        "summary" : "Get for Favorite",
        "operationId" : "getFavorite",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Favorite.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Favorite",
        "operationId" : "deleteFavorite",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/favorite" : {
      "get" : {
        "summary" : "Bulk Get for Favorite",
        "operationId" : "getFavorites",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Favorite.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Favorite.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a favorite",
        "operationId" : "addFavorites",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Favorite.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Favorite.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Favorite.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Favorite.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Favorite",
        "operationId" : "deleteFavorites",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/favorite/count" : {
      "get" : {
        "summary" : "Count of favorite",
        "operationId" : "countFavorites",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/favorite/search" : {
      "get" : {
        "summary" : "Search of favorite",
        "operationId" : "searchFavorites",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Favorite.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/favorite/report" : {
      "get" : {
        "summary" : "Report of favorite",
        "operationId" : "reportFavorites",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/{id}" : {
      "get" : {
        "summary" : "Get for Group",
        "operationId" : "getGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Group.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Group",
        "operationId" : "editGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Group.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Group",
        "operationId" : "deleteGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group" : {
      "get" : {
        "summary" : "Bulk Get for Group",
        "operationId" : "getGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Group.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Group.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Group",
        "operationId" : "editGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Group.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Group.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Group.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Group.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a group",
        "operationId" : "addGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Group.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Group.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Group.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Group.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Group",
        "operationId" : "deleteGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/replace" : {
      "put" : {
        "summary" : "Replace of group",
        "operationId" : "replaceGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/count" : {
      "get" : {
        "summary" : "Count of group",
        "operationId" : "countGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/search" : {
      "get" : {
        "summary" : "Search of group",
        "operationId" : "searchGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Group.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/report" : {
      "get" : {
        "summary" : "Report of group",
        "operationId" : "reportGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Group",
        "operationId" : "shareGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/share" : {
      "put" : {
        "summary" : "Batch sharing of a Group",
        "operationId" : "batchShareGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Group",
        "operationId" : "unshareGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Group",
        "operationId" : "batchUnshareGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Group",
        "operationId" : "sharePublicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Group",
        "operationId" : "batchSharePublicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Group",
        "operationId" : "unsharePublicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Group",
        "operationId" : "batchUnsharePublicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/addRemoveLicenseTypeLimits" : {
      "summary" : "addRemoveLicenseTypeLimits",
      "put" : {
        "operationId" : "groupAddRemoveLicenseTypeLimits",
        "parameters" : [ {
          "name" : "addGroupIDs",
          "in" : "query",
          "description" : "addGroupIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "removeGroupIDs",
          "in" : "query",
          "description" : "removeGroupIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/addSubgroups" : {
      "summary" : "addSubgroups",
      "put" : {
        "operationId" : "groupAddSubgroups",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newSubgroupIDs",
          "in" : "query",
          "description" : "newSubgroupIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/assignMultiple" : {
      "summary" : "assignMultiple",
      "put" : {
        "operationId" : "groupAssignMultiple",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "roleIDs",
          "in" : "query",
          "description" : "roleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "teamID",
          "in" : "query",
          "description" : "teamID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "groupCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/checkDelete" : {
      "summary" : "checkDelete",
      "put" : {
        "operationId" : "groupCheckDelete",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/completeGroupInfo" : {
      "summary" : "completeGroupInfo",
      "put" : {
        "operationId" : "groupCompleteGroupInfo",
        "parameters" : [ {
          "name" : "groupId",
          "in" : "query",
          "description" : "groupId",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/getGroupMembers" : {
      "summary" : "getGroupMembers",
      "put" : {
        "operationId" : "groupGetGroupMembers",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/getParents" : {
      "summary" : "getParents",
      "put" : {
        "operationId" : "groupGetParents",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/linkExternalObject" : {
      "summary" : "linkExternalObject",
      "put" : {
        "operationId" : "groupLinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "URL",
          "in" : "query",
          "description" : "URL",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "params",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/replaceDeleteGroups" : {
      "summary" : "replaceDeleteGroups",
      "put" : {
        "operationId" : "groupReplaceDeleteGroups",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "replaceGroupID",
          "in" : "query",
          "description" : "replaceGroupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/setLicenseTypeLimit" : {
      "summary" : "setLicenseTypeLimit",
      "put" : {
        "operationId" : "groupSetLicenseTypeLimit",
        "parameters" : [ {
          "name" : "groupID",
          "in" : "query",
          "description" : "groupID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "licenseType",
          "in" : "query",
          "description" : "licenseType",
          "required" : false,
          "schema" : {
            "type" : "string",
            "enum" : [ "F", "T", "C", "L", "R", "X", "F", "C", "R", "X" ]
          }
        }, {
          "name" : "ltLimit",
          "in" : "query",
          "description" : "ltLimit",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/unlinkExternalObject" : {
      "summary" : "unlinkExternalObject",
      "put" : {
        "operationId" : "groupUnlinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/group/updateMembersList" : {
      "summary" : "updateMembersList",
      "put" : {
        "operationId" : "groupUpdateMembersList",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newMemberIDs",
          "in" : "query",
          "description" : "newMemberIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "removedMemberIDs",
          "in" : "query",
          "description" : "removedMemberIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/{id}" : {
      "get" : {
        "summary" : "Get for Hour",
        "operationId" : "getHour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Hour.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Hour",
        "operationId" : "editHour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Hour.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Hour",
        "operationId" : "deleteHour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour" : {
      "get" : {
        "summary" : "Bulk Get for Hour",
        "operationId" : "getHours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Hour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Hour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Hour",
        "operationId" : "editHours",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Hour.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Hour.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Hour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Hour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a hour",
        "operationId" : "addHours",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Hour.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Hour.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Hour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Hour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Hour",
        "operationId" : "deleteHours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/count" : {
      "get" : {
        "summary" : "Count of hour",
        "operationId" : "countHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/search" : {
      "get" : {
        "summary" : "Search of hour",
        "operationId" : "searchHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Hour.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/report" : {
      "get" : {
        "summary" : "Report of hour",
        "operationId" : "reportHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/approve" : {
      "summary" : "approve",
      "put" : {
        "operationId" : "hourApprove",
        "parameters" : [ {
          "name" : "hourID",
          "in" : "query",
          "description" : "hourID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "hourCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hour/unapprove" : {
      "summary" : "unapprove",
      "put" : {
        "operationId" : "hourUnapprove",
        "parameters" : [ {
          "name" : "hourID",
          "in" : "query",
          "description" : "hourID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "comment",
          "in" : "query",
          "description" : "comment",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/{id}" : {
      "get" : {
        "summary" : "Get for HourType",
        "operationId" : "getHourType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./HourType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a HourType",
        "operationId" : "editHourType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./HourType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for HourType",
        "operationId" : "deleteHourType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype" : {
      "get" : {
        "summary" : "Bulk Get for HourType",
        "operationId" : "getHourTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./HourType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./HourType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for HourType",
        "operationId" : "editHourTypes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./HourType.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./HourType.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./HourType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./HourType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a hourtype",
        "operationId" : "addHourTypes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./HourType.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./HourType.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./HourType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./HourType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for HourType",
        "operationId" : "deleteHourTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/replace" : {
      "put" : {
        "summary" : "Replace of hourtype",
        "operationId" : "replaceHourTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/count" : {
      "get" : {
        "summary" : "Count of hourtype",
        "operationId" : "countHourTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/search" : {
      "get" : {
        "summary" : "Search of hourtype",
        "operationId" : "searchHourTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./HourType.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/report" : {
      "get" : {
        "summary" : "Report of hourtype",
        "operationId" : "reportHourTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/defaultOpTaskHourType" : {
      "summary" : "defaultOpTaskHourType",
      "get" : {
        "operationId" : "getHourTypeDefaultOpTaskHourType",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./HourType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/defaultProjectHourType" : {
      "summary" : "defaultProjectHourType",
      "get" : {
        "operationId" : "getHourTypeDefaultProjectHourType",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./HourType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/defaultTaskHourType" : {
      "summary" : "defaultTaskHourType",
      "get" : {
        "operationId" : "getHourTypeDefaultTaskHourType",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./HourType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/globalHourTypes" : {
      "summary" : "globalHourTypes",
      "get" : {
        "operationId" : "getHourTypeGlobalHourTypes",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./HourType.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/hourtype/objectHourTypes" : {
      "summary" : "objectHourTypes",
      "get" : {
        "operationId" : "getHourTypeObjectHourTypes",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./HourType.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/initiative/{id}" : {
      "get" : {
        "summary" : "Get for Initiative",
        "operationId" : "getInitiative",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Initiative.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/initiative" : {
      "get" : {
        "summary" : "Bulk Get for Initiative",
        "operationId" : "getInitiatives",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Initiative.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Initiative.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/initiative/count" : {
      "get" : {
        "summary" : "Count of initiative",
        "operationId" : "countInitiatives",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/initiative/search" : {
      "get" : {
        "summary" : "Search of initiative",
        "operationId" : "searchInitiatives",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Initiative.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/initiative/report" : {
      "get" : {
        "summary" : "Report of initiative",
        "operationId" : "reportInitiatives",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iprange/{id}" : {
      "get" : {
        "summary" : "Get for IPRange",
        "operationId" : "getIPRange",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./IPRange.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a IPRange",
        "operationId" : "editIPRange",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./IPRange.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for IPRange",
        "operationId" : "deleteIPRange",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iprange" : {
      "get" : {
        "summary" : "Bulk Get for IPRange",
        "operationId" : "getIPRanges",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./IPRange.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./IPRange.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for IPRange",
        "operationId" : "editIPRanges",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./IPRange.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./IPRange.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./IPRange.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./IPRange.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a iprange",
        "operationId" : "addIPRanges",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./IPRange.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./IPRange.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./IPRange.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./IPRange.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for IPRange",
        "operationId" : "deleteIPRanges",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iprange/count" : {
      "get" : {
        "summary" : "Count of iprange",
        "operationId" : "countIPRanges",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iprange/search" : {
      "get" : {
        "summary" : "Search of iprange",
        "operationId" : "searchIPRanges",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./IPRange.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iprange/report" : {
      "get" : {
        "summary" : "Report of iprange",
        "operationId" : "reportIPRanges",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration/{id}" : {
      "get" : {
        "summary" : "Get for Iteration",
        "operationId" : "getIteration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Iteration.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Iteration",
        "operationId" : "editIteration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Iteration.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Iteration",
        "operationId" : "deleteIteration",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration" : {
      "get" : {
        "summary" : "Bulk Get for Iteration",
        "operationId" : "getIterations",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Iteration.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Iteration.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Iteration",
        "operationId" : "editIterations",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Iteration.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Iteration.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Iteration.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Iteration.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a iteration",
        "operationId" : "addIterations",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Iteration.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Iteration.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Iteration.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Iteration.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Iteration",
        "operationId" : "deleteIterations",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration/count" : {
      "get" : {
        "summary" : "Count of iteration",
        "operationId" : "countIterations",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration/search" : {
      "get" : {
        "summary" : "Search of iteration",
        "operationId" : "searchIterations",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Iteration.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration/report" : {
      "get" : {
        "summary" : "Report of iteration",
        "operationId" : "reportIterations",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration/moveIssues" : {
      "summary" : "moveIssues",
      "put" : {
        "operationId" : "iterationMoveIssues",
        "parameters" : [ {
          "name" : "iterationID",
          "in" : "query",
          "description" : "iterationID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "teamID",
          "in" : "query",
          "description" : "teamID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "issueIDs",
          "in" : "query",
          "description" : "issueIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/iteration/moveStories" : {
      "summary" : "moveStories",
      "put" : {
        "operationId" : "iterationMoveStories",
        "parameters" : [ {
          "name" : "iterationID",
          "in" : "query",
          "description" : "iterationID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "teamID",
          "in" : "query",
          "description" : "teamID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "storyIDs",
          "in" : "query",
          "description" : "storyIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry/{id}" : {
      "get" : {
        "summary" : "Get for JournalEntry",
        "operationId" : "getJournalEntry",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./JournalEntry.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry" : {
      "get" : {
        "summary" : "Bulk Get for JournalEntry",
        "operationId" : "getJournalEntrys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./JournalEntry.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./JournalEntry.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry/count" : {
      "get" : {
        "summary" : "Count of journalentry",
        "operationId" : "countJournalEntrys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry/search" : {
      "get" : {
        "summary" : "Search of journalentry",
        "operationId" : "searchJournalEntrys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./JournalEntry.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry/report" : {
      "get" : {
        "summary" : "Report of journalentry",
        "operationId" : "reportJournalEntrys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry/like" : {
      "summary" : "like",
      "put" : {
        "operationId" : "journalEntryLike",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/journalentry/unlike" : {
      "summary" : "unlike",
      "put" : {
        "operationId" : "journalEntryUnlike",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/kanbanboard/{id}" : {
      "get" : {
        "summary" : "Get for KanbanBoard",
        "operationId" : "getKanbanBoard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./KanbanBoard.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a KanbanBoard",
        "operationId" : "editKanbanBoard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./KanbanBoard.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for KanbanBoard",
        "operationId" : "deleteKanbanBoard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/kanbanboard" : {
      "get" : {
        "summary" : "Bulk Get for KanbanBoard",
        "operationId" : "getKanbanBoards",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./KanbanBoard.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./KanbanBoard.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for KanbanBoard",
        "operationId" : "editKanbanBoards",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./KanbanBoard.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./KanbanBoard.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./KanbanBoard.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./KanbanBoard.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a kanbanboard",
        "operationId" : "addKanbanBoards",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./KanbanBoard.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./KanbanBoard.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./KanbanBoard.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./KanbanBoard.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for KanbanBoard",
        "operationId" : "deleteKanbanBoards",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/kanbanboard/count" : {
      "get" : {
        "summary" : "Count of kanbanboard",
        "operationId" : "countKanbanBoards",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/kanbanboard/search" : {
      "get" : {
        "summary" : "Search of kanbanboard",
        "operationId" : "searchKanbanBoards",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./KanbanBoard.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/kanbanboard/report" : {
      "get" : {
        "summary" : "Report of kanbanboard",
        "operationId" : "reportKanbanBoards",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/like/{id}" : {
      "get" : {
        "summary" : "Get for Like",
        "operationId" : "getLike",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Like.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/like" : {
      "get" : {
        "summary" : "Bulk Get for Like",
        "operationId" : "getLikes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Like.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Like.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/like/count" : {
      "get" : {
        "summary" : "Count of like",
        "operationId" : "countLikes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/like/search" : {
      "get" : {
        "summary" : "Search of like",
        "operationId" : "searchLikes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Like.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/like/report" : {
      "get" : {
        "summary" : "Report of like",
        "operationId" : "reportLikes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/{id}" : {
      "get" : {
        "summary" : "Get for CustomLabel",
        "operationId" : "getCustomLabel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./CustomLabel.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for CustomLabel",
        "operationId" : "deleteCustomLabel",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel" : {
      "get" : {
        "summary" : "Bulk Get for CustomLabel",
        "operationId" : "getCustomLabels",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomLabel.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomLabel.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a customlabel",
        "operationId" : "addCustomLabels",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./CustomLabel.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./CustomLabel.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./CustomLabel.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./CustomLabel.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for CustomLabel",
        "operationId" : "deleteCustomLabels",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/count" : {
      "get" : {
        "summary" : "Count of customlabel",
        "operationId" : "countCustomLabels",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/search" : {
      "get" : {
        "summary" : "Search of customlabel",
        "operationId" : "searchCustomLabels",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomLabel.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/report" : {
      "get" : {
        "summary" : "Report of customlabel",
        "operationId" : "reportCustomLabels",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/checkDelete" : {
      "summary" : "checkDelete",
      "put" : {
        "operationId" : "customLabelCheckDelete",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "id",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "layoutTemplateID",
          "in" : "query",
          "description" : "layoutTemplateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/inUseByOtherLayoutTemplates" : {
      "summary" : "inUseByOtherLayoutTemplates",
      "put" : {
        "operationId" : "customLabelInUseByOtherLayoutTemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "id",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "layoutTemplateID",
          "in" : "query",
          "description" : "layoutTemplateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/removeCustomLabel" : {
      "summary" : "removeCustomLabel",
      "put" : {
        "operationId" : "customLabelRemoveCustomLabel",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "id",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "layoutTemplateID",
          "in" : "query",
          "description" : "layoutTemplateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/customLabels" : {
      "summary" : "customLabels",
      "get" : {
        "operationId" : "getCustomLabelCustomLabels",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomLabel.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/customlabel/usedCustomLabels" : {
      "summary" : "usedCustomLabels",
      "get" : {
        "operationId" : "getCustomLabelUsedCustomLabels",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./CustomLabel.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/layouttemplate/{id}" : {
      "get" : {
        "summary" : "Get for LayoutTemplate",
        "operationId" : "getLayoutTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./LayoutTemplate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a LayoutTemplate",
        "operationId" : "editLayoutTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./LayoutTemplate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for LayoutTemplate",
        "operationId" : "deleteLayoutTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/layouttemplate" : {
      "get" : {
        "summary" : "Bulk Get for LayoutTemplate",
        "operationId" : "getLayoutTemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./LayoutTemplate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./LayoutTemplate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for LayoutTemplate",
        "operationId" : "editLayoutTemplates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./LayoutTemplate.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./LayoutTemplate.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./LayoutTemplate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./LayoutTemplate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a layouttemplate",
        "operationId" : "addLayoutTemplates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./LayoutTemplate.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./LayoutTemplate.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./LayoutTemplate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./LayoutTemplate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for LayoutTemplate",
        "operationId" : "deleteLayoutTemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/layouttemplate/count" : {
      "get" : {
        "summary" : "Count of layouttemplate",
        "operationId" : "countLayoutTemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/layouttemplate/search" : {
      "get" : {
        "summary" : "Search of layouttemplate",
        "operationId" : "searchLayoutTemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./LayoutTemplate.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/layouttemplate/report" : {
      "get" : {
        "summary" : "Report of layouttemplate",
        "operationId" : "reportLayoutTemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestone/{id}" : {
      "get" : {
        "summary" : "Get for Milestone",
        "operationId" : "getMilestone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Milestone.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Milestone",
        "operationId" : "editMilestone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Milestone.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Milestone",
        "operationId" : "deleteMilestone",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestone" : {
      "get" : {
        "summary" : "Bulk Get for Milestone",
        "operationId" : "getMilestones",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Milestone.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Milestone.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Milestone",
        "operationId" : "editMilestones",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Milestone.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Milestone.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Milestone.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Milestone.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a milestone",
        "operationId" : "addMilestones",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Milestone.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Milestone.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Milestone.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Milestone.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Milestone",
        "operationId" : "deleteMilestones",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestone/count" : {
      "get" : {
        "summary" : "Count of milestone",
        "operationId" : "countMilestones",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestone/search" : {
      "get" : {
        "summary" : "Search of milestone",
        "operationId" : "searchMilestones",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Milestone.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestone/report" : {
      "get" : {
        "summary" : "Report of milestone",
        "operationId" : "reportMilestones",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestonepath/{id}" : {
      "get" : {
        "summary" : "Get for MilestonePath",
        "operationId" : "getMilestonePath",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./MilestonePath.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a MilestonePath",
        "operationId" : "editMilestonePath",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./MilestonePath.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for MilestonePath",
        "operationId" : "deleteMilestonePath",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestonepath" : {
      "get" : {
        "summary" : "Bulk Get for MilestonePath",
        "operationId" : "getMilestonePaths",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./MilestonePath.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./MilestonePath.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for MilestonePath",
        "operationId" : "editMilestonePaths",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./MilestonePath.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./MilestonePath.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./MilestonePath.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./MilestonePath.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a milestonepath",
        "operationId" : "addMilestonePaths",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./MilestonePath.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./MilestonePath.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./MilestonePath.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./MilestonePath.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for MilestonePath",
        "operationId" : "deleteMilestonePaths",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestonepath/count" : {
      "get" : {
        "summary" : "Count of milestonepath",
        "operationId" : "countMilestonePaths",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestonepath/search" : {
      "get" : {
        "summary" : "Search of milestonepath",
        "operationId" : "searchMilestonePaths",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./MilestonePath.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/milestonepath/report" : {
      "get" : {
        "summary" : "Report of milestonepath",
        "operationId" : "reportMilestonePaths",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note/{id}" : {
      "get" : {
        "summary" : "Get for Note",
        "operationId" : "getNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Note.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Note",
        "operationId" : "editNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Note.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Note",
        "operationId" : "deleteNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note" : {
      "get" : {
        "summary" : "Bulk Get for Note",
        "operationId" : "getNotes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Note.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Note.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Note",
        "operationId" : "editNotes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Note.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Note.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Note.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Note.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a note",
        "operationId" : "addNotes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Note.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Note.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Note.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Note.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Note",
        "operationId" : "deleteNotes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note/count" : {
      "get" : {
        "summary" : "Count of note",
        "operationId" : "countNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note/search" : {
      "get" : {
        "summary" : "Search of note",
        "operationId" : "searchNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Note.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note/report" : {
      "get" : {
        "summary" : "Report of note",
        "operationId" : "reportNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note/like" : {
      "summary" : "like",
      "put" : {
        "operationId" : "noteLike",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/note/unlike" : {
      "summary" : "unlike",
      "put" : {
        "operationId" : "noteUnlike",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/notetag/{id}" : {
      "get" : {
        "summary" : "Get for NoteTag",
        "operationId" : "getNoteTag",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./NoteTag.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/notetag" : {
      "get" : {
        "summary" : "Bulk Get for NoteTag",
        "operationId" : "getNoteTags",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./NoteTag.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./NoteTag.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/notetag/count" : {
      "get" : {
        "summary" : "Count of notetag",
        "operationId" : "countNoteTags",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/notetag/search" : {
      "get" : {
        "summary" : "Search of notetag",
        "operationId" : "searchNoteTags",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./NoteTag.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/notetag/report" : {
      "get" : {
        "summary" : "Report of notetag",
        "operationId" : "reportNoteTags",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/objectcategory/{id}" : {
      "get" : {
        "summary" : "Get for ObjectCategory",
        "operationId" : "getObjectCategory",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ObjectCategory.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/objectcategory" : {
      "get" : {
        "summary" : "Bulk Get for ObjectCategory",
        "operationId" : "getObjectCategorys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ObjectCategory.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ObjectCategory.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/objectcategory/count" : {
      "get" : {
        "summary" : "Count of objectcategory",
        "operationId" : "countObjectCategorys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/objectcategory/search" : {
      "get" : {
        "summary" : "Search of objectcategory",
        "operationId" : "searchObjectCategorys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ObjectCategory.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/objectcategory/report" : {
      "get" : {
        "summary" : "Report of objectcategory",
        "operationId" : "reportObjectCategorys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/objectcategory/getForObject" : {
      "summary" : "getForObject",
      "get" : {
        "operationId" : "getObjectCategoryGetForObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ObjectCategory.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/{id}" : {
      "get" : {
        "summary" : "Get for OpTask",
        "operationId" : "getOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./OpTask.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a OpTask",
        "operationId" : "editOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./OpTask.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for OpTask",
        "operationId" : "deleteOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask" : {
      "get" : {
        "summary" : "Bulk Get for OpTask",
        "operationId" : "getOpTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./OpTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./OpTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for OpTask",
        "operationId" : "editOpTasks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./OpTask.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./OpTask.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./OpTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./OpTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a optask",
        "operationId" : "addOpTasks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./OpTask.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./OpTask.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./OpTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./OpTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for OpTask",
        "operationId" : "deleteOpTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/count" : {
      "get" : {
        "summary" : "Count of optask",
        "operationId" : "countOpTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/search" : {
      "get" : {
        "summary" : "Search of optask",
        "operationId" : "searchOpTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./OpTask.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/report" : {
      "get" : {
        "summary" : "Report of optask",
        "operationId" : "reportOpTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a OpTask",
        "operationId" : "shareOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/share" : {
      "put" : {
        "summary" : "Batch sharing of a OpTask",
        "operationId" : "batchShareOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a OpTask",
        "operationId" : "unshareOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a OpTask",
        "operationId" : "batchUnshareOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a OpTask",
        "operationId" : "sharePublicOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a OpTask",
        "operationId" : "batchSharePublicOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a OpTask",
        "operationId" : "unsharePublicOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a OpTask",
        "operationId" : "batchUnsharePublicOpTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/acceptWork" : {
      "summary" : "acceptWork",
      "put" : {
        "operationId" : "opTaskAcceptWork",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/approveApproval" : {
      "summary" : "approveApproval",
      "put" : {
        "operationId" : "opTaskApproveApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "password",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditNote",
          "in" : "query",
          "description" : "auditNote",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditUserIDs",
          "in" : "query",
          "description" : "auditUserIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sendNoteAsEmail",
          "in" : "query",
          "description" : "sendNoteAsEmail",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/assign" : {
      "summary" : "assign",
      "put" : {
        "operationId" : "opTaskAssign",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/assignMultiple" : {
      "summary" : "assignMultiple",
      "put" : {
        "operationId" : "opTaskAssignMultiple",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "roleIDs",
          "in" : "query",
          "description" : "roleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "teamIDs",
          "in" : "query",
          "description" : "teamIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "teamID",
          "in" : "query",
          "description" : "teamID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/bulkMove" : {
      "summary" : "bulkMove",
      "put" : {
        "operationId" : "opTaskBulkMove",
        "parameters" : [ {
          "name" : "issueIDs",
          "in" : "query",
          "description" : "issueIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/bulkMoveWithOptions" : {
      "summary" : "bulkMoveWithOptions",
      "put" : {
        "operationId" : "opTaskBulkMoveWithOptions",
        "parameters" : [ {
          "name" : "IDs",
          "in" : "query",
          "description" : "IDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newName",
          "in" : "query",
          "description" : "newName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "opTaskCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/convertToProject" : {
      "summary" : "convertToProject",
      "put" : {
        "operationId" : "opTaskConvertToProject",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "query",
          "description" : "project",
          "required" : false,
          "schema" : {
            "$ref" : "./Project.json"
          }
        }, {
          "name" : "exchangeRate",
          "in" : "query",
          "description" : "exchangeRate",
          "required" : false,
          "schema" : {
            "$ref" : "./ExchangeRate.json"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "copyNativeFields",
          "in" : "query",
          "description" : "copyNativeFields",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "copyCategories",
          "in" : "query",
          "description" : "copyCategories",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/convertToTask" : {
      "summary" : "convertToTask",
      "put" : {
        "operationId" : "opTaskConvertToTask",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "task",
          "in" : "query",
          "description" : "task",
          "required" : false,
          "schema" : {
            "$ref" : "./Task.json"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "copyNativeFields",
          "in" : "query",
          "description" : "copyNativeFields",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        }, {
          "name" : "copyCategories",
          "in" : "query",
          "description" : "copyCategories",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/copyIssue" : {
      "summary" : "copyIssue",
      "put" : {
        "operationId" : "opTaskCopyIssue",
        "parameters" : [ {
          "name" : "opTaskID",
          "in" : "query",
          "description" : "opTaskID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "name",
          "in" : "query",
          "description" : "name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "description",
          "in" : "query",
          "description" : "description",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/getRequestPath" : {
      "summary" : "getRequestPath",
      "put" : {
        "operationId" : "opTaskGetRequestPath",
        "parameters" : [ {
          "name" : "queueDef",
          "in" : "query",
          "description" : "queueDef",
          "required" : false,
          "schema" : {
            "$ref" : "./QueueDef.json"
          }
        }, {
          "name" : "queueTopicID",
          "in" : "query",
          "description" : "queueTopicID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/linkExternalObject" : {
      "summary" : "linkExternalObject",
      "put" : {
        "operationId" : "opTaskLinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "URL",
          "in" : "query",
          "description" : "URL",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "params",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/markDone" : {
      "summary" : "markDone",
      "put" : {
        "operationId" : "opTaskMarkDone",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/markNotDone" : {
      "summary" : "markNotDone",
      "put" : {
        "operationId" : "opTaskMarkNotDone",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assignmentID",
          "in" : "query",
          "description" : "assignmentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/move" : {
      "summary" : "move",
      "put" : {
        "operationId" : "opTaskMove",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/moveToTask" : {
      "summary" : "moveToTask",
      "put" : {
        "operationId" : "opTaskMoveToTask",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/recallApproval" : {
      "summary" : "recallApproval",
      "put" : {
        "operationId" : "opTaskRecallApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/rejectApproval" : {
      "summary" : "rejectApproval",
      "put" : {
        "operationId" : "opTaskRejectApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "password",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditNote",
          "in" : "query",
          "description" : "auditNote",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditUserIDs",
          "in" : "query",
          "description" : "auditUserIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sendNoteAsEmail",
          "in" : "query",
          "description" : "sendNoteAsEmail",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/replyToAssignment" : {
      "summary" : "replyToAssignment",
      "put" : {
        "operationId" : "opTaskReplyToAssignment",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteText",
          "in" : "query",
          "description" : "noteText",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commitDate",
          "in" : "query",
          "description" : "commitDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/unacceptWork" : {
      "summary" : "unacceptWork",
      "put" : {
        "operationId" : "opTaskUnacceptWork",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/unassign" : {
      "summary" : "unassign",
      "put" : {
        "operationId" : "opTaskUnassign",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/unlinkExternalObject" : {
      "summary" : "unlinkExternalObject",
      "put" : {
        "operationId" : "opTaskUnlinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/optask/defaultShownTimesheetIssues" : {
      "summary" : "defaultShownTimesheetIssues",
      "get" : {
        "operationId" : "getOpTaskDefaultShownTimesheetIssues",
        "parameters" : [ {
          "name" : "timesheetID",
          "in" : "query",
          "description" : "timesheetID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./OpTask.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/{id}" : {
      "get" : {
        "summary" : "Get for Parameter",
        "operationId" : "getParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Parameter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Parameter",
        "operationId" : "editParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Parameter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Parameter",
        "operationId" : "deleteParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter" : {
      "get" : {
        "summary" : "Bulk Get for Parameter",
        "operationId" : "getParameters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Parameter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Parameter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Parameter",
        "operationId" : "editParameters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Parameter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Parameter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Parameter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Parameter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a parameter",
        "operationId" : "addParameters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Parameter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Parameter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Parameter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Parameter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Parameter",
        "operationId" : "deleteParameters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/count" : {
      "get" : {
        "summary" : "Count of parameter",
        "operationId" : "countParameters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/search" : {
      "get" : {
        "summary" : "Search of parameter",
        "operationId" : "searchParameters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Parameter.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/report" : {
      "get" : {
        "summary" : "Report of parameter",
        "operationId" : "reportParameters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Parameter",
        "operationId" : "shareParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ADD_TO_CUSTOM_FORMS", "EDIT_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/share" : {
      "put" : {
        "summary" : "Batch sharing of a Parameter",
        "operationId" : "batchShareParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ADD_TO_CUSTOM_FORMS", "EDIT_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Parameter",
        "operationId" : "unshareParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Parameter",
        "operationId" : "batchUnshareParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Parameter",
        "operationId" : "sharePublicParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ADD_TO_CUSTOM_FORMS", "EDIT_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Parameter",
        "operationId" : "batchSharePublicParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE", "ADD_TO_CUSTOM_FORMS", "EDIT_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Parameter",
        "operationId" : "unsharePublicParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameter/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Parameter",
        "operationId" : "batchUnsharePublicParameter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parametergroup/{id}" : {
      "get" : {
        "summary" : "Get for ParameterGroup",
        "operationId" : "getParameterGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ParameterGroup.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ParameterGroup",
        "operationId" : "editParameterGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ParameterGroup.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ParameterGroup",
        "operationId" : "deleteParameterGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parametergroup" : {
      "get" : {
        "summary" : "Bulk Get for ParameterGroup",
        "operationId" : "getParameterGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ParameterGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ParameterGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ParameterGroup",
        "operationId" : "editParameterGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ParameterGroup.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ParameterGroup.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ParameterGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ParameterGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a parametergroup",
        "operationId" : "addParameterGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ParameterGroup.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ParameterGroup.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ParameterGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ParameterGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ParameterGroup",
        "operationId" : "deleteParameterGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parametergroup/count" : {
      "get" : {
        "summary" : "Count of parametergroup",
        "operationId" : "countParameterGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parametergroup/search" : {
      "get" : {
        "summary" : "Search of parametergroup",
        "operationId" : "searchParameterGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ParameterGroup.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parametergroup/report" : {
      "get" : {
        "summary" : "Report of parametergroup",
        "operationId" : "reportParameterGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionlastviewer/{id}" : {
      "get" : {
        "summary" : "Get for PortalSectionLastViewer",
        "operationId" : "getPortalSectionLastViewer",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalSectionLastViewer.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionlastviewer" : {
      "get" : {
        "summary" : "Bulk Get for PortalSectionLastViewer",
        "operationId" : "getPortalSectionLastViewers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalSectionLastViewer.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalSectionLastViewer.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionlastviewer/count" : {
      "get" : {
        "summary" : "Count of portalsectionlastviewer",
        "operationId" : "countPortalSectionLastViewers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionlastviewer/search" : {
      "get" : {
        "summary" : "Search of portalsectionlastviewer",
        "operationId" : "searchPortalSectionLastViewers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./PortalSectionLastViewer.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionlastviewer/report" : {
      "get" : {
        "summary" : "Report of portalsectionlastviewer",
        "operationId" : "reportPortalSectionLastViewers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionstatisticinfo/{id}" : {
      "get" : {
        "summary" : "Get for PortalSectionStatisticInfo",
        "operationId" : "getPortalSectionStatisticInfo",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalSectionStatisticInfo.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionstatisticinfo" : {
      "get" : {
        "summary" : "Bulk Get for PortalSectionStatisticInfo",
        "operationId" : "getPortalSectionStatisticInfos",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalSectionStatisticInfo.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalSectionStatisticInfo.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionstatisticinfo/count" : {
      "get" : {
        "summary" : "Count of portalsectionstatisticinfo",
        "operationId" : "countPortalSectionStatisticInfos",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionstatisticinfo/search" : {
      "get" : {
        "summary" : "Search of portalsectionstatisticinfo",
        "operationId" : "searchPortalSectionStatisticInfos",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./PortalSectionStatisticInfo.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsectionstatisticinfo/report" : {
      "get" : {
        "summary" : "Report of portalsectionstatisticinfo",
        "operationId" : "reportPortalSectionStatisticInfos",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameteroption/{id}" : {
      "get" : {
        "summary" : "Get for ParameterOption",
        "operationId" : "getParameterOption",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ParameterOption.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ParameterOption",
        "operationId" : "editParameterOption",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ParameterOption.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ParameterOption",
        "operationId" : "deleteParameterOption",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameteroption" : {
      "get" : {
        "summary" : "Bulk Get for ParameterOption",
        "operationId" : "getParameterOptions",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ParameterOption.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ParameterOption.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ParameterOption",
        "operationId" : "editParameterOptions",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ParameterOption.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ParameterOption.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ParameterOption.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ParameterOption.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a parameteroption",
        "operationId" : "addParameterOptions",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ParameterOption.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ParameterOption.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ParameterOption.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ParameterOption.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ParameterOption",
        "operationId" : "deleteParameterOptions",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameteroption/count" : {
      "get" : {
        "summary" : "Count of parameteroption",
        "operationId" : "countParameterOptions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameteroption/search" : {
      "get" : {
        "summary" : "Search of parameteroption",
        "operationId" : "searchParameterOptions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ParameterOption.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/parameteroption/report" : {
      "get" : {
        "summary" : "Report of parameteroption",
        "operationId" : "reportParameterOptions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/{id}" : {
      "get" : {
        "summary" : "Get for Portfolio",
        "operationId" : "getPortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Portfolio.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Portfolio",
        "operationId" : "editPortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Portfolio.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Portfolio",
        "operationId" : "deletePortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio" : {
      "get" : {
        "summary" : "Bulk Get for Portfolio",
        "operationId" : "getPortfolios",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Portfolio.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Portfolio.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Portfolio",
        "operationId" : "editPortfolios",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Portfolio.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Portfolio.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Portfolio.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Portfolio.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a portfolio",
        "operationId" : "addPortfolios",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Portfolio.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Portfolio.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Portfolio.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Portfolio.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Portfolio",
        "operationId" : "deletePortfolios",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/count" : {
      "get" : {
        "summary" : "Count of portfolio",
        "operationId" : "countPortfolios",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/search" : {
      "get" : {
        "summary" : "Search of portfolio",
        "operationId" : "searchPortfolios",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Portfolio.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/report" : {
      "get" : {
        "summary" : "Report of portfolio",
        "operationId" : "reportPortfolios",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Portfolio",
        "operationId" : "sharePortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/share" : {
      "put" : {
        "summary" : "Batch sharing of a Portfolio",
        "operationId" : "batchSharePortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Portfolio",
        "operationId" : "unsharePortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Portfolio",
        "operationId" : "batchUnsharePortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Portfolio",
        "operationId" : "sharePublicPortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Portfolio",
        "operationId" : "batchSharePublicPortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Portfolio",
        "operationId" : "unsharePublicPortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Portfolio",
        "operationId" : "batchUnsharePublicPortfolio",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "portfolioCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/linkExternalObject" : {
      "summary" : "linkExternalObject",
      "put" : {
        "operationId" : "portfolioLinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "URL",
          "in" : "query",
          "description" : "URL",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "params",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portfolio/unlinkExternalObject" : {
      "summary" : "unlinkExternalObject",
      "put" : {
        "operationId" : "portfolioUnlinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofaction/{id}" : {
      "get" : {
        "summary" : "Get for ProofAction",
        "operationId" : "getProofAction",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ProofAction.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofaction" : {
      "get" : {
        "summary" : "Bulk Get for ProofAction",
        "operationId" : "getProofActions",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ProofAction.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ProofAction.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a proofaction",
        "operationId" : "addProofActions",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ProofAction.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ProofAction.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ProofAction.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ProofAction.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofaction/count" : {
      "get" : {
        "summary" : "Count of proofaction",
        "operationId" : "countProofActions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofaction/search" : {
      "get" : {
        "summary" : "Search of proofaction",
        "operationId" : "searchProofActions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ProofAction.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofaction/report" : {
      "get" : {
        "summary" : "Report of proofaction",
        "operationId" : "reportProofActions",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofapproval/{id}" : {
      "get" : {
        "summary" : "Get for ProofApproval",
        "operationId" : "getProofApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ProofApproval.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofapproval" : {
      "get" : {
        "summary" : "Bulk Get for ProofApproval",
        "operationId" : "getProofApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ProofApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ProofApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofapproval/count" : {
      "get" : {
        "summary" : "Count of proofapproval",
        "operationId" : "countProofApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofapproval/search" : {
      "get" : {
        "summary" : "Search of proofapproval",
        "operationId" : "searchProofApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ProofApproval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proofapproval/report" : {
      "get" : {
        "summary" : "Report of proofapproval",
        "operationId" : "reportProofApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/{id}" : {
      "get" : {
        "summary" : "Get for Program",
        "operationId" : "getProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Program.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Program",
        "operationId" : "editProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Program.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Program",
        "operationId" : "deleteProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program" : {
      "get" : {
        "summary" : "Bulk Get for Program",
        "operationId" : "getPrograms",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Program.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Program.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Program",
        "operationId" : "editPrograms",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Program.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Program.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Program.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Program.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a program",
        "operationId" : "addPrograms",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Program.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Program.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Program.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Program.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Program",
        "operationId" : "deletePrograms",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/count" : {
      "get" : {
        "summary" : "Count of program",
        "operationId" : "countPrograms",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/search" : {
      "get" : {
        "summary" : "Search of program",
        "operationId" : "searchPrograms",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Program.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/report" : {
      "get" : {
        "summary" : "Report of program",
        "operationId" : "reportPrograms",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Program",
        "operationId" : "shareProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/share" : {
      "put" : {
        "summary" : "Batch sharing of a Program",
        "operationId" : "batchShareProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Program",
        "operationId" : "unshareProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Program",
        "operationId" : "batchUnshareProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Program",
        "operationId" : "sharePublicProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Program",
        "operationId" : "batchSharePublicProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "ADD_DOCUMENTS", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Program",
        "operationId" : "unsharePublicProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Program",
        "operationId" : "batchUnsharePublicProgram",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "programCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/linkExternalObject" : {
      "summary" : "linkExternalObject",
      "put" : {
        "operationId" : "programLinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "URL",
          "in" : "query",
          "description" : "URL",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "params",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/move" : {
      "summary" : "move",
      "put" : {
        "operationId" : "programMove",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "portfolioID",
          "in" : "query",
          "description" : "portfolioID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/program/unlinkExternalObject" : {
      "summary" : "unlinkExternalObject",
      "put" : {
        "operationId" : "programUnlinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/{id}" : {
      "get" : {
        "summary" : "Get for Project",
        "operationId" : "getProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Project.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Project",
        "operationId" : "editProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Project.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Project",
        "operationId" : "deleteProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project" : {
      "get" : {
        "summary" : "Bulk Get for Project",
        "operationId" : "getProjects",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Project.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Project.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Project",
        "operationId" : "editProjects",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Project.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Project.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Project.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Project.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a project",
        "operationId" : "addProjects",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Project.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Project.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Project.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Project.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Project",
        "operationId" : "deleteProjects",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/count" : {
      "get" : {
        "summary" : "Count of project",
        "operationId" : "countProjects",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/search" : {
      "get" : {
        "summary" : "Search of project",
        "operationId" : "searchProjects",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Project.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/report" : {
      "get" : {
        "summary" : "Report of project",
        "operationId" : "reportProjects",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Project",
        "operationId" : "shareProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/share" : {
      "put" : {
        "summary" : "Batch sharing of a Project",
        "operationId" : "batchShareProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Project",
        "operationId" : "unshareProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Project",
        "operationId" : "batchUnshareProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Project",
        "operationId" : "sharePublicProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Project",
        "operationId" : "batchSharePublicProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Project",
        "operationId" : "unsharePublicProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Project",
        "operationId" : "batchUnsharePublicProject",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/approveApproval" : {
      "summary" : "approveApproval",
      "put" : {
        "operationId" : "projectApproveApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approvalUsername",
          "in" : "query",
          "description" : "approvalUsername",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approvalPassword",
          "in" : "query",
          "description" : "approvalPassword",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditNote",
          "in" : "query",
          "description" : "auditNote",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditUserIDs",
          "in" : "query",
          "description" : "auditUserIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sendNoteAsEmail",
          "in" : "query",
          "description" : "sendNoteAsEmail",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/attachTemplate" : {
      "summary" : "attachTemplate",
      "put" : {
        "operationId" : "projectAttachTemplate",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "templateID",
          "in" : "query",
          "description" : "templateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "predecessorTaskID",
          "in" : "query",
          "description" : "predecessorTaskID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentTaskID",
          "in" : "query",
          "description" : "parentTaskID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "excludeTemplateTaskIDs",
          "in" : "query",
          "description" : "excludeTemplateTaskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "projectCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/calculateFinance" : {
      "summary" : "calculateFinance",
      "put" : {
        "operationId" : "projectCalculateFinance",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/calculateTimeline" : {
      "summary" : "calculateTimeline",
      "put" : {
        "operationId" : "projectCalculateTimeline",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/createProjectWithOverride" : {
      "summary" : "createProjectWithOverride",
      "put" : {
        "operationId" : "projectCreateProjectWithOverride",
        "parameters" : [ {
          "name" : "project",
          "in" : "query",
          "description" : "project",
          "required" : false,
          "schema" : {
            "$ref" : "./Project.json"
          }
        }, {
          "name" : "exchangeRate",
          "in" : "query",
          "description" : "exchangeRate",
          "required" : false,
          "schema" : {
            "$ref" : "./ExchangeRate.json"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/linkExternalObject" : {
      "summary" : "linkExternalObject",
      "put" : {
        "operationId" : "projectLinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "URL",
          "in" : "query",
          "description" : "URL",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "params",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/recallApproval" : {
      "summary" : "recallApproval",
      "put" : {
        "operationId" : "projectRecallApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/rejectApproval" : {
      "summary" : "rejectApproval",
      "put" : {
        "operationId" : "projectRejectApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approvalUsername",
          "in" : "query",
          "description" : "approvalUsername",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "approvalPassword",
          "in" : "query",
          "description" : "approvalPassword",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditNote",
          "in" : "query",
          "description" : "auditNote",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditUserIDs",
          "in" : "query",
          "description" : "auditUserIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sendNoteAsEmail",
          "in" : "query",
          "description" : "sendNoteAsEmail",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/unlinkExternalObject" : {
      "summary" : "unlinkExternalObject",
      "put" : {
        "operationId" : "projectUnlinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/updateBusinessCaseSource" : {
      "summary" : "updateBusinessCaseSource",
      "put" : {
        "operationId" : "projectUpdateBusinessCaseSource",
        "parameters" : [ {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "source",
          "in" : "query",
          "description" : "source",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/defaultShownTimesheetProjects" : {
      "summary" : "defaultShownTimesheetProjects",
      "get" : {
        "operationId" : "getProjectDefaultShownTimesheetProjects",
        "parameters" : [ {
          "name" : "timesheetID",
          "in" : "query",
          "description" : "timesheetID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Project.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/helpDeskQueues" : {
      "summary" : "helpDeskQueues",
      "get" : {
        "operationId" : "getProjectHelpDeskQueues",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Project.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/project/recentHelpDeskQueues" : {
      "summary" : "recentHelpDeskQueues",
      "get" : {
        "operationId" : "getProjectRecentHelpDeskQueues",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Project.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/proof/search" : {
      "get" : {
        "summary" : "Search of proof",
        "operationId" : "searchProofs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Proof.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/{id}" : {
      "get" : {
        "summary" : "Get for PortalSection",
        "operationId" : "getPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a PortalSection",
        "operationId" : "editPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for PortalSection",
        "operationId" : "deletePortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection" : {
      "get" : {
        "summary" : "Bulk Get for PortalSection",
        "operationId" : "getPortalSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for PortalSection",
        "operationId" : "editPortalSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./PortalSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./PortalSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a portalsection",
        "operationId" : "addPortalSections",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./PortalSection.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./PortalSection.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalSection.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalSection.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for PortalSection",
        "operationId" : "deletePortalSections",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/count" : {
      "get" : {
        "summary" : "Count of portalsection",
        "operationId" : "countPortalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/search" : {
      "get" : {
        "summary" : "Search of portalsection",
        "operationId" : "searchPortalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./PortalSection.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/report" : {
      "get" : {
        "summary" : "Report of portalsection",
        "operationId" : "reportPortalSections",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a PortalSection",
        "operationId" : "sharePortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/share" : {
      "put" : {
        "summary" : "Batch sharing of a PortalSection",
        "operationId" : "batchSharePortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a PortalSection",
        "operationId" : "unsharePortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a PortalSection",
        "operationId" : "batchUnsharePortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a PortalSection",
        "operationId" : "sharePublicPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a PortalSection",
        "operationId" : "batchSharePublicPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a PortalSection",
        "operationId" : "unsharePublicPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a PortalSection",
        "operationId" : "batchUnsharePublicPortalSection",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/exportFusionChartToPDF" : {
      "summary" : "exportFusionChartToPDF",
      "put" : {
        "operationId" : "portalSectionExportFusionChartToPDF",
        "parameters" : [ {
          "name" : "pngByteArray",
          "in" : "query",
          "description" : "pngByteArray",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "format" : "byte"
            }
          }
        }, {
          "name" : "fileName",
          "in" : "query",
          "description" : "fileName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "reportName",
          "in" : "query",
          "description" : "reportName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/getPK" : {
      "summary" : "getPK",
      "put" : {
        "operationId" : "portalSectionGetPK",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/getReportFromCache" : {
      "summary" : "getReportFromCache",
      "put" : {
        "operationId" : "portalSectionGetReportFromCache",
        "parameters" : [ {
          "name" : "backgroundJobID",
          "in" : "query",
          "description" : "backgroundJobID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/isReportFilterable" : {
      "summary" : "isReportFilterable",
      "put" : {
        "operationId" : "portalSectionIsReportFilterable",
        "parameters" : [ {
          "name" : "queryClassObjCode",
          "in" : "query",
          "description" : "queryClassObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/linkCustomer" : {
      "summary" : "linkCustomer",
      "put" : {
        "operationId" : "portalSectionLinkCustomer",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/unlinkCustomer" : {
      "summary" : "unlinkCustomer",
      "put" : {
        "operationId" : "portalSectionUnlinkCustomer",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portalsection/getReportAsUser" : {
      "summary" : "getReportAsUser",
      "get" : {
        "operationId" : "getPortalSectionGetReportAsUser",
        "parameters" : [ {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "ID",
          "in" : "query",
          "description" : "ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalSection.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/{id}" : {
      "get" : {
        "summary" : "Get for PortalTab",
        "operationId" : "getPortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalTab.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a PortalTab",
        "operationId" : "editPortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./PortalTab.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for PortalTab",
        "operationId" : "deletePortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab" : {
      "get" : {
        "summary" : "Bulk Get for PortalTab",
        "operationId" : "getPortalTabs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalTab.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalTab.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for PortalTab",
        "operationId" : "editPortalTabs",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./PortalTab.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./PortalTab.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalTab.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalTab.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a portaltab",
        "operationId" : "addPortalTabs",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./PortalTab.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./PortalTab.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./PortalTab.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./PortalTab.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for PortalTab",
        "operationId" : "deletePortalTabs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/count" : {
      "get" : {
        "summary" : "Count of portaltab",
        "operationId" : "countPortalTabs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/search" : {
      "get" : {
        "summary" : "Search of portaltab",
        "operationId" : "searchPortalTabs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./PortalTab.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/report" : {
      "get" : {
        "summary" : "Report of portaltab",
        "operationId" : "reportPortalTabs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a PortalTab",
        "operationId" : "sharePortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/share" : {
      "put" : {
        "summary" : "Batch sharing of a PortalTab",
        "operationId" : "batchSharePortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a PortalTab",
        "operationId" : "unsharePortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a PortalTab",
        "operationId" : "batchUnsharePortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a PortalTab",
        "operationId" : "sharePublicPortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a PortalTab",
        "operationId" : "batchSharePublicPortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a PortalTab",
        "operationId" : "unsharePublicPortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a PortalTab",
        "operationId" : "batchUnsharePublicPortalTab",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/advancedCopy" : {
      "summary" : "advancedCopy",
      "put" : {
        "operationId" : "portalTabAdvancedCopy",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newName",
          "in" : "query",
          "description" : "newName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "advancedCopies",
          "in" : "query",
          "description" : "advancedCopies",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/portaltab/exportDashboard" : {
      "summary" : "exportDashboard",
      "put" : {
        "operationId" : "portalTabExportDashboard",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "dashboardExports",
          "in" : "query",
          "description" : "dashboardExports",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "dashboardExportOptions",
          "in" : "query",
          "description" : "dashboardExportOptions",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/{id}" : {
      "get" : {
        "summary" : "Get for QueueDef",
        "operationId" : "getQueueDef",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./QueueDef.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef" : {
      "get" : {
        "summary" : "Bulk Get for QueueDef",
        "operationId" : "getQueueDefs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueDef.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueDef.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/count" : {
      "get" : {
        "summary" : "Count of queuedef",
        "operationId" : "countQueueDefs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/search" : {
      "get" : {
        "summary" : "Search of queuedef",
        "operationId" : "searchQueueDefs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./QueueDef.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/report" : {
      "get" : {
        "summary" : "Report of queuedef",
        "operationId" : "reportQueueDefs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/getQueueDefTree" : {
      "summary" : "getQueueDefTree",
      "put" : {
        "operationId" : "queueDefGetQueueDefTree",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/searchByPath" : {
      "summary" : "searchByPath",
      "put" : {
        "operationId" : "queueDefSearchByPath",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "name",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuedef/queueTopics" : {
      "summary" : "queueTopics",
      "get" : {
        "operationId" : "getQueueDefQueueTopics",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./QueueDef.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopic/{id}" : {
      "get" : {
        "summary" : "Get for QueueTopic",
        "operationId" : "getQueueTopic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./QueueTopic.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a QueueTopic",
        "operationId" : "editQueueTopic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./QueueTopic.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for QueueTopic",
        "operationId" : "deleteQueueTopic",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopic" : {
      "get" : {
        "summary" : "Bulk Get for QueueTopic",
        "operationId" : "getQueueTopics",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueTopic.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueTopic.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for QueueTopic",
        "operationId" : "editQueueTopics",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./QueueTopic.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./QueueTopic.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueTopic.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueTopic.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a queuetopic",
        "operationId" : "addQueueTopics",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./QueueTopic.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./QueueTopic.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueTopic.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueTopic.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for QueueTopic",
        "operationId" : "deleteQueueTopics",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopic/count" : {
      "get" : {
        "summary" : "Count of queuetopic",
        "operationId" : "countQueueTopics",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopic/search" : {
      "get" : {
        "summary" : "Search of queuetopic",
        "operationId" : "searchQueueTopics",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./QueueTopic.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopic/report" : {
      "get" : {
        "summary" : "Report of queuetopic",
        "operationId" : "reportQueueTopics",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopic/queueTopicByID" : {
      "summary" : "queueTopicByID",
      "get" : {
        "operationId" : "getQueueTopicQueueTopicByID",
        "parameters" : [ {
          "name" : "queueTopicID",
          "in" : "query",
          "description" : "queueTopicID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./QueueTopic.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopicgroup/{id}" : {
      "get" : {
        "summary" : "Get for QueueTopicGroup",
        "operationId" : "getQueueTopicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./QueueTopicGroup.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a QueueTopicGroup",
        "operationId" : "editQueueTopicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./QueueTopicGroup.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for QueueTopicGroup",
        "operationId" : "deleteQueueTopicGroup",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopicgroup" : {
      "get" : {
        "summary" : "Bulk Get for QueueTopicGroup",
        "operationId" : "getQueueTopicGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueTopicGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueTopicGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for QueueTopicGroup",
        "operationId" : "editQueueTopicGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./QueueTopicGroup.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./QueueTopicGroup.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueTopicGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueTopicGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a queuetopicgroup",
        "operationId" : "addQueueTopicGroups",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./QueueTopicGroup.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./QueueTopicGroup.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./QueueTopicGroup.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./QueueTopicGroup.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for QueueTopicGroup",
        "operationId" : "deleteQueueTopicGroups",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopicgroup/count" : {
      "get" : {
        "summary" : "Count of queuetopicgroup",
        "operationId" : "countQueueTopicGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopicgroup/search" : {
      "get" : {
        "summary" : "Search of queuetopicgroup",
        "operationId" : "searchQueueTopicGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./QueueTopicGroup.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopicgroup/report" : {
      "get" : {
        "summary" : "Report of queuetopicgroup",
        "operationId" : "reportQueueTopicGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/queuetopicgroup/queueTopicGroups" : {
      "summary" : "queueTopicGroups",
      "get" : {
        "operationId" : "getQueueTopicGroupQueueTopicGroups",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./QueueTopicGroup.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/{id}" : {
      "get" : {
        "summary" : "Get for Rate",
        "operationId" : "getRate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Rate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Rate",
        "operationId" : "editRate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Rate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Rate",
        "operationId" : "deleteRate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate" : {
      "get" : {
        "summary" : "Bulk Get for Rate",
        "operationId" : "getRates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Rate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Rate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Rate",
        "operationId" : "editRates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Rate.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Rate.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Rate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Rate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a rate",
        "operationId" : "addRates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Rate.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Rate.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Rate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Rate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Rate",
        "operationId" : "deleteRates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/count" : {
      "get" : {
        "summary" : "Count of rate",
        "operationId" : "countRates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/search" : {
      "get" : {
        "summary" : "Search of rate",
        "operationId" : "searchRates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Rate.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/report" : {
      "get" : {
        "summary" : "Report of rate",
        "operationId" : "reportRates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/createRates" : {
      "summary" : "createRates",
      "put" : {
        "operationId" : "rateCreateRates",
        "parameters" : [ {
          "name" : "rates",
          "in" : "query",
          "description" : "rates",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "./Rate.json"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/deleteRateForRole" : {
      "summary" : "deleteRateForRole",
      "put" : {
        "operationId" : "rateDeleteRateForRole",
        "parameters" : [ {
          "name" : "attachableID",
          "in" : "query",
          "description" : "attachableID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachableObjCode",
          "in" : "query",
          "description" : "attachableObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rateID",
          "in" : "query",
          "description" : "rateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/editRatesForRole" : {
      "summary" : "editRatesForRole",
      "put" : {
        "operationId" : "rateEditRatesForRole",
        "parameters" : [ {
          "name" : "attachableID",
          "in" : "query",
          "description" : "attachableID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachableObjCode",
          "in" : "query",
          "description" : "attachableObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleID",
          "in" : "query",
          "description" : "roleID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rates",
          "in" : "query",
          "description" : "rates",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "currencyCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "initialClassifierID",
          "in" : "query",
          "description" : "initialClassifierID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifierID",
          "in" : "query",
          "description" : "classifierID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/getUsedClassifierIds" : {
      "summary" : "getUsedClassifierIds",
      "put" : {
        "operationId" : "rateGetUsedClassifierIds",
        "parameters" : [ {
          "name" : "rateCardID",
          "in" : "query",
          "description" : "rateCardID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleID",
          "in" : "query",
          "description" : "roleID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/setRatesForObject" : {
      "summary" : "setRatesForObject",
      "put" : {
        "operationId" : "rateSetRatesForObject",
        "parameters" : [ {
          "name" : "attachableID",
          "in" : "query",
          "description" : "attachableID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachableObjCode",
          "in" : "query",
          "description" : "attachableObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rates",
          "in" : "query",
          "description" : "rates",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rate/setRatesForRole" : {
      "summary" : "setRatesForRole",
      "put" : {
        "operationId" : "rateSetRatesForRole",
        "parameters" : [ {
          "name" : "attachableID",
          "in" : "query",
          "description" : "attachableID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "attachableObjCode",
          "in" : "query",
          "description" : "attachableObjCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "roleID",
          "in" : "query",
          "description" : "roleID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "rates",
          "in" : "query",
          "description" : "rates",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "currencyCode",
          "in" : "query",
          "description" : "currencyCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "classifierID",
          "in" : "query",
          "description" : "classifierID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/recent/{id}" : {
      "get" : {
        "summary" : "Get for Recent",
        "operationId" : "getRecent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Recent.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Recent",
        "operationId" : "deleteRecent",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/recent" : {
      "get" : {
        "summary" : "Bulk Get for Recent",
        "operationId" : "getRecents",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Recent.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Recent.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a recent",
        "operationId" : "addRecents",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Recent.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Recent.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Recent.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Recent.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Recent",
        "operationId" : "deleteRecents",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/recent/count" : {
      "get" : {
        "summary" : "Count of recent",
        "operationId" : "countRecents",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/recent/search" : {
      "get" : {
        "summary" : "Search of recent",
        "operationId" : "searchRecents",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Recent.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/recent/report" : {
      "get" : {
        "summary" : "Report of recent",
        "operationId" : "reportRecents",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/recent/updateLastViewedObject" : {
      "summary" : "updateLastViewedObject",
      "put" : {
        "operationId" : "recentUpdateLastViewedObject",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcemanager/{id}" : {
      "get" : {
        "summary" : "Get for ResourceManager",
        "operationId" : "getResourceManager",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourceManager.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ResourceManager",
        "operationId" : "deleteResourceManager",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcemanager" : {
      "get" : {
        "summary" : "Bulk Get for ResourceManager",
        "operationId" : "getResourceManagers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourceManager.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourceManager.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a resourcemanager",
        "operationId" : "addResourceManagers",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourceManager.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourceManager.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourceManager.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourceManager.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ResourceManager",
        "operationId" : "deleteResourceManagers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcemanager/count" : {
      "get" : {
        "summary" : "Count of resourcemanager",
        "operationId" : "countResourceManagers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcemanager/search" : {
      "get" : {
        "summary" : "Search of resourcemanager",
        "operationId" : "searchResourceManagers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ResourceManager.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcemanager/report" : {
      "get" : {
        "summary" : "Report of resourcemanager",
        "operationId" : "reportResourceManagers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reservedtime/{id}" : {
      "get" : {
        "summary" : "Get for ReservedTime",
        "operationId" : "getReservedTime",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ReservedTime.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ReservedTime",
        "operationId" : "editReservedTime",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ReservedTime.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ReservedTime",
        "operationId" : "deleteReservedTime",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reservedtime" : {
      "get" : {
        "summary" : "Bulk Get for ReservedTime",
        "operationId" : "getReservedTimes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ReservedTime.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ReservedTime.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ReservedTime",
        "operationId" : "editReservedTimes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ReservedTime.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ReservedTime.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ReservedTime.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ReservedTime.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a reservedtime",
        "operationId" : "addReservedTimes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ReservedTime.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ReservedTime.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ReservedTime.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ReservedTime.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ReservedTime",
        "operationId" : "deleteReservedTimes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reservedtime/count" : {
      "get" : {
        "summary" : "Count of reservedtime",
        "operationId" : "countReservedTimes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reservedtime/search" : {
      "get" : {
        "summary" : "Search of reservedtime",
        "operationId" : "searchReservedTimes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ReservedTime.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reservedtime/report" : {
      "get" : {
        "summary" : "Report of reservedtime",
        "operationId" : "reportReservedTimes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/richtextnote/{id}" : {
      "get" : {
        "summary" : "Get for RichTextNote",
        "operationId" : "getRichTextNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RichTextNote.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/richtextnote" : {
      "get" : {
        "summary" : "Bulk Get for RichTextNote",
        "operationId" : "getRichTextNotes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RichTextNote.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RichTextNote.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/richtextnote/count" : {
      "get" : {
        "summary" : "Count of richtextnote",
        "operationId" : "countRichTextNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/richtextnote/search" : {
      "get" : {
        "summary" : "Search of richtextnote",
        "operationId" : "searchRichTextNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./RichTextNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/richtextnote/report" : {
      "get" : {
        "summary" : "Report of richtextnote",
        "operationId" : "reportRichTextNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risk/{id}" : {
      "get" : {
        "summary" : "Get for Risk",
        "operationId" : "getRisk",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Risk.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Risk",
        "operationId" : "editRisk",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Risk.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Risk",
        "operationId" : "deleteRisk",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risk" : {
      "get" : {
        "summary" : "Bulk Get for Risk",
        "operationId" : "getRisks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Risk.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Risk.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Risk",
        "operationId" : "editRisks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Risk.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Risk.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Risk.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Risk.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a risk",
        "operationId" : "addRisks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Risk.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Risk.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Risk.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Risk.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Risk",
        "operationId" : "deleteRisks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risk/count" : {
      "get" : {
        "summary" : "Count of risk",
        "operationId" : "countRisks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risk/search" : {
      "get" : {
        "summary" : "Search of risk",
        "operationId" : "searchRisks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Risk.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risk/report" : {
      "get" : {
        "summary" : "Report of risk",
        "operationId" : "reportRisks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/role/{id}" : {
      "get" : {
        "summary" : "Get for Role",
        "operationId" : "getRole",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Role.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Role",
        "operationId" : "editRole",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Role.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Role",
        "operationId" : "deleteRole",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/role" : {
      "get" : {
        "summary" : "Bulk Get for Role",
        "operationId" : "getRoles",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Role.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Role.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Role",
        "operationId" : "editRoles",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Role.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Role.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Role.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Role.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a role",
        "operationId" : "addRoles",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Role.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Role.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Role.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Role.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Role",
        "operationId" : "deleteRoles",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/role/replace" : {
      "put" : {
        "summary" : "Replace of role",
        "operationId" : "replaceRoles",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/role/count" : {
      "get" : {
        "summary" : "Count of role",
        "operationId" : "countRoles",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/role/search" : {
      "get" : {
        "summary" : "Search of role",
        "operationId" : "searchRoles",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Role.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/role/report" : {
      "get" : {
        "summary" : "Report of role",
        "operationId" : "reportRoles",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reportablebudgetedhour/{id}" : {
      "get" : {
        "summary" : "Get for ReportableBudgetedHour",
        "operationId" : "getReportableBudgetedHour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ReportableBudgetedHour.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reportablebudgetedhour" : {
      "get" : {
        "summary" : "Bulk Get for ReportableBudgetedHour",
        "operationId" : "getReportableBudgetedHours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ReportableBudgetedHour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ReportableBudgetedHour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reportablebudgetedhour/count" : {
      "get" : {
        "summary" : "Count of reportablebudgetedhour",
        "operationId" : "countReportableBudgetedHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reportablebudgetedhour/search" : {
      "get" : {
        "summary" : "Search of reportablebudgetedhour",
        "operationId" : "searchReportableBudgetedHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ReportableBudgetedHour.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/reportablebudgetedhour/report" : {
      "get" : {
        "summary" : "Report of reportablebudgetedhour",
        "operationId" : "reportReportableBudgetedHours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/{id}" : {
      "get" : {
        "summary" : "Get for ResourcePlannerFilter",
        "operationId" : "getResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourcePlannerFilter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ResourcePlannerFilter",
        "operationId" : "editResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourcePlannerFilter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ResourcePlannerFilter",
        "operationId" : "deleteResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter" : {
      "get" : {
        "summary" : "Bulk Get for ResourcePlannerFilter",
        "operationId" : "getResourcePlannerFilters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourcePlannerFilter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourcePlannerFilter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ResourcePlannerFilter",
        "operationId" : "editResourcePlannerFilters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourcePlannerFilter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourcePlannerFilter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourcePlannerFilter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourcePlannerFilter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a resourceplannerfilter",
        "operationId" : "addResourcePlannerFilters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourcePlannerFilter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourcePlannerFilter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourcePlannerFilter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourcePlannerFilter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ResourcePlannerFilter",
        "operationId" : "deleteResourcePlannerFilters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/count" : {
      "get" : {
        "summary" : "Count of resourceplannerfilter",
        "operationId" : "countResourcePlannerFilters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/search" : {
      "get" : {
        "summary" : "Search of resourceplannerfilter",
        "operationId" : "searchResourcePlannerFilters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ResourcePlannerFilter.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/report" : {
      "get" : {
        "summary" : "Report of resourceplannerfilter",
        "operationId" : "reportResourcePlannerFilters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a ResourcePlannerFilter",
        "operationId" : "shareResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/share" : {
      "put" : {
        "summary" : "Batch sharing of a ResourcePlannerFilter",
        "operationId" : "batchShareResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a ResourcePlannerFilter",
        "operationId" : "unshareResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a ResourcePlannerFilter",
        "operationId" : "batchUnshareResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a ResourcePlannerFilter",
        "operationId" : "sharePublicResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a ResourcePlannerFilter",
        "operationId" : "batchSharePublicResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a ResourcePlannerFilter",
        "operationId" : "unsharePublicResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourceplannerfilter/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a ResourcePlannerFilter",
        "operationId" : "batchUnsharePublicResourcePlannerFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/routingrule/{id}" : {
      "get" : {
        "summary" : "Get for RoutingRule",
        "operationId" : "getRoutingRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RoutingRule.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a RoutingRule",
        "operationId" : "editRoutingRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RoutingRule.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for RoutingRule",
        "operationId" : "deleteRoutingRule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/routingrule" : {
      "get" : {
        "summary" : "Bulk Get for RoutingRule",
        "operationId" : "getRoutingRules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RoutingRule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RoutingRule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for RoutingRule",
        "operationId" : "editRoutingRules",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./RoutingRule.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./RoutingRule.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RoutingRule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RoutingRule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a routingrule",
        "operationId" : "addRoutingRules",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./RoutingRule.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./RoutingRule.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RoutingRule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RoutingRule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for RoutingRule",
        "operationId" : "deleteRoutingRules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/routingrule/count" : {
      "get" : {
        "summary" : "Count of routingrule",
        "operationId" : "countRoutingRules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/routingrule/search" : {
      "get" : {
        "summary" : "Search of routingrule",
        "operationId" : "searchRoutingRules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./RoutingRule.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/routingrule/report" : {
      "get" : {
        "summary" : "Report of routingrule",
        "operationId" : "reportRoutingRules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcecontour/{id}" : {
      "get" : {
        "summary" : "Get for ResourceContour",
        "operationId" : "getResourceContour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourceContour.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ResourceContour",
        "operationId" : "editResourceContour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourceContour.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ResourceContour",
        "operationId" : "deleteResourceContour",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcecontour" : {
      "get" : {
        "summary" : "Bulk Get for ResourceContour",
        "operationId" : "getResourceContours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourceContour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourceContour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ResourceContour",
        "operationId" : "editResourceContours",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourceContour.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourceContour.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourceContour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourceContour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a resourcecontour",
        "operationId" : "addResourceContours",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourceContour.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourceContour.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourceContour.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourceContour.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ResourceContour",
        "operationId" : "deleteResourceContours",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcecontour/count" : {
      "get" : {
        "summary" : "Count of resourcecontour",
        "operationId" : "countResourceContours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcecontour/search" : {
      "get" : {
        "summary" : "Search of resourcecontour",
        "operationId" : "searchResourceContours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ResourceContour.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcecontour/report" : {
      "get" : {
        "summary" : "Report of resourcecontour",
        "operationId" : "reportResourceContours",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risktype/{id}" : {
      "get" : {
        "summary" : "Get for RiskType",
        "operationId" : "getRiskType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RiskType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a RiskType",
        "operationId" : "editRiskType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RiskType.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for RiskType",
        "operationId" : "deleteRiskType",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risktype" : {
      "get" : {
        "summary" : "Bulk Get for RiskType",
        "operationId" : "getRiskTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RiskType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RiskType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for RiskType",
        "operationId" : "editRiskTypes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./RiskType.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./RiskType.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RiskType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RiskType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a risktype",
        "operationId" : "addRiskTypes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./RiskType.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./RiskType.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RiskType.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RiskType.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for RiskType",
        "operationId" : "deleteRiskTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risktype/replace" : {
      "put" : {
        "summary" : "Replace of risktype",
        "operationId" : "replaceRiskTypes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risktype/count" : {
      "get" : {
        "summary" : "Count of risktype",
        "operationId" : "countRiskTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risktype/search" : {
      "get" : {
        "summary" : "Search of risktype",
        "operationId" : "searchRiskTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./RiskType.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/risktype/report" : {
      "get" : {
        "summary" : "Report of risktype",
        "operationId" : "reportRiskTypes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rsrcpool/{id}" : {
      "get" : {
        "summary" : "Get for RsrcPool",
        "operationId" : "getRsrcPool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RsrcPool.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a RsrcPool",
        "operationId" : "editRsrcPool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./RsrcPool.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for RsrcPool",
        "operationId" : "deleteRsrcPool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rsrcpool" : {
      "get" : {
        "summary" : "Bulk Get for RsrcPool",
        "operationId" : "getRsrcPools",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RsrcPool.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RsrcPool.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for RsrcPool",
        "operationId" : "editRsrcPools",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./RsrcPool.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./RsrcPool.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RsrcPool.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RsrcPool.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a rsrcpool",
        "operationId" : "addRsrcPools",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./RsrcPool.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./RsrcPool.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./RsrcPool.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./RsrcPool.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for RsrcPool",
        "operationId" : "deleteRsrcPools",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rsrcpool/count" : {
      "get" : {
        "summary" : "Count of rsrcpool",
        "operationId" : "countRsrcPools",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rsrcpool/search" : {
      "get" : {
        "summary" : "Search of rsrcpool",
        "operationId" : "searchRsrcPools",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./RsrcPool.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/rsrcpool/report" : {
      "get" : {
        "summary" : "Report of rsrcpool",
        "operationId" : "reportRsrcPools",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcepool/{id}" : {
      "get" : {
        "summary" : "Get for ResourcePool",
        "operationId" : "getResourcePool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourcePool.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ResourcePool",
        "operationId" : "editResourcePool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ResourcePool.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ResourcePool",
        "operationId" : "deleteResourcePool",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcepool" : {
      "get" : {
        "summary" : "Bulk Get for ResourcePool",
        "operationId" : "getResourcePools",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourcePool.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourcePool.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ResourcePool",
        "operationId" : "editResourcePools",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourcePool.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourcePool.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourcePool.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourcePool.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a resourcepool",
        "operationId" : "addResourcePools",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ResourcePool.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ResourcePool.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ResourcePool.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ResourcePool.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ResourcePool",
        "operationId" : "deleteResourcePools",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcepool/count" : {
      "get" : {
        "summary" : "Count of resourcepool",
        "operationId" : "countResourcePools",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcepool/search" : {
      "get" : {
        "summary" : "Search of resourcepool",
        "operationId" : "searchResourcePools",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ResourcePool.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/resourcepool/report" : {
      "get" : {
        "summary" : "Report of resourcepool",
        "operationId" : "reportResourcePools",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/{id}" : {
      "get" : {
        "summary" : "Get for Schedule",
        "operationId" : "getSchedule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Schedule.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Schedule",
        "operationId" : "editSchedule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Schedule.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Schedule",
        "operationId" : "deleteSchedule",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule" : {
      "get" : {
        "summary" : "Bulk Get for Schedule",
        "operationId" : "getSchedules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Schedule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Schedule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Schedule",
        "operationId" : "editSchedules",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Schedule.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Schedule.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Schedule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Schedule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a schedule",
        "operationId" : "addSchedules",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Schedule.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Schedule.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Schedule.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Schedule.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Schedule",
        "operationId" : "deleteSchedules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/replace" : {
      "put" : {
        "summary" : "Replace of schedule",
        "operationId" : "replaceSchedules",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/count" : {
      "get" : {
        "summary" : "Count of schedule",
        "operationId" : "countSchedules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/search" : {
      "get" : {
        "summary" : "Search of schedule",
        "operationId" : "searchSchedules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Schedule.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/report" : {
      "get" : {
        "summary" : "Report of schedule",
        "operationId" : "reportSchedules",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/getEarliestWorkTimeOfDay" : {
      "summary" : "getEarliestWorkTimeOfDay",
      "put" : {
        "operationId" : "scheduleGetEarliestWorkTimeOfDay",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "date",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/getLatestWorkTimeOfDay" : {
      "summary" : "getLatestWorkTimeOfDay",
      "put" : {
        "operationId" : "scheduleGetLatestWorkTimeOfDay",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "date",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/getNextCompletionDate" : {
      "summary" : "getNextCompletionDate",
      "put" : {
        "operationId" : "scheduleGetNextCompletionDate",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "date",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "costInMinutes",
          "in" : "query",
          "description" : "costInMinutes",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/getNextStartDate" : {
      "summary" : "getNextStartDate",
      "put" : {
        "operationId" : "scheduleGetNextStartDate",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "date",
          "in" : "query",
          "description" : "date",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string",
                  "format" : "date-time"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/schedule/defaultSchedule" : {
      "summary" : "defaultSchedule",
      "get" : {
        "operationId" : "getScheduleDefaultSchedule",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Schedule.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scheduledreport/{id}" : {
      "get" : {
        "summary" : "Get for ScheduledReport",
        "operationId" : "getScheduledReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ScheduledReport.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ScheduledReport",
        "operationId" : "editScheduledReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ScheduledReport.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ScheduledReport",
        "operationId" : "deleteScheduledReport",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scheduledreport" : {
      "get" : {
        "summary" : "Bulk Get for ScheduledReport",
        "operationId" : "getScheduledReports",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ScheduledReport.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ScheduledReport.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ScheduledReport",
        "operationId" : "editScheduledReports",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ScheduledReport.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ScheduledReport.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ScheduledReport.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ScheduledReport.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a scheduledreport",
        "operationId" : "addScheduledReports",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ScheduledReport.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ScheduledReport.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ScheduledReport.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ScheduledReport.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ScheduledReport",
        "operationId" : "deleteScheduledReports",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scheduledreport/count" : {
      "get" : {
        "summary" : "Count of scheduledreport",
        "operationId" : "countScheduledReports",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scheduledreport/search" : {
      "get" : {
        "summary" : "Search of scheduledreport",
        "operationId" : "searchScheduledReports",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ScheduledReport.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scheduledreport/report" : {
      "get" : {
        "summary" : "Report of scheduledreport",
        "operationId" : "reportScheduledReports",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scheduledreport/sendReportDeliveryNow" : {
      "summary" : "sendReportDeliveryNow",
      "put" : {
        "operationId" : "scheduledReportSendReportDeliveryNow",
        "parameters" : [ {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "teamIDs",
          "in" : "query",
          "description" : "teamIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "groupIDs",
          "in" : "query",
          "description" : "groupIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "roleIDs",
          "in" : "query",
          "description" : "roleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "externalEmails",
          "in" : "query",
          "description" : "externalEmails",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deliveryOptions",
          "in" : "query",
          "description" : "deliveryOptions",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scorecard/{id}" : {
      "get" : {
        "summary" : "Get for ScoreCard",
        "operationId" : "getScoreCard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ScoreCard.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a ScoreCard",
        "operationId" : "editScoreCard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./ScoreCard.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for ScoreCard",
        "operationId" : "deleteScoreCard",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scorecard" : {
      "get" : {
        "summary" : "Bulk Get for ScoreCard",
        "operationId" : "getScoreCards",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ScoreCard.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ScoreCard.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for ScoreCard",
        "operationId" : "editScoreCards",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ScoreCard.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ScoreCard.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ScoreCard.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ScoreCard.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a scorecard",
        "operationId" : "addScoreCards",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./ScoreCard.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./ScoreCard.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./ScoreCard.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./ScoreCard.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for ScoreCard",
        "operationId" : "deleteScoreCards",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scorecard/count" : {
      "get" : {
        "summary" : "Count of scorecard",
        "operationId" : "countScoreCards",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scorecard/search" : {
      "get" : {
        "summary" : "Search of scorecard",
        "operationId" : "searchScoreCards",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./ScoreCard.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/scorecard/report" : {
      "get" : {
        "summary" : "Report of scorecard",
        "operationId" : "reportScoreCards",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/{id}" : {
      "get" : {
        "summary" : "Get for Subscribe",
        "operationId" : "getSubscribe",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Subscribe.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Subscribe",
        "operationId" : "deleteSubscribe",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe" : {
      "get" : {
        "summary" : "Bulk Get for Subscribe",
        "operationId" : "getSubscribes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Subscribe.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Subscribe.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a subscribe",
        "operationId" : "addSubscribes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Subscribe.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Subscribe.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Subscribe.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Subscribe.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Subscribe",
        "operationId" : "deleteSubscribes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/count" : {
      "get" : {
        "summary" : "Count of subscribe",
        "operationId" : "countSubscribes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/search" : {
      "get" : {
        "summary" : "Search of subscribe",
        "operationId" : "searchSubscribes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Subscribe.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/report" : {
      "get" : {
        "summary" : "Report of subscribe",
        "operationId" : "reportSubscribes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/addSubscribers" : {
      "summary" : "addSubscribers",
      "put" : {
        "operationId" : "subscribeAddSubscribers",
        "parameters" : [ {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/removeSubscribers" : {
      "summary" : "removeSubscribers",
      "put" : {
        "operationId" : "subscribeRemoveSubscribers",
        "parameters" : [ {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/subscribes" : {
      "summary" : "subscribes",
      "put" : {
        "operationId" : "subscribeSubscribes",
        "parameters" : [ {
          "name" : "objIDs",
          "in" : "query",
          "description" : "objIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objCodes",
          "in" : "query",
          "description" : "objCodes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/unsubscribes" : {
      "summary" : "unsubscribes",
      "put" : {
        "operationId" : "subscribeUnsubscribes",
        "parameters" : [ {
          "name" : "objIDs",
          "in" : "query",
          "description" : "objIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "objCodes",
          "in" : "query",
          "description" : "objCodes",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/subscribe/subscribers" : {
      "summary" : "subscribers",
      "get" : {
        "operationId" : "getSubscribeSubscribers",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Subscribe.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/{id}" : {
      "get" : {
        "summary" : "Get for Task",
        "operationId" : "getTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Task.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Task",
        "operationId" : "editTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Task.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Task",
        "operationId" : "deleteTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task" : {
      "get" : {
        "summary" : "Bulk Get for Task",
        "operationId" : "getTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Task.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Task.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Task",
        "operationId" : "editTasks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Task.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Task.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Task.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Task.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a task",
        "operationId" : "addTasks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Task.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Task.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Task.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Task.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Task",
        "operationId" : "deleteTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/count" : {
      "get" : {
        "summary" : "Count of task",
        "operationId" : "countTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/search" : {
      "get" : {
        "summary" : "Search of task",
        "operationId" : "searchTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Task.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/report" : {
      "get" : {
        "summary" : "Report of task",
        "operationId" : "reportTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Task",
        "operationId" : "shareTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/share" : {
      "put" : {
        "summary" : "Batch sharing of a Task",
        "operationId" : "batchShareTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Task",
        "operationId" : "unshareTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Task",
        "operationId" : "batchUnshareTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Task",
        "operationId" : "sharePublicTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Task",
        "operationId" : "batchSharePublicTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "LIMITED_EDIT", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "CHANGE_STATUS", "EDIT_CUSTOMDATA", "EDIT_APPROVALPROCESS", "ADD_TASKS", "ADD_ISSUES", "EDIT_ASSIGNMENTS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_HOURS", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE", "ADD_BOOKINGS" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Task",
        "operationId" : "unsharePublicTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Task",
        "operationId" : "batchUnsharePublicTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/acceptWork" : {
      "summary" : "acceptWork",
      "put" : {
        "operationId" : "taskAcceptWork",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/approveApproval" : {
      "summary" : "approveApproval",
      "put" : {
        "operationId" : "taskApproveApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "password",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditNote",
          "in" : "query",
          "description" : "auditNote",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditUserIDs",
          "in" : "query",
          "description" : "auditUserIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sendNoteAsEmail",
          "in" : "query",
          "description" : "sendNoteAsEmail",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/assign" : {
      "summary" : "assign",
      "put" : {
        "operationId" : "taskAssign",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/assignMultiple" : {
      "summary" : "assignMultiple",
      "put" : {
        "operationId" : "taskAssignMultiple",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "roleIDs",
          "in" : "query",
          "description" : "roleIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "teamIDs",
          "in" : "query",
          "description" : "teamIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "teamID",
          "in" : "query",
          "description" : "teamID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/bulkCopy" : {
      "summary" : "bulkCopy",
      "put" : {
        "operationId" : "taskBulkCopy",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/bulkMove" : {
      "summary" : "bulkMove",
      "put" : {
        "operationId" : "taskBulkMove",
        "parameters" : [ {
          "name" : "taskIDs",
          "in" : "query",
          "description" : "taskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "taskCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/calculateDataExtensions" : {
      "summary" : "calculateDataExtensions",
      "put" : {
        "operationId" : "taskCalculateDataExtensions",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/convertToProject" : {
      "summary" : "convertToProject",
      "put" : {
        "operationId" : "taskConvertToProject",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "project",
          "in" : "query",
          "description" : "project",
          "required" : false,
          "schema" : {
            "$ref" : "./Project.json"
          }
        }, {
          "name" : "exchangeRate",
          "in" : "query",
          "description" : "exchangeRate",
          "required" : false,
          "schema" : {
            "$ref" : "./ExchangeRate.json"
          }
        }, {
          "name" : "copyCategories",
          "in" : "query",
          "description" : "copyCategories",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/linkExternalObject" : {
      "summary" : "linkExternalObject",
      "put" : {
        "operationId" : "taskLinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "URL",
          "in" : "query",
          "description" : "URL",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "params",
          "in" : "query",
          "description" : "params",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/markDone" : {
      "summary" : "markDone",
      "put" : {
        "operationId" : "taskMarkDone",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/markNotDone" : {
      "summary" : "markNotDone",
      "put" : {
        "operationId" : "taskMarkNotDone",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "assignmentID",
          "in" : "query",
          "description" : "assignmentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/move" : {
      "summary" : "move",
      "put" : {
        "operationId" : "taskMove",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/recallApproval" : {
      "summary" : "recallApproval",
      "put" : {
        "operationId" : "taskRecallApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/rejectApproval" : {
      "summary" : "rejectApproval",
      "put" : {
        "operationId" : "taskRejectApproval",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "username",
          "in" : "query",
          "description" : "username",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "password",
          "in" : "query",
          "description" : "password",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditNote",
          "in" : "query",
          "description" : "auditNote",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "auditUserIDs",
          "in" : "query",
          "description" : "auditUserIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "sendNoteAsEmail",
          "in" : "query",
          "description" : "sendNoteAsEmail",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/replyToAssignment" : {
      "summary" : "replyToAssignment",
      "put" : {
        "operationId" : "taskReplyToAssignment",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "noteText",
          "in" : "query",
          "description" : "noteText",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commitDate",
          "in" : "query",
          "description" : "commitDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/unacceptWork" : {
      "summary" : "unacceptWork",
      "put" : {
        "operationId" : "taskUnacceptWork",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "status",
          "in" : "query",
          "description" : "status",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/unassign" : {
      "summary" : "unassign",
      "put" : {
        "operationId" : "taskUnassign",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/unassignOccurrences" : {
      "summary" : "unassignOccurrences",
      "put" : {
        "operationId" : "taskUnassignOccurrences",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/unlinkExternalObject" : {
      "summary" : "unlinkExternalObject",
      "put" : {
        "operationId" : "taskUnlinkExternalObject",
        "parameters" : [ {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "linkedObjectID",
          "in" : "query",
          "description" : "linkedObjectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "integrationType",
          "in" : "query",
          "description" : "integrationType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/allTasksOnIterations" : {
      "summary" : "allTasksOnIterations",
      "get" : {
        "operationId" : "getTaskAllTasksOnIterations",
        "parameters" : [ {
          "name" : "iterationIDs",
          "in" : "query",
          "description" : "iterationIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Task.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/task/defaultShownTimesheetTasks" : {
      "summary" : "defaultShownTimesheetTasks",
      "get" : {
        "operationId" : "getTaskDefaultShownTimesheetTasks",
        "parameters" : [ {
          "name" : "timesheetID",
          "in" : "query",
          "description" : "timesheetID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Task.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templateassignment/{id}" : {
      "get" : {
        "summary" : "Get for TemplateAssignment",
        "operationId" : "getTemplateAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./TemplateAssignment.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a TemplateAssignment",
        "operationId" : "editTemplateAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./TemplateAssignment.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for TemplateAssignment",
        "operationId" : "deleteTemplateAssignment",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templateassignment" : {
      "get" : {
        "summary" : "Bulk Get for TemplateAssignment",
        "operationId" : "getTemplateAssignments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TemplateAssignment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TemplateAssignment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for TemplateAssignment",
        "operationId" : "editTemplateAssignments",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./TemplateAssignment.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./TemplateAssignment.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TemplateAssignment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TemplateAssignment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a templateassignment",
        "operationId" : "addTemplateAssignments",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./TemplateAssignment.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./TemplateAssignment.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TemplateAssignment.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TemplateAssignment.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for TemplateAssignment",
        "operationId" : "deleteTemplateAssignments",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templateassignment/count" : {
      "get" : {
        "summary" : "Count of templateassignment",
        "operationId" : "countTemplateAssignments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templateassignment/search" : {
      "get" : {
        "summary" : "Search of templateassignment",
        "operationId" : "searchTemplateAssignments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./TemplateAssignment.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templateassignment/report" : {
      "get" : {
        "summary" : "Report of templateassignment",
        "operationId" : "reportTemplateAssignments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/team/{id}" : {
      "get" : {
        "summary" : "Get for Team",
        "operationId" : "getTeam",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Team.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Team",
        "operationId" : "editTeam",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Team.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Team",
        "operationId" : "deleteTeam",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/team" : {
      "get" : {
        "summary" : "Bulk Get for Team",
        "operationId" : "getTeams",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Team.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Team.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Team",
        "operationId" : "editTeams",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Team.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Team.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Team.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Team.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a team",
        "operationId" : "addTeams",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Team.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Team.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Team.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Team.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Team",
        "operationId" : "deleteTeams",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/team/count" : {
      "get" : {
        "summary" : "Count of team",
        "operationId" : "countTeams",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/team/search" : {
      "get" : {
        "summary" : "Search of team",
        "operationId" : "searchTeams",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Team.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/team/report" : {
      "get" : {
        "summary" : "Report of team",
        "operationId" : "reportTeams",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/{id}" : {
      "get" : {
        "summary" : "Get for Template",
        "operationId" : "getTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Template.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Template",
        "operationId" : "editTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Template.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Template",
        "operationId" : "deleteTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template" : {
      "get" : {
        "summary" : "Bulk Get for Template",
        "operationId" : "getTemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Template.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Template.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Template",
        "operationId" : "editTemplates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Template.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Template.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Template.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Template.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a template",
        "operationId" : "addTemplates",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Template.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Template.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Template.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Template.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Template",
        "operationId" : "deleteTemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/count" : {
      "get" : {
        "summary" : "Count of template",
        "operationId" : "countTemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/search" : {
      "get" : {
        "summary" : "Search of template",
        "operationId" : "searchTemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Template.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/report" : {
      "get" : {
        "summary" : "Report of template",
        "operationId" : "reportTemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a Template",
        "operationId" : "shareTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_APPROVALPROCESS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/share" : {
      "put" : {
        "summary" : "Batch sharing of a Template",
        "operationId" : "batchShareTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_APPROVALPROCESS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a Template",
        "operationId" : "unshareTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a Template",
        "operationId" : "batchUnshareTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a Template",
        "operationId" : "sharePublicTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_APPROVALPROCESS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a Template",
        "operationId" : "batchSharePublicTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "EDIT_APPROVALPROCESS", "ADD_DOCUMENTS", "EDIT_FINANCE", "VIEW_FINANCE", "ADD_EXPENSES", "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a Template",
        "operationId" : "unsharePublicTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a Template",
        "operationId" : "batchUnsharePublicTemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "templateCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/template/calculateTimeline" : {
      "summary" : "calculateTimeline",
      "put" : {
        "operationId" : "templateCalculateTimeline",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheet/{id}" : {
      "get" : {
        "summary" : "Get for Timesheet",
        "operationId" : "getTimesheet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Timesheet.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a Timesheet",
        "operationId" : "editTimesheet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Timesheet.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for Timesheet",
        "operationId" : "deleteTimesheet",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheet" : {
      "get" : {
        "summary" : "Bulk Get for Timesheet",
        "operationId" : "getTimesheets",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Timesheet.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Timesheet.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for Timesheet",
        "operationId" : "editTimesheets",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Timesheet.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Timesheet.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Timesheet.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Timesheet.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a timesheet",
        "operationId" : "addTimesheets",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./Timesheet.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./Timesheet.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Timesheet.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Timesheet.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for Timesheet",
        "operationId" : "deleteTimesheets",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheet/count" : {
      "get" : {
        "summary" : "Count of timesheet",
        "operationId" : "countTimesheets",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheet/search" : {
      "get" : {
        "summary" : "Search of timesheet",
        "operationId" : "searchTimesheets",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Timesheet.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheet/report" : {
      "get" : {
        "summary" : "Report of timesheet",
        "operationId" : "reportTimesheets",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheetprofile/{id}" : {
      "get" : {
        "summary" : "Get for TimesheetProfile",
        "operationId" : "getTimesheetProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./TimesheetProfile.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a TimesheetProfile",
        "operationId" : "editTimesheetProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./TimesheetProfile.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for TimesheetProfile",
        "operationId" : "deleteTimesheetProfile",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheetprofile" : {
      "get" : {
        "summary" : "Bulk Get for TimesheetProfile",
        "operationId" : "getTimesheetProfiles",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TimesheetProfile.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TimesheetProfile.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for TimesheetProfile",
        "operationId" : "editTimesheetProfiles",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./TimesheetProfile.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./TimesheetProfile.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TimesheetProfile.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TimesheetProfile.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a timesheetprofile",
        "operationId" : "addTimesheetProfiles",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./TimesheetProfile.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./TimesheetProfile.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TimesheetProfile.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TimesheetProfile.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for TimesheetProfile",
        "operationId" : "deleteTimesheetProfiles",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheetprofile/replace" : {
      "put" : {
        "summary" : "Replace of timesheetprofile",
        "operationId" : "replaceTimesheetProfiles",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheetprofile/count" : {
      "get" : {
        "summary" : "Count of timesheetprofile",
        "operationId" : "countTimesheetProfiles",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheetprofile/search" : {
      "get" : {
        "summary" : "Search of timesheetprofile",
        "operationId" : "searchTimesheetProfiles",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./TimesheetProfile.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/timesheetprofile/report" : {
      "get" : {
        "summary" : "Report of timesheetprofile",
        "operationId" : "reportTimesheetProfiles",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/{id}" : {
      "get" : {
        "summary" : "Get for TemplateTask",
        "operationId" : "getTemplateTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./TemplateTask.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a TemplateTask",
        "operationId" : "editTemplateTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./TemplateTask.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for TemplateTask",
        "operationId" : "deleteTemplateTask",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask" : {
      "get" : {
        "summary" : "Bulk Get for TemplateTask",
        "operationId" : "getTemplateTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TemplateTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TemplateTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for TemplateTask",
        "operationId" : "editTemplateTasks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./TemplateTask.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./TemplateTask.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TemplateTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TemplateTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a templatetask",
        "operationId" : "addTemplateTasks",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./TemplateTask.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./TemplateTask.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./TemplateTask.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./TemplateTask.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for TemplateTask",
        "operationId" : "deleteTemplateTasks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/count" : {
      "get" : {
        "summary" : "Count of templatetask",
        "operationId" : "countTemplateTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/search" : {
      "get" : {
        "summary" : "Search of templatetask",
        "operationId" : "searchTemplateTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./TemplateTask.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/report" : {
      "get" : {
        "summary" : "Report of templatetask",
        "operationId" : "reportTemplateTasks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/bulkCopy" : {
      "summary" : "bulkCopy",
      "put" : {
        "operationId" : "templateTaskBulkCopy",
        "parameters" : [ {
          "name" : "templateID",
          "in" : "query",
          "description" : "templateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "templateTaskIDs",
          "in" : "query",
          "description" : "templateTaskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "parentTemplateTaskID",
          "in" : "query",
          "description" : "parentTemplateTaskID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "string"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/bulkMove" : {
      "summary" : "bulkMove",
      "put" : {
        "operationId" : "templateTaskBulkMove",
        "parameters" : [ {
          "name" : "templateTaskIDs",
          "in" : "query",
          "description" : "templateTaskIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "templateID",
          "in" : "query",
          "description" : "templateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "templateTaskCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/templatetask/move" : {
      "summary" : "move",
      "put" : {
        "operationId" : "templateTaskMove",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "templateID",
          "in" : "query",
          "description" : "templateID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "parentID",
          "in" : "query",
          "description" : "parentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "options",
          "in" : "query",
          "description" : "options",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userhomecalendarpreference/{id}" : {
      "get" : {
        "summary" : "Get for UserHomeCalendarPreference",
        "operationId" : "getUserHomeCalendarPreference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserHomeCalendarPreference.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a UserHomeCalendarPreference",
        "operationId" : "editUserHomeCalendarPreference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserHomeCalendarPreference.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UserHomeCalendarPreference",
        "operationId" : "deleteUserHomeCalendarPreference",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userhomecalendarpreference" : {
      "get" : {
        "summary" : "Bulk Get for UserHomeCalendarPreference",
        "operationId" : "getUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserHomeCalendarPreference.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserHomeCalendarPreference.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for UserHomeCalendarPreference",
        "operationId" : "editUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserHomeCalendarPreference.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserHomeCalendarPreference.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserHomeCalendarPreference.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserHomeCalendarPreference.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a userhomecalendarpreference",
        "operationId" : "addUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserHomeCalendarPreference.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserHomeCalendarPreference.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserHomeCalendarPreference.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserHomeCalendarPreference.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UserHomeCalendarPreference",
        "operationId" : "deleteUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userhomecalendarpreference/count" : {
      "get" : {
        "summary" : "Count of userhomecalendarpreference",
        "operationId" : "countUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userhomecalendarpreference/search" : {
      "get" : {
        "summary" : "Search of userhomecalendarpreference",
        "operationId" : "searchUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserHomeCalendarPreference.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userhomecalendarpreference/report" : {
      "get" : {
        "summary" : "Report of userhomecalendarpreference",
        "operationId" : "reportUserHomeCalendarPreferences",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/{id}" : {
      "get" : {
        "summary" : "Get for UIFilter",
        "operationId" : "getUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UIFilter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a UIFilter",
        "operationId" : "editUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UIFilter.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UIFilter",
        "operationId" : "deleteUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter" : {
      "get" : {
        "summary" : "Bulk Get for UIFilter",
        "operationId" : "getUIFilters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIFilter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIFilter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for UIFilter",
        "operationId" : "editUIFilters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UIFilter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UIFilter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIFilter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIFilter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a uifilter",
        "operationId" : "addUIFilters",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UIFilter.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UIFilter.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIFilter.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIFilter.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UIFilter",
        "operationId" : "deleteUIFilters",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/count" : {
      "get" : {
        "summary" : "Count of uifilter",
        "operationId" : "countUIFilters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/search" : {
      "get" : {
        "summary" : "Search of uifilter",
        "operationId" : "searchUIFilters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UIFilter.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/report" : {
      "get" : {
        "summary" : "Report of uifilter",
        "operationId" : "reportUIFilters",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a UIFilter",
        "operationId" : "shareUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/share" : {
      "put" : {
        "summary" : "Batch sharing of a UIFilter",
        "operationId" : "batchShareUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a UIFilter",
        "operationId" : "unshareUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a UIFilter",
        "operationId" : "batchUnshareUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a UIFilter",
        "operationId" : "sharePublicUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a UIFilter",
        "operationId" : "batchSharePublicUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a UIFilter",
        "operationId" : "unsharePublicUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a UIFilter",
        "operationId" : "batchUnsharePublicUIFilter",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/addJoinForNullableFields" : {
      "summary" : "addJoinForNullableFields",
      "put" : {
        "operationId" : "uIFilterAddJoinForNullableFields",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterMap",
          "in" : "query",
          "description" : "filterMap",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/disableSystemWideVisibility" : {
      "summary" : "disableSystemWideVisibility",
      "put" : {
        "operationId" : "uIFilterDisableSystemWideVisibility",
        "parameters" : [ {
          "name" : "filterIDs",
          "in" : "query",
          "description" : "filterIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/enableSystemWideVisibility" : {
      "summary" : "enableSystemWideVisibility",
      "put" : {
        "operationId" : "uIFilterEnableSystemWideVisibility",
        "parameters" : [ {
          "name" : "filterIDs",
          "in" : "query",
          "description" : "filterIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uifilter/filtersForObjCode" : {
      "summary" : "filtersForObjCode",
      "get" : {
        "operationId" : "getUIFilterFiltersForObjCode",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "filterType",
          "in" : "query",
          "description" : "filterType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UIFilter.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/{id}" : {
      "get" : {
        "summary" : "Get for UIGroupBy",
        "operationId" : "getUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UIGroupBy.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a UIGroupBy",
        "operationId" : "editUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UIGroupBy.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UIGroupBy",
        "operationId" : "deleteUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby" : {
      "get" : {
        "summary" : "Bulk Get for UIGroupBy",
        "operationId" : "getUIGroupBys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIGroupBy.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIGroupBy.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for UIGroupBy",
        "operationId" : "editUIGroupBys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UIGroupBy.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UIGroupBy.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIGroupBy.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIGroupBy.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a uigroupby",
        "operationId" : "addUIGroupBys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UIGroupBy.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UIGroupBy.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIGroupBy.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIGroupBy.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UIGroupBy",
        "operationId" : "deleteUIGroupBys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/count" : {
      "get" : {
        "summary" : "Count of uigroupby",
        "operationId" : "countUIGroupBys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/search" : {
      "get" : {
        "summary" : "Search of uigroupby",
        "operationId" : "searchUIGroupBys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UIGroupBy.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/report" : {
      "get" : {
        "summary" : "Report of uigroupby",
        "operationId" : "reportUIGroupBys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a UIGroupBy",
        "operationId" : "shareUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/share" : {
      "put" : {
        "summary" : "Batch sharing of a UIGroupBy",
        "operationId" : "batchShareUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a UIGroupBy",
        "operationId" : "unshareUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a UIGroupBy",
        "operationId" : "batchUnshareUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a UIGroupBy",
        "operationId" : "sharePublicUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a UIGroupBy",
        "operationId" : "batchSharePublicUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a UIGroupBy",
        "operationId" : "unsharePublicUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a UIGroupBy",
        "operationId" : "batchUnsharePublicUIGroupBy",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/disableSystemWideVisibility" : {
      "summary" : "disableSystemWideVisibility",
      "put" : {
        "operationId" : "uIGroupByDisableSystemWideVisibility",
        "parameters" : [ {
          "name" : "groupByIDs",
          "in" : "query",
          "description" : "groupByIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uigroupby/enableSystemWideVisibility" : {
      "summary" : "enableSystemWideVisibility",
      "put" : {
        "operationId" : "uIGroupByEnableSystemWideVisibility",
        "parameters" : [ {
          "name" : "groupByIDs",
          "in" : "query",
          "description" : "groupByIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate/{id}" : {
      "get" : {
        "summary" : "Get for UITemplate",
        "operationId" : "getUITemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UITemplate.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UITemplate",
        "operationId" : "deleteUITemplate",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate" : {
      "get" : {
        "summary" : "Bulk Get for UITemplate",
        "operationId" : "getUITemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UITemplate.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UITemplate.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UITemplate",
        "operationId" : "deleteUITemplates",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate/count" : {
      "get" : {
        "summary" : "Count of uitemplate",
        "operationId" : "countUITemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate/search" : {
      "get" : {
        "summary" : "Search of uitemplate",
        "operationId" : "searchUITemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UITemplate.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate/report" : {
      "get" : {
        "summary" : "Report of uitemplate",
        "operationId" : "reportUITemplates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate/migrateCustomersAllLayoutTemplates" : {
      "summary" : "migrateCustomersAllLayoutTemplates",
      "put" : {
        "operationId" : "uITemplateMigrateCustomersAllLayoutTemplates",
        "parameters" : [ {
          "name" : "overrideIfExists",
          "in" : "query",
          "description" : "overrideIfExists",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uitemplate/migrateLayoutTemplates" : {
      "summary" : "migrateLayoutTemplates",
      "put" : {
        "operationId" : "uITemplateMigrateLayoutTemplates",
        "parameters" : [ {
          "name" : "layoutTemplateIDs",
          "in" : "query",
          "description" : "layoutTemplateIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "overrideIfExists",
          "in" : "query",
          "description" : "overrideIfExists",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/{id}" : {
      "get" : {
        "summary" : "Get for UIView",
        "operationId" : "getUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UIView.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a UIView",
        "operationId" : "editUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UIView.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UIView",
        "operationId" : "deleteUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview" : {
      "get" : {
        "summary" : "Bulk Get for UIView",
        "operationId" : "getUIViews",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIView.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIView.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for UIView",
        "operationId" : "editUIViews",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UIView.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UIView.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIView.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIView.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create or copy a uiview",
        "operationId" : "addUIViews",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "copySourceID",
          "in" : "query",
          "description" : "Source object ID for copy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UIView.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UIView.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UIView.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UIView.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UIView",
        "operationId" : "deleteUIViews",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/count" : {
      "get" : {
        "summary" : "Count of uiview",
        "operationId" : "countUIViews",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/search" : {
      "get" : {
        "summary" : "Search of uiview",
        "operationId" : "searchUIViews",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UIView.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/report" : {
      "get" : {
        "summary" : "Report of uiview",
        "operationId" : "reportUIViews",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/{id}/share" : {
      "put" : {
        "summary" : "Sharing of a UIView",
        "operationId" : "shareUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/share" : {
      "put" : {
        "summary" : "Batch sharing of a UIView",
        "operationId" : "batchShareUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/{id}/unshare" : {
      "put" : {
        "summary" : "Un-sharing of a UIView",
        "operationId" : "unshareUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/unshare" : {
      "put" : {
        "summary" : "Batch un-sharing of a UIView",
        "operationId" : "batchUnshareUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "accessorObjCode",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "accessorID",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/{id}/sharePublic" : {
      "put" : {
        "summary" : "Public share of a UIView",
        "operationId" : "sharePublicUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/sharePublic" : {
      "put" : {
        "summary" : "Batch public share of a UIView",
        "operationId" : "batchSharePublicUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "coreAction",
          "in" : "query",
          "required" : true,
          "schema" : {
            "type" : "string",
            "enum" : [ "VIEW", "EDIT", "DELETE" ]
          }
        }, {
          "name" : "forbiddenActions",
          "in" : "query",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "enum" : [ "SHARE", "SHARE_SYSTEMWIDE" ]
            }
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/{id}/unsharePublic" : {
      "put" : {
        "summary" : "Public un-share of a UIView",
        "operationId" : "unsharePublicUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/unsharePublic" : {
      "put" : {
        "summary" : "Batch public un-share of a UIView",
        "operationId" : "batchUnsharePublicUIView",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/disableSystemWideVisibility" : {
      "summary" : "disableSystemWideVisibility",
      "put" : {
        "operationId" : "uIViewDisableSystemWideVisibility",
        "parameters" : [ {
          "name" : "viewIDs",
          "in" : "query",
          "description" : "viewIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/enableSystemWideVisibility" : {
      "summary" : "enableSystemWideVisibility",
      "put" : {
        "operationId" : "uIViewEnableSystemWideVisibility",
        "parameters" : [ {
          "name" : "viewIDs",
          "in" : "query",
          "description" : "viewIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/uiview/viewsForObjCode" : {
      "summary" : "viewsForObjCode",
      "get" : {
        "operationId" : "getUIViewViewsForObjCode",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UIView.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/auditSessionCount" : {
      "summary" : "auditSessionCount",
      "put" : {
        "operationId" : "updateAuditSessionCount",
        "parameters" : [ {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetUserID",
          "in" : "query",
          "description" : "targetUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "startDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "endDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/recentUpdatesObjIDs" : {
      "summary" : "recentUpdatesObjIDs",
      "put" : {
        "operationId" : "updateRecentUpdatesObjIDs",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/auditSession" : {
      "summary" : "auditSession",
      "get" : {
        "operationId" : "getUpdateAuditSession",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "targetUserID",
          "in" : "query",
          "description" : "targetUserID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "startDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "endDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "pageNumber",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/endorsementUpdates" : {
      "summary" : "endorsementUpdates",
      "get" : {
        "operationId" : "getUpdateEndorsementUpdates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/objectUpdates" : {
      "summary" : "objectUpdates",
      "get" : {
        "operationId" : "getUpdateObjectUpdates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sinceDate",
          "in" : "query",
          "description" : "sinceDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/objectUpdatesByCommentID" : {
      "summary" : "objectUpdatesByCommentID",
      "get" : {
        "operationId" : "getUpdateObjectUpdatesByCommentID",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "commentID",
          "in" : "query",
          "description" : "commentID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/objectUpdatesMobile" : {
      "summary" : "objectUpdatesMobile",
      "get" : {
        "operationId" : "getUpdateObjectUpdatesMobile",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sinceDate",
          "in" : "query",
          "description" : "sinceDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/objectUpdatesWithNoteAndJournalEntryIndex" : {
      "summary" : "objectUpdatesWithNoteAndJournalEntryIndex",
      "get" : {
        "operationId" : "getUpdateObjectUpdatesWithNoteAndJournalEntryIndex",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objID",
          "in" : "query",
          "description" : "objID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sinceDate",
          "in" : "query",
          "description" : "sinceDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "firstNote",
          "in" : "query",
          "description" : "firstNote",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "firstJournalEntry",
          "in" : "query",
          "description" : "firstJournalEntry",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/recentUpdates" : {
      "summary" : "recentUpdates",
      "get" : {
        "operationId" : "getUpdateRecentUpdates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "sinceDate",
          "in" : "query",
          "description" : "sinceDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/updateThread" : {
      "summary" : "updateThread",
      "get" : {
        "operationId" : "getUpdateUpdateThread",
        "parameters" : [ {
          "name" : "noteID",
          "in" : "query",
          "description" : "noteID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/updateThreadMobile" : {
      "summary" : "updateThreadMobile",
      "get" : {
        "operationId" : "getUpdateUpdateThreadMobile",
        "parameters" : [ {
          "name" : "noteID",
          "in" : "query",
          "description" : "noteID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/update/updates" : {
      "summary" : "updates",
      "get" : {
        "operationId" : "getUpdateUpdates",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "streamType",
          "in" : "query",
          "description" : "streamType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Update.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/{id}" : {
      "get" : {
        "summary" : "Get for User",
        "operationId" : "getUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./User.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a User",
        "operationId" : "editUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./User.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for User",
        "operationId" : "deleteUser",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user" : {
      "get" : {
        "summary" : "Bulk Get for User",
        "operationId" : "getUsers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./User.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./User.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for User",
        "operationId" : "editUsers",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./User.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./User.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./User.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./User.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a user",
        "operationId" : "addUsers",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./User.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./User.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./User.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./User.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for User",
        "operationId" : "deleteUsers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/replace" : {
      "put" : {
        "summary" : "Replace of user",
        "operationId" : "replaceUsers",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs to be replaced",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "replacementID",
          "in" : "query",
          "description" : "Object ID to replace with",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/count" : {
      "get" : {
        "summary" : "Count of user",
        "operationId" : "countUsers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/search" : {
      "get" : {
        "summary" : "Search of user",
        "operationId" : "searchUsers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./User.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/report" : {
      "get" : {
        "summary" : "Report of user",
        "operationId" : "reportUsers",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/addMobileDevice" : {
      "summary" : "addMobileDevice",
      "put" : {
        "operationId" : "userAddMobileDevice",
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "description" : "token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "deviceType",
          "in" : "query",
          "description" : "deviceType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/assignUserToken" : {
      "summary" : "assignUserToken",
      "put" : {
        "operationId" : "userAssignUserToken",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/calculateDataExtension" : {
      "summary" : "calculateDataExtension",
      "put" : {
        "operationId" : "userCalculateDataExtension",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/clearAllApiKeys" : {
      "summary" : "clearAllApiKeys",
      "put" : {
        "operationId" : "userClearAllApiKeys",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/clearApiKey" : {
      "summary" : "clearApiKey",
      "put" : {
        "operationId" : "userClearApiKey",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/completeUserRegistration" : {
      "summary" : "completeUserRegistration",
      "put" : {
        "operationId" : "userCompleteUserRegistration",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "firstName",
          "in" : "query",
          "description" : "firstName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "lastName",
          "in" : "query",
          "description" : "lastName",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "token",
          "in" : "query",
          "description" : "token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "title",
          "in" : "query",
          "description" : "title",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "newPassword",
          "in" : "query",
          "description" : "newPassword",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/generateApiKey" : {
      "summary" : "generateApiKey",
      "put" : {
        "operationId" : "userGenerateApiKey",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/getApiKey" : {
      "summary" : "getApiKey",
      "put" : {
        "operationId" : "userGetApiKey",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/getAvailableActions" : {
      "summary" : "getAvailableActions",
      "put" : {
        "operationId" : "userGetAvailableActions",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/getUserAccessPermissionsByObjCode" : {
      "summary" : "getUserAccessPermissionsByObjCode",
      "put" : {
        "operationId" : "userGetUserAccessPermissionsByObjCode",
        "parameters" : [ {
          "name" : "ids",
          "in" : "query",
          "description" : "ids",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/getUserCustomLabels" : {
      "summary" : "getUserCustomLabels",
      "put" : {
        "operationId" : "userGetUserCustomLabels",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/getUsersAvailableTime" : {
      "summary" : "getUsersAvailableTime",
      "put" : {
        "operationId" : "userGetUsersAvailableTime",
        "parameters" : [ {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        }, {
          "name" : "fromDate",
          "in" : "query",
          "description" : "fromDate",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "toDate",
          "in" : "query",
          "description" : "toDate",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/hasAnyAccess" : {
      "summary" : "hasAnyAccess",
      "put" : {
        "operationId" : "userHasAnyAccess",
        "parameters" : [ {
          "name" : "objCode",
          "in" : "query",
          "description" : "objCode",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "actionType",
          "in" : "query",
          "description" : "actionType",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/hasGrantLoginAsAccess" : {
      "summary" : "hasGrantLoginAsAccess",
      "put" : {
        "operationId" : "userHasGrantLoginAsAccess",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/isUserAdmin" : {
      "summary" : "isUserAdmin",
      "put" : {
        "operationId" : "userIsUserAdmin",
        "parameters" : [ {
          "name" : "userID",
          "in" : "query",
          "description" : "userID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "adminID",
          "in" : "query",
          "description" : "adminID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/isUserTerminologyActive" : {
      "summary" : "isUserTerminologyActive",
      "put" : {
        "operationId" : "userIsUserTerminologyActive",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/removeMobileDevice" : {
      "summary" : "removeMobileDevice",
      "put" : {
        "operationId" : "userRemoveMobileDevice",
        "parameters" : [ {
          "name" : "token",
          "in" : "query",
          "description" : "token",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/resetRopgPassword" : {
      "summary" : "resetRopgPassword",
      "put" : {
        "operationId" : "userResetRopgPassword",
        "parameters" : [ {
          "name" : "newPassword",
          "in" : "query",
          "description" : "newPassword",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/sendInvitationEmail" : {
      "summary" : "sendInvitationEmail",
      "put" : {
        "operationId" : "userSendInvitationEmail",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/shouldShowProofHQNavButton" : {
      "summary" : "shouldShowProofHQNavButton",
      "put" : {
        "operationId" : "userShouldShowProofHQNavButton",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "boolean"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/user/userAdmins" : {
      "summary" : "userAdmins",
      "get" : {
        "operationId" : "getUserUserAdmins",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./User.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userprefvalue/{id}" : {
      "get" : {
        "summary" : "Get for UserPrefValue",
        "operationId" : "getUserPrefValue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserPrefValue.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UserPrefValue",
        "operationId" : "deleteUserPrefValue",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userprefvalue" : {
      "get" : {
        "summary" : "Bulk Get for UserPrefValue",
        "operationId" : "getUserPrefValues",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserPrefValue.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserPrefValue.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a userprefvalue",
        "operationId" : "addUserPrefValues",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserPrefValue.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserPrefValue.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserPrefValue.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserPrefValue.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UserPrefValue",
        "operationId" : "deleteUserPrefValues",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userprefvalue/search" : {
      "get" : {
        "summary" : "Search of userprefvalue",
        "operationId" : "searchUserPrefValues",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserPrefValue.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userobjectpref/{id}" : {
      "get" : {
        "summary" : "Get for UserObjectPref",
        "operationId" : "getUserObjectPref",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserObjectPref.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UserObjectPref",
        "operationId" : "deleteUserObjectPref",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userobjectpref" : {
      "get" : {
        "summary" : "Bulk Get for UserObjectPref",
        "operationId" : "getUserObjectPrefs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserObjectPref.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserObjectPref.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UserObjectPref",
        "operationId" : "deleteUserObjectPrefs",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userobjectpref/count" : {
      "get" : {
        "summary" : "Count of userobjectpref",
        "operationId" : "countUserObjectPrefs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userobjectpref/search" : {
      "get" : {
        "summary" : "Search of userobjectpref",
        "operationId" : "searchUserObjectPrefs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserObjectPref.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userobjectpref/report" : {
      "get" : {
        "summary" : "Report of userobjectpref",
        "operationId" : "reportUserObjectPrefs",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval/{id}" : {
      "get" : {
        "summary" : "Get for UserApproval",
        "operationId" : "getUserApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserApproval.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UserApproval",
        "operationId" : "deleteUserApproval",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval" : {
      "get" : {
        "summary" : "Bulk Get for UserApproval",
        "operationId" : "getUserApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a userapproval",
        "operationId" : "addUserApprovals",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserApproval.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserApproval.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserApproval.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserApproval.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UserApproval",
        "operationId" : "deleteUserApprovals",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval/count" : {
      "get" : {
        "summary" : "Count of userapproval",
        "operationId" : "countUserApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval/search" : {
      "get" : {
        "summary" : "Search of userapproval",
        "operationId" : "searchUserApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserApproval.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval/report" : {
      "get" : {
        "summary" : "Report of userapproval",
        "operationId" : "reportUserApprovals",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval/approve" : {
      "summary" : "approve",
      "put" : {
        "operationId" : "userApprovalApprove",
        "parameters" : [ {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userapproval/reject" : {
      "summary" : "reject",
      "put" : {
        "operationId" : "userApprovalReject",
        "parameters" : [ {
          "name" : "userIDs",
          "in" : "query",
          "description" : "userIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/useravailability/{id}" : {
      "get" : {
        "summary" : "Get for UserAvailability",
        "operationId" : "getUserAvailability",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserAvailability.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UserAvailability",
        "operationId" : "deleteUserAvailability",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/useravailability" : {
      "get" : {
        "summary" : "Bulk Get for UserAvailability",
        "operationId" : "getUserAvailabilitys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserAvailability.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserAvailability.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a useravailability",
        "operationId" : "addUserAvailabilitys",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserAvailability.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserAvailability.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserAvailability.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserAvailability.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UserAvailability",
        "operationId" : "deleteUserAvailabilitys",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/useravailability/count" : {
      "get" : {
        "summary" : "Count of useravailability",
        "operationId" : "countUserAvailabilitys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/useravailability/search" : {
      "get" : {
        "summary" : "Search of useravailability",
        "operationId" : "searchUserAvailabilitys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserAvailability.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/useravailability/report" : {
      "get" : {
        "summary" : "Report of useravailability",
        "operationId" : "reportUserAvailabilitys",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userdelegation/{id}" : {
      "get" : {
        "summary" : "Get for UserDelegation",
        "operationId" : "getUserDelegation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserDelegation.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a UserDelegation",
        "operationId" : "editUserDelegation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserDelegation.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for UserDelegation",
        "operationId" : "deleteUserDelegation",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userdelegation" : {
      "get" : {
        "summary" : "Bulk Get for UserDelegation",
        "operationId" : "getUserDelegations",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserDelegation.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserDelegation.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for UserDelegation",
        "operationId" : "editUserDelegations",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserDelegation.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserDelegation.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserDelegation.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserDelegation.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a userdelegation",
        "operationId" : "addUserDelegations",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserDelegation.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserDelegation.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserDelegation.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserDelegation.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for UserDelegation",
        "operationId" : "deleteUserDelegations",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userdelegation/count" : {
      "get" : {
        "summary" : "Count of userdelegation",
        "operationId" : "countUserDelegations",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userdelegation/search" : {
      "get" : {
        "summary" : "Search of userdelegation",
        "operationId" : "searchUserDelegations",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserDelegation.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/userdelegation/report" : {
      "get" : {
        "summary" : "Report of userdelegation",
        "operationId" : "reportUserDelegations",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/{id}" : {
      "get" : {
        "summary" : "Get for UserNote",
        "operationId" : "getUserNote",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserNote.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote" : {
      "get" : {
        "summary" : "Bulk Get for UserNote",
        "operationId" : "getUserNotes",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserNote.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserNote.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "post" : {
        "summary" : "Create a usernote",
        "operationId" : "addUserNotes",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./UserNote.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./UserNote.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./UserNote.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./UserNote.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/count" : {
      "get" : {
        "summary" : "Count of usernote",
        "operationId" : "countUserNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/search" : {
      "get" : {
        "summary" : "Search of usernote",
        "operationId" : "searchUserNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/report" : {
      "get" : {
        "summary" : "Report of usernote",
        "operationId" : "reportUserNotes",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/acknowledge" : {
      "summary" : "acknowledge",
      "put" : {
        "operationId" : "userNoteAcknowledge",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "string"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/acknowledgeAll" : {
      "summary" : "acknowledgeAll",
      "put" : {
        "operationId" : "userNoteAcknowledgeAll",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/acknowledgeMany" : {
      "summary" : "acknowledgeMany",
      "put" : {
        "operationId" : "userNoteAcknowledgeMany",
        "parameters" : [ {
          "name" : "objIDs",
          "in" : "query",
          "description" : "objIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/acknowledgeMyNotifications" : {
      "summary" : "acknowledgeMyNotifications",
      "put" : {
        "operationId" : "userNoteAcknowledgeMyNotifications",
        "parameters" : [ {
          "name" : "objIDs",
          "in" : "query",
          "description" : "objIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "array",
                  "items" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/unacknowledge" : {
      "summary" : "unacknowledge",
      "put" : {
        "operationId" : "userNoteUnacknowledge",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/unacknowledgeMany" : {
      "summary" : "unacknowledgeMany",
      "put" : {
        "operationId" : "userNoteUnacknowledgeMany",
        "parameters" : [ {
          "name" : "objIDs",
          "in" : "query",
          "description" : "objIDs",
          "required" : false,
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/unacknowledgedAllObjectTypesCount" : {
      "summary" : "unacknowledgedAllObjectTypesCount",
      "put" : {
        "operationId" : "userNoteUnacknowledgedAllObjectTypesCount",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/unacknowledgedAnnouncementCount" : {
      "summary" : "unacknowledgedAnnouncementCount",
      "put" : {
        "operationId" : "userNoteUnacknowledgedAnnouncementCount",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/unacknowledgedCount" : {
      "summary" : "unacknowledgedCount",
      "put" : {
        "operationId" : "userNoteUnacknowledgedCount",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/announcementNotifications" : {
      "summary" : "announcementNotifications",
      "get" : {
        "operationId" : "getUserNoteAnnouncementNotifications",
        "parameters" : [ {
          "name" : "pageNumber",
          "in" : "query",
          "description" : "pageNumber",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/deletedAnnouncementNotes" : {
      "summary" : "deletedAnnouncementNotes",
      "get" : {
        "operationId" : "getUserNoteDeletedAnnouncementNotes",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myAllObjectTypesUnreadNotifications" : {
      "summary" : "myAllObjectTypesUnreadNotifications",
      "get" : {
        "operationId" : "getUserNoteMyAllObjectTypesUnreadNotifications",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "first",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        }, {
          "name" : "includeAll",
          "in" : "query",
          "description" : "includeAll",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myNewestAnnouncementNotification" : {
      "summary" : "myNewestAnnouncementNotification",
      "get" : {
        "operationId" : "getUserNoteMyNewestAnnouncementNotification",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserNote.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myNewestNotification" : {
      "summary" : "myNewestNotification",
      "get" : {
        "operationId" : "getUserNoteMyNewestNotification",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./UserNote.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myNotifications" : {
      "summary" : "myNotifications",
      "get" : {
        "operationId" : "getUserNoteMyNotifications",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myNotificationsQuickList" : {
      "summary" : "myNotificationsQuickList",
      "get" : {
        "operationId" : "getUserNoteMyNotificationsQuickList",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myUnreadAnnouncementNotifications" : {
      "summary" : "myUnreadAnnouncementNotifications",
      "get" : {
        "operationId" : "getUserNoteMyUnreadAnnouncementNotifications",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/usernote/myUnreadNotifications" : {
      "summary" : "myUnreadNotifications",
      "get" : {
        "operationId" : "getUserNoteMyUnreadNotifications",
        "parameters" : [ {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "integer",
            "format" : "int32"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./UserNote.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/{id}" : {
      "get" : {
        "summary" : "Get for Work",
        "operationId" : "getWork",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./Work.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work" : {
      "get" : {
        "summary" : "Bulk Get for Work",
        "operationId" : "getWorks",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./Work.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./Work.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/count" : {
      "get" : {
        "summary" : "Count of work",
        "operationId" : "countWorks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/search" : {
      "get" : {
        "summary" : "Search of work",
        "operationId" : "searchWorks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/report" : {
      "get" : {
        "summary" : "Report of work",
        "operationId" : "reportWorks",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getMyAccomplishmentsCount" : {
      "summary" : "getMyAccomplishmentsCount",
      "put" : {
        "operationId" : "workGetMyAccomplishmentsCount",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getMyWorkCount" : {
      "summary" : "getMyWorkCount",
      "put" : {
        "operationId" : "workGetMyWorkCount",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getMyWorkCountFiltered" : {
      "summary" : "getMyWorkCountFiltered",
      "put" : {
        "operationId" : "workGetMyWorkCountFiltered",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "filters",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getWFHomeObjects" : {
      "summary" : "getWFHomeObjects",
      "put" : {
        "operationId" : "workGetWFHomeObjects",
        "parameters" : [ {
          "name" : "show",
          "in" : "query",
          "description" : "show",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "view",
          "in" : "query",
          "description" : "view",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "first",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "startDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "endDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "actionGroup",
          "in" : "query",
          "description" : "actionGroup",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getWFHomeObjectsFilterSortBy" : {
      "summary" : "getWFHomeObjectsFilterSortBy",
      "put" : {
        "operationId" : "workGetWFHomeObjectsFilterSortBy",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "sortBy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "first",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isAscending",
          "in" : "query",
          "description" : "isAscending",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeUndated",
          "in" : "query",
          "description" : "includeUndated",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "startDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "endDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getWFHomeObjectsListWithoutDate" : {
      "summary" : "getWFHomeObjectsListWithoutDate",
      "put" : {
        "operationId" : "workGetWFHomeObjectsListWithoutDate",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "sortBy",
          "in" : "query",
          "description" : "sortBy",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "first",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isAscending",
          "in" : "query",
          "description" : "isAscending",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getWFHomeObjectsProjectItemList" : {
      "summary" : "getWFHomeObjectsProjectItemList",
      "put" : {
        "operationId" : "workGetWFHomeObjectsProjectItemList",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "projectID",
          "in" : "query",
          "description" : "projectID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "first",
          "in" : "query",
          "description" : "first",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "limit",
          "in" : "query",
          "description" : "limit",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isAscending",
          "in" : "query",
          "description" : "isAscending",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeUndated",
          "in" : "query",
          "description" : "includeUndated",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "startDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "endDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getWFHomeObjectsProjectList" : {
      "summary" : "getWFHomeObjectsProjectList",
      "put" : {
        "operationId" : "workGetWFHomeObjectsProjectList",
        "parameters" : [ {
          "name" : "filter",
          "in" : "query",
          "description" : "filter",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "isAscending",
          "in" : "query",
          "description" : "isAscending",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "includeUndated",
          "in" : "query",
          "description" : "includeUndated",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "search",
          "in" : "query",
          "description" : "search",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "startDate",
          "in" : "query",
          "description" : "startDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        }, {
          "name" : "endDate",
          "in" : "query",
          "description" : "endDate",
          "required" : false,
          "schema" : {
            "type" : "string",
            "format" : "date-time"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/getWorkRequestsCount" : {
      "summary" : "getWorkRequestsCount",
      "put" : {
        "operationId" : "workGetWorkRequestsCount",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "filters",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/teamRequestCount" : {
      "summary" : "teamRequestCount",
      "put" : {
        "operationId" : "workTeamRequestCount",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "filters",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "integer",
                  "format" : "int32"
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/teamRequestsCount" : {
      "summary" : "teamRequestsCount",
      "put" : {
        "operationId" : "workTeamRequestsCount",
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/workItemStatusLabels" : {
      "summary" : "workItemStatusLabels",
      "put" : {
        "operationId" : "workWorkItemStatusLabels",
        "parameters" : [ {
          "name" : "items",
          "in" : "query",
          "description" : "items",
          "required" : false,
          "schema" : {
            "type" : "object",
            "additionalProperties" : {
              "type" : "string"
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "additionalProperties" : {
                    "type" : "object"
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/myAccomplishments" : {
      "summary" : "myAccomplishments",
      "get" : {
        "operationId" : "getWorkMyAccomplishments",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/myAwaitingFeedbackRequests" : {
      "summary" : "myAwaitingFeedbackRequests",
      "get" : {
        "operationId" : "getWorkMyAwaitingFeedbackRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/myCompletedRequests" : {
      "summary" : "myCompletedRequests",
      "get" : {
        "operationId" : "getWorkMyCompletedRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/myOpenRequests" : {
      "summary" : "myOpenRequests",
      "get" : {
        "operationId" : "getWorkMyOpenRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/myWork" : {
      "summary" : "myWork",
      "get" : {
        "operationId" : "getWorkMyWork",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/teamRequests" : {
      "summary" : "teamRequests",
      "get" : {
        "operationId" : "getWorkTeamRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/work/workRequests" : {
      "summary" : "workRequests",
      "get" : {
        "operationId" : "getWorkWorkRequests",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./Work.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/workitem/{id}" : {
      "get" : {
        "summary" : "Get for WorkItem",
        "operationId" : "getWorkItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./WorkItem.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Edit a WorkItem",
        "operationId" : "editWorkItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "$ref" : "./WorkItem.json"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Delete for WorkItem",
        "operationId" : "deleteWorkItem",
        "parameters" : [ {
          "name" : "id",
          "in" : "path",
          "description" : "Object ID",
          "required" : true,
          "schema" : {
            "type" : "string"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/workitem" : {
      "get" : {
        "summary" : "Bulk Get for WorkItem",
        "operationId" : "getWorkItems",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./WorkItem.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./WorkItem.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "put" : {
        "summary" : "Bulk Edit for WorkItem",
        "operationId" : "editWorkItems",
        "parameters" : [ {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        } ],
        "requestBody" : {
          "content" : {
            "application/json" : {
              "schema" : {
                "anyOf" : [ {
                  "$ref" : "./WorkItem.json"
                }, {
                  "type" : "array",
                  "items" : {
                    "$ref" : "./WorkItem.json"
                  }
                } ]
              }
            }
          }
        },
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "anyOf" : [ {
                        "$ref" : "./WorkItem.json"
                      }, {
                        "type" : "array",
                        "items" : {
                          "$ref" : "./WorkItem.json"
                        }
                      } ]
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      },
      "delete" : {
        "summary" : "Bulk Delete for WorkItem",
        "operationId" : "deleteWorkItems",
        "parameters" : [ {
          "name" : "id",
          "in" : "query",
          "description" : "Object IDs",
          "required" : true,
          "schema" : {
            "type" : "string",
            "example" : "id1,id2,id3"
          }
        }, {
          "name" : "force",
          "in" : "query",
          "description" : "force delete flag",
          "required" : false,
          "schema" : {
            "type" : "boolean"
          }
        } ],
        "responses" : {
          "200" : {
            "$ref" : "#/components/responses/200_OK"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/workitem/count" : {
      "get" : {
        "summary" : "Count of workitem",
        "operationId" : "countWorkItems",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object",
                      "properties" : {
                        "count" : {
                          "type" : "integer",
                          "format" : "int32"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/workitem/search" : {
      "get" : {
        "summary" : "Search of workitem",
        "operationId" : "searchWorkItems",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "fields",
          "in" : "query",
          "description" : "JSON array defining the fields to retrieve",
          "required" : false,
          "example" : "[\"ID\", \"name\"]",
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "array",
                      "items" : {
                        "$ref" : "./WorkItem.json"
                      }
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/workitem/report" : {
      "get" : {
        "summary" : "Report of workitem",
        "operationId" : "reportWorkItems",
        "parameters" : [ {
          "name" : "filters",
          "in" : "query",
          "description" : "JSON representing the filtering conditions",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "type" : "object"
              }
            }
          }
        }, {
          "name" : "listOptions",
          "in" : "query",
          "description" : "JSON object defining the list options",
          "required" : false,
          "content" : {
            "application/json" : {
              "schema" : {
                "$ref" : "./ListOptions.json"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success",
            "content" : {
              "application/json" : {
                "schema" : {
                  "type" : "object",
                  "properties" : {
                    "data" : {
                      "type" : "object"
                    }
                  }
                }
              }
            }
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    },
    "/workitem/markViewed" : {
      "summary" : "markViewed",
      "put" : {
        "operationId" : "workItemMarkViewed",
        "parameters" : [ {
          "name" : "ID",
          "in" : "query",
          "description" : "Object ID",
          "required" : false,
          "schema" : {
            "type" : "string"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Great Success"
          },
          "422" : {
            "$ref" : "#/components/responses/422_UNPROCESSABLE_ENTITY"
          },
          "400" : {
            "$ref" : "#/components/responses/400_BAD_REQUEST"
          },
          "429" : {
            "$ref" : "#/components/responses/429_TOO_MANY_REQUESTS"
          },
          "403" : {
            "$ref" : "#/components/responses/403_FORBIDDEN"
          },
          "401" : {
            "$ref" : "#/components/responses/401_UNAUTHORIZED"
          },
          "404" : {
            "$ref" : "#/components/responses/404_NOT_FOUND"
          },
          "500" : {
            "$ref" : "#/components/responses/500_INTERNAL_SERVER_ERROR"
          },
          "410" : {
            "$ref" : "#/components/responses/410_GONE"
          }
        }
      }
    }
  },
  "components" : {
    "schemas" : {
      "ListOptions" : {
        "$ref" : "./ListOptions.json"
      },
      "Acknowledgement" : {
        "$ref" : "./Acknowledgement.json"
      },
      "AccessLevel" : {
        "$ref" : "./AccessLevel.json"
      },
      "AccessRequest" : {
        "$ref" : "./AccessRequest.json"
      },
      "AccessRule" : {
        "$ref" : "./AccessRule.json"
      },
      "ActivityLog" : {
        "$ref" : "./ActivityLog.json"
      },
      "AgileWork" : {
        "$ref" : "./AgileWork.json"
      },
      "AccessLevelPermissions" : {
        "$ref" : "./AccessLevelPermissions.json"
      },
      "Announcement" : {
        "$ref" : "./Announcement.json"
      },
      "AnnouncementRecipient" : {
        "$ref" : "./AnnouncementRecipient.json"
      },
      "AnnouncementAttachment" : {
        "$ref" : "./AnnouncementAttachment.json"
      },
      "APIVersionMetadata" : {
        "$ref" : "./APIVersionMetadata.json"
      },
      "Approval" : {
        "$ref" : "./Approval.json"
      },
      "AccessRulePreference" : {
        "$ref" : "./AccessRulePreference.json"
      },
      "ApprovalProcess" : {
        "$ref" : "./ApprovalProcess.json"
      },
      "ApprovalPath" : {
        "$ref" : "./ApprovalPath.json"
      },
      "ApprovalStep" : {
        "$ref" : "./ApprovalStep.json"
      },
      "ApproverStatus" : {
        "$ref" : "./ApproverStatus.json"
      },
      "Assignment" : {
        "$ref" : "./Assignment.json"
      },
      "AuditLoginAsSession" : {
        "$ref" : "./AuditLoginAsSession.json"
      },
      "ExternalAuthToken" : {
        "$ref" : "./ExternalAuthToken.json"
      },
      "Avatar" : {
        "$ref" : "./Avatar.json"
      },
      "AwaitingApproval" : {
        "$ref" : "./AwaitingApproval.json"
      },
      "BurndownEvent" : {
        "$ref" : "./BurndownEvent.json"
      },
      "BudgetedHour" : {
        "$ref" : "./BudgetedHour.json"
      },
      "BillingRecord" : {
        "$ref" : "./BillingRecord.json"
      },
      "BackgroundJob" : {
        "$ref" : "./BackgroundJob.json"
      },
      "Baseline" : {
        "$ref" : "./Baseline.json"
      },
      "BaselineTask" : {
        "$ref" : "./BaselineTask.json"
      },
      "CalendarEntry" : {
        "$ref" : "./CalendarEntry.json"
      },
      "CalendarPortalSection" : {
        "$ref" : "./CalendarPortalSection.json"
      },
      "CalendarSection" : {
        "$ref" : "./CalendarSection.json"
      },
      "CategoryAccessRule" : {
        "$ref" : "./CategoryAccessRule.json"
      },
      "CalendarEntryExternalReference" : {
        "$ref" : "./CalendarEntryExternalReference.json"
      },
      "Classifier" : {
        "$ref" : "./Classifier.json"
      },
      "Company" : {
        "$ref" : "./Company.json"
      },
      "CustomEnum" : {
        "$ref" : "./CustomEnum.json"
      },
      "CustomQuarter" : {
        "$ref" : "./CustomQuarter.json"
      },
      "CategoryCascadeRule" : {
        "$ref" : "./CategoryCascadeRule.json"
      },
      "CategoryCascadeRuleMatch" : {
        "$ref" : "./CategoryCascadeRuleMatch.json"
      },
      "CategoryParameterExpression" : {
        "$ref" : "./CategoryParameterExpression.json"
      },
      "Category" : {
        "$ref" : "./Category.json"
      },
      "CategoryParameter" : {
        "$ref" : "./CategoryParameter.json"
      },
      "Customer" : {
        "$ref" : "./Customer.json"
      },
      "CustomerPreferences" : {
        "$ref" : "./CustomerPreferences.json"
      },
      "ContextSensitiveHelp" : {
        "$ref" : "./ContextSensitiveHelp.json"
      },
      "DocMetadataLinkGroup" : {
        "$ref" : "./DocMetadataLinkGroup.json"
      },
      "DocMetadataLink" : {
        "$ref" : "./DocMetadataLink.json"
      },
      "DocumentApproval" : {
        "$ref" : "./DocumentApproval.json"
      },
      "DocumentFolder" : {
        "$ref" : "./DocumentFolder.json"
      },
      "DocumentRequest" : {
        "$ref" : "./DocumentRequest.json"
      },
      "Document" : {
        "$ref" : "./Document.json"
      },
      "DocumentVersion" : {
        "$ref" : "./DocumentVersion.json"
      },
      "Endorsement" : {
        "$ref" : "./Endorsement.json"
      },
      "EndorsementShare" : {
        "$ref" : "./EndorsementShare.json"
      },
      "EwsFileHandle" : {
        "$ref" : "./EwsFileHandle.json"
      },
      "Expense" : {
        "$ref" : "./Expense.json"
      },
      "ExpenseType" : {
        "$ref" : "./ExpenseType.json"
      },
      "ExchangeRate" : {
        "$ref" : "./ExchangeRate.json"
      },
      "ExternalProviderConfig" : {
        "$ref" : "./ExternalProviderConfig.json"
      },
      "ExternalDocument" : {
        "$ref" : "./ExternalDocument.json"
      },
      "ExternalSection" : {
        "$ref" : "./ExternalSection.json"
      },
      "FinancialData" : {
        "$ref" : "./FinancialData.json"
      },
      "Favorite" : {
        "$ref" : "./Favorite.json"
      },
      "Group" : {
        "$ref" : "./Group.json"
      },
      "Hour" : {
        "$ref" : "./Hour.json"
      },
      "HourType" : {
        "$ref" : "./HourType.json"
      },
      "Initiative" : {
        "$ref" : "./Initiative.json"
      },
      "IPRange" : {
        "$ref" : "./IPRange.json"
      },
      "IssueDef" : {
        "$ref" : "./IssueDef.json"
      },
      "Iteration" : {
        "$ref" : "./Iteration.json"
      },
      "JournalEntry" : {
        "$ref" : "./JournalEntry.json"
      },
      "KanbanBoard" : {
        "$ref" : "./KanbanBoard.json"
      },
      "LoginAsAdditionalRule" : {
        "$ref" : "./LoginAsAdditionalRule.json"
      },
      "LoginAsAccessRule" : {
        "$ref" : "./LoginAsAccessRule.json"
      },
      "LoginAsSettings" : {
        "$ref" : "./LoginAsSettings.json"
      },
      "Like" : {
        "$ref" : "./Like.json"
      },
      "LinkedFolder" : {
        "$ref" : "./LinkedFolder.json"
      },
      "LicenseTypeGroupLimit" : {
        "$ref" : "./LicenseTypeGroupLimit.json"
      },
      "CustomLabel" : {
        "$ref" : "./CustomLabel.json"
      },
      "LayoutTemplate" : {
        "$ref" : "./LayoutTemplate.json"
      },
      "Milestone" : {
        "$ref" : "./Milestone.json"
      },
      "MilestonePath" : {
        "$ref" : "./MilestonePath.json"
      },
      "MessageArg" : {
        "$ref" : "./MessageArg.json"
      },
      "NonWorkDay" : {
        "$ref" : "./NonWorkDay.json"
      },
      "Note" : {
        "$ref" : "./Note.json"
      },
      "NoteTag" : {
        "$ref" : "./NoteTag.json"
      },
      "ObjectCategory" : {
        "$ref" : "./ObjectCategory.json"
      },
      "ObjectIntegration" : {
        "$ref" : "./ObjectIntegration.json"
      },
      "OpTask" : {
        "$ref" : "./OpTask.json"
      },
      "Parameter" : {
        "$ref" : "./Parameter.json"
      },
      "ParameterGroup" : {
        "$ref" : "./ParameterGroup.json"
      },
      "PortalSectionLastViewer" : {
        "$ref" : "./PortalSectionLastViewer.json"
      },
      "PortalSectionStatisticInfo" : {
        "$ref" : "./PortalSectionStatisticInfo.json"
      },
      "ParameterOption" : {
        "$ref" : "./ParameterOption.json"
      },
      "Portfolio" : {
        "$ref" : "./Portfolio.json"
      },
      "Predecessor" : {
        "$ref" : "./Predecessor.json"
      },
      "ProofAction" : {
        "$ref" : "./ProofAction.json"
      },
      "ProofApproval" : {
        "$ref" : "./ProofApproval.json"
      },
      "Program" : {
        "$ref" : "./Program.json"
      },
      "ParameterDescriptiveText" : {
        "$ref" : "./ParameterDescriptiveText.json"
      },
      "Project" : {
        "$ref" : "./Project.json"
      },
      "Proof" : {
        "$ref" : "./Proof.json"
      },
      "PortalTabSection" : {
        "$ref" : "./PortalTabSection.json"
      },
      "ProjectUser" : {
        "$ref" : "./ProjectUser.json"
      },
      "ProjectUserRole" : {
        "$ref" : "./ProjectUserRole.json"
      },
      "PortalSection" : {
        "$ref" : "./PortalSection.json"
      },
      "PortalTab" : {
        "$ref" : "./PortalTab.json"
      },
      "QueueDef" : {
        "$ref" : "./QueueDef.json"
      },
      "QueueTopic" : {
        "$ref" : "./QueueTopic.json"
      },
      "QueueTopicGroup" : {
        "$ref" : "./QueueTopicGroup.json"
      },
      "Rate" : {
        "$ref" : "./Rate.json"
      },
      "Recent" : {
        "$ref" : "./Recent.json"
      },
      "ResourceManager" : {
        "$ref" : "./ResourceManager.json"
      },
      "ReservedTime" : {
        "$ref" : "./ReservedTime.json"
      },
      "RichTextNote" : {
        "$ref" : "./RichTextNote.json"
      },
      "Risk" : {
        "$ref" : "./Risk.json"
      },
      "Role" : {
        "$ref" : "./Role.json"
      },
      "ReportableBudgetedHour" : {
        "$ref" : "./ReportableBudgetedHour.json"
      },
      "ResourcePlannerFilter" : {
        "$ref" : "./ResourcePlannerFilter.json"
      },
      "ReportFolder" : {
        "$ref" : "./ReportFolder.json"
      },
      "RoutingRule" : {
        "$ref" : "./RoutingRule.json"
      },
      "ResourceContour" : {
        "$ref" : "./ResourceContour.json"
      },
      "RiskType" : {
        "$ref" : "./RiskType.json"
      },
      "RsrcPool" : {
        "$ref" : "./RsrcPool.json"
      },
      "ResourcePool" : {
        "$ref" : "./ResourcePool.json"
      },
      "ScoreCardAnswer" : {
        "$ref" : "./ScoreCardAnswer.json"
      },
      "Schedule" : {
        "$ref" : "./Schedule.json"
      },
      "ScheduledReport" : {
        "$ref" : "./ScheduledReport.json"
      },
      "ScoreCardOption" : {
        "$ref" : "./ScoreCardOption.json"
      },
      "ScoreCard" : {
        "$ref" : "./ScoreCard.json"
      },
      "ScoreCardQuestion" : {
        "$ref" : "./ScoreCardQuestion.json"
      },
      "StepApprover" : {
        "$ref" : "./StepApprover.json"
      },
      "Subscribe" : {
        "$ref" : "./Subscribe.json"
      },
      "Task" : {
        "$ref" : "./Task.json"
      },
      "TemplateAssignment" : {
        "$ref" : "./TemplateAssignment.json"
      },
      "TeamMember" : {
        "$ref" : "./TeamMember.json"
      },
      "Team" : {
        "$ref" : "./Team.json"
      },
      "Template" : {
        "$ref" : "./Template.json"
      },
      "TemplateUser" : {
        "$ref" : "./TemplateUser.json"
      },
      "TemplatePredecessor" : {
        "$ref" : "./TemplatePredecessor.json"
      },
      "Timesheet" : {
        "$ref" : "./Timesheet.json"
      },
      "TaskDef" : {
        "$ref" : "./TaskDef.json"
      },
      "TimesheetProfile" : {
        "$ref" : "./TimesheetProfile.json"
      },
      "TemplateUserRole" : {
        "$ref" : "./TemplateUserRole.json"
      },
      "TemplateTask" : {
        "$ref" : "./TemplateTask.json"
      },
      "UserHomeCalendarPreference" : {
        "$ref" : "./UserHomeCalendarPreference.json"
      },
      "UIFilter" : {
        "$ref" : "./UIFilter.json"
      },
      "UIGroupBy" : {
        "$ref" : "./UIGroupBy.json"
      },
      "UITemplate" : {
        "$ref" : "./UITemplate.json"
      },
      "UIView" : {
        "$ref" : "./UIView.json"
      },
      "Update" : {
        "$ref" : "./Update.json"
      },
      "User" : {
        "$ref" : "./User.json"
      },
      "UserPrefValue" : {
        "$ref" : "./UserPrefValue.json"
      },
      "UserObjectPref" : {
        "$ref" : "./UserObjectPref.json"
      },
      "UserApproval" : {
        "$ref" : "./UserApproval.json"
      },
      "UserAvailability" : {
        "$ref" : "./UserAvailability.json"
      },
      "UserDelegation" : {
        "$ref" : "./UserDelegation.json"
      },
      "UserGroups" : {
        "$ref" : "./UserGroups.json"
      },
      "UserLocation" : {
        "$ref" : "./UserLocation.json"
      },
      "UserNote" : {
        "$ref" : "./UserNote.json"
      },
      "UserRole" : {
        "$ref" : "./UserRole.json"
      },
      "Work" : {
        "$ref" : "./Work.json"
      },
      "WorkItem" : {
        "$ref" : "./WorkItem.json"
      }
    },
    "responses" : {
      "200_OK" : {
        "description" : "Great Success",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "data" : {
                  "type" : "object",
                  "properties" : {
                    "success" : {
                      "type" : "boolean"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "422_UNPROCESSABLE_ENTITY" : {
        "description" : "The request contains invalid data.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "400_BAD_REQUEST" : {
        "description" : "The operation is not supported.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "429_TOO_MANY_REQUESTS" : {
        "description" : "Too many concurrent API requests for the given customer.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "403_FORBIDDEN" : {
        "description" : "The user does not have permission to perform the operation.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "401_UNAUTHORIZED" : {
        "description" : "The request is not authenticated.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404_NOT_FOUND" : {
        "description" : "The requested resource was not found.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "500_INTERNAL_SERVER_ERROR" : {
        "description" : "An unexpected error occurred.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "410_GONE" : {
        "description" : "The requested resource is no longer available in this API version.",
        "content" : {
          "application/json" : {
            "schema" : {
              "type" : "object",
              "properties" : {
                "error" : {
                  "type" : "object",
                  "properties" : {
                    "class" : {
                      "type" : "string"
                    },
                    "message" : {
                      "type" : "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes" : {
      "SessionIDHeader" : {
        "type" : "apiKey",
        "name" : "sessionID",
        "in" : "header"
      },
      "AtTaskCookie" : {
        "type" : "apiKey",
        "name" : "attask",
        "in" : "cookie"
      },
      "WFAuthCookie" : {
        "type" : "apiKey",
        "name" : "wf-auth",
        "in" : "cookie"
      },
      "ApiKeyHeader" : {
        "type" : "apiKey",
        "name" : "apiKey",
        "in" : "header"
      }
    }
  }
}